{
  "storage": [
    {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      "astId": 10413,
=======
      "astId": 10287,
>>>>>>> 7748a92 (interface)
=======
      "astId": 10341,
>>>>>>> f640da2 (confirm with configuration number)
=======
      "astId": 11071,
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
      "label": "s",
      "offset": 0,
      "slot": "0",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      "type": "t_struct(SubnetActorStorage)10401_storage"
=======
      "type": "t_struct(SubnetActorStorage)10275_storage"
>>>>>>> 7748a92 (interface)
=======
      "type": "t_struct(SubnetActorStorage)10329_storage"
>>>>>>> f640da2 (confirm with configuration number)
=======
      "type": "t_struct(SubnetActorStorage)11059_storage"
>>>>>>> fa018d6 (Adding min priority queue (#209))
    }
  ],
  "types": {
    "t_address": {
      "encoding": "inplace",
      "label": "address",
      "numberOfBytes": "20"
    },
    "t_array(t_address)dyn_storage": {
      "base": "t_address",
      "encoding": "dynamic_array",
      "label": "address[]",
      "numberOfBytes": "32"
    },
    "t_array(t_bytes32)dyn_storage": {
      "base": "t_bytes32",
      "encoding": "dynamic_array",
      "label": "bytes32[]",
      "numberOfBytes": "32"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_array(t_struct(ChildCheck)11867_storage)dyn_storage": {
      "base": "t_struct(ChildCheck)11867_storage",
=======
    "t_array(t_struct(ChildCheck)11741_storage)dyn_storage": {
      "base": "t_struct(ChildCheck)11741_storage",
>>>>>>> 7748a92 (interface)
=======
    "t_array(t_struct(ChildCheck)11795_storage)dyn_storage": {
      "base": "t_struct(ChildCheck)11795_storage",
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_array(t_struct(ChildCheck)13943_storage)dyn_storage": {
      "base": "t_struct(ChildCheck)13943_storage",
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "dynamic_array",
      "label": "struct ChildCheck[]",
      "numberOfBytes": "32"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_array(t_struct(CrossMsg)11873_storage)dyn_storage": {
      "base": "t_struct(CrossMsg)11873_storage",
=======
    "t_array(t_struct(CrossMsg)11747_storage)dyn_storage": {
      "base": "t_struct(CrossMsg)11747_storage",
>>>>>>> 7748a92 (interface)
=======
    "t_array(t_struct(CrossMsg)11801_storage)dyn_storage": {
      "base": "t_struct(CrossMsg)11801_storage",
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_array(t_struct(CrossMsg)13949_storage)dyn_storage": {
      "base": "t_struct(CrossMsg)13949_storage",
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "dynamic_array",
      "label": "struct CrossMsg[]",
      "numberOfBytes": "32"
    },
    "t_bool": {
      "encoding": "inplace",
      "label": "bool",
      "numberOfBytes": "1"
    },
    "t_bytes32": {
      "encoding": "inplace",
      "label": "bytes32",
      "numberOfBytes": "32"
    },
    "t_bytes4": {
      "encoding": "inplace",
      "label": "bytes4",
      "numberOfBytes": "4"
    },
    "t_bytes_storage": {
      "encoding": "bytes",
      "label": "bytes",
      "numberOfBytes": "32"
    },
<<<<<<< HEAD
    "t_enum(ConsensusType)4990": {
=======
    "t_enum(ConsensusType)4984": {
>>>>>>> f640da2 (confirm with configuration number)
      "encoding": "inplace",
      "label": "enum ConsensusType",
      "numberOfBytes": "1"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_enum(Status)5004": {
=======
    "t_enum(StakingOperation)11875": {
=======
    "t_enum(StakingOperation)14077": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "enum StakingOperation",
      "numberOfBytes": "1"
    },
<<<<<<< HEAD
    "t_enum(Status)4560": {
>>>>>>> 7748a92 (interface)
=======
=======
>>>>>>> fa018d6 (Adding min priority queue (#209))
    "t_enum(Status)4998": {
>>>>>>> f640da2 (confirm with configuration number)
      "encoding": "inplace",
      "label": "enum Status",
      "numberOfBytes": "1"
    },
    "t_mapping(t_address,t_bool)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => bool)",
      "numberOfBytes": "32",
      "value": "t_bool"
    },
    "t_mapping(t_address,t_string_storage)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => string)",
      "numberOfBytes": "32",
      "value": "t_string_storage"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_mapping(t_address,t_struct(FvmAddress)11952_storage)": {
=======
    "t_mapping(t_address,t_struct(FvmAddress)11826_storage)": {
>>>>>>> 7748a92 (interface)
=======
    "t_mapping(t_address,t_struct(FvmAddress)11880_storage)": {
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_mapping(t_address,t_struct(AddressStakingReleases)14115_storage)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => struct AddressStakingReleases)",
      "numberOfBytes": "32",
      "value": "t_struct(AddressStakingReleases)14115_storage"
    },
    "t_mapping(t_address,t_struct(FvmAddress)14028_storage)": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => struct FvmAddress)",
      "numberOfBytes": "32",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      "value": "t_struct(FvmAddress)11952_storage"
=======
      "value": "t_struct(FvmAddress)11826_storage"
=======
      "value": "t_struct(FvmAddress)11880_storage"
>>>>>>> f640da2 (confirm with configuration number)
=======
      "value": "t_struct(FvmAddress)14028_storage"
>>>>>>> fa018d6 (Adding min priority queue (#209))
    },
    "t_mapping(t_address,t_struct(Validator)14133_storage)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => struct Validator)",
      "numberOfBytes": "32",
<<<<<<< HEAD
<<<<<<< HEAD
      "value": "t_struct(Validator)11926_storage"
>>>>>>> 7748a92 (interface)
=======
      "value": "t_struct(Validator)11914_storage"
>>>>>>> f640da2 (confirm with configuration number)
=======
      "value": "t_struct(Validator)14133_storage"
>>>>>>> fa018d6 (Adding min priority queue (#209))
    },
    "t_mapping(t_address,t_uint256)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => uint256)",
      "numberOfBytes": "32",
      "value": "t_uint256"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_mapping(t_bytes32,t_struct(BottomUpCheckpointLegacy)11820_storage)": {
=======
    "t_mapping(t_address,t_uint64)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => uint64)",
      "numberOfBytes": "32",
      "value": "t_uint64"
    },
    "t_mapping(t_bytes32,t_struct(BottomUpCheckpoint)11694_storage)": {
>>>>>>> 7748a92 (interface)
=======
    "t_mapping(t_bytes32,t_struct(BottomUpCheckpoint)11748_storage)": {
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_mapping(t_bytes32,t_struct(BottomUpCheckpoint)13896_storage)": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "mapping",
      "key": "t_bytes32",
      "label": "mapping(bytes32 => struct BottomUpCheckpointLegacy)",
      "numberOfBytes": "32",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      "value": "t_struct(BottomUpCheckpointLegacy)11820_storage"
=======
      "value": "t_struct(BottomUpCheckpoint)11694_storage"
>>>>>>> 7748a92 (interface)
=======
      "value": "t_struct(BottomUpCheckpoint)11748_storage"
>>>>>>> f640da2 (confirm with configuration number)
=======
      "value": "t_struct(BottomUpCheckpoint)13896_storage"
>>>>>>> fa018d6 (Adding min priority queue (#209))
    },
    "t_mapping(t_bytes32,t_uint256)": {
      "encoding": "mapping",
      "key": "t_bytes32",
      "label": "mapping(bytes32 => uint256)",
      "numberOfBytes": "32",
      "value": "t_uint256"
    },
    "t_mapping(t_uint16,t_struct(StakingRelease)14105_storage)": {
      "encoding": "mapping",
      "key": "t_uint16",
      "label": "mapping(uint16 => struct StakingRelease)",
      "numberOfBytes": "32",
      "value": "t_struct(StakingRelease)14105_storage"
    },
    "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
      "encoding": "mapping",
      "key": "t_uint256",
      "label": "mapping(uint256 => mapping(address => bool))",
      "numberOfBytes": "32",
      "value": "t_mapping(t_address,t_bool)"
    },
    "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
      "encoding": "mapping",
      "key": "t_uint256",
      "label": "mapping(uint256 => mapping(bytes32 => uint256))",
      "numberOfBytes": "32",
      "value": "t_mapping(t_bytes32,t_uint256)"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_mapping(t_uint64,t_struct(BottomUpCheckpointLegacy)11820_storage)": {
=======
    "t_mapping(t_uint64,t_struct(BottomUpCheckpoint)11694_storage)": {
>>>>>>> 7748a92 (interface)
=======
    "t_mapping(t_uint64,t_struct(BottomUpCheckpoint)11748_storage)": {
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_mapping(t_uint64,t_struct(BottomUpCheckpoint)13896_storage)": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "mapping",
      "key": "t_uint64",
      "label": "mapping(uint64 => struct BottomUpCheckpointLegacy)",
      "numberOfBytes": "32",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      "value": "t_struct(BottomUpCheckpointLegacy)11820_storage"
    },
    "t_mapping(t_uint64,t_struct(EpochVoteBottomUpSubmission)11930_storage)": {
=======
      "value": "t_struct(BottomUpCheckpoint)11694_storage"
    },
    "t_mapping(t_uint64,t_struct(EpochVoteBottomUpSubmission)11804_storage)": {
>>>>>>> 7748a92 (interface)
=======
      "value": "t_struct(BottomUpCheckpoint)11748_storage"
    },
    "t_mapping(t_uint64,t_struct(EpochVoteBottomUpSubmission)11858_storage)": {
>>>>>>> f640da2 (confirm with configuration number)
=======
      "value": "t_struct(BottomUpCheckpoint)13896_storage"
    },
    "t_mapping(t_uint64,t_struct(EpochVoteBottomUpSubmission)14006_storage)": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "mapping",
      "key": "t_uint64",
      "label": "mapping(uint64 => struct EpochVoteBottomUpSubmission)",
      "numberOfBytes": "32",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      "value": "t_struct(EpochVoteBottomUpSubmission)11930_storage"
=======
      "value": "t_struct(EpochVoteBottomUpSubmission)11804_storage"
    },
    "t_mapping(t_uint64,t_struct(StakingChange)11883_storage)": {
=======
      "value": "t_struct(EpochVoteBottomUpSubmission)14006_storage"
    },
    "t_mapping(t_uint64,t_struct(StakingChange)14085_storage)": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "mapping",
      "key": "t_uint64",
      "label": "mapping(uint64 => struct StakingChange)",
      "numberOfBytes": "32",
<<<<<<< HEAD
      "value": "t_struct(StakingChange)11883_storage"
>>>>>>> 7748a92 (interface)
=======
      "value": "t_struct(EpochVoteBottomUpSubmission)11858_storage"
>>>>>>> f640da2 (confirm with configuration number)
=======
      "value": "t_struct(StakingChange)14085_storage"
>>>>>>> fa018d6 (Adding min priority queue (#209))
    },
    "t_string_storage": {
      "encoding": "bytes",
      "label": "string",
      "numberOfBytes": "32"
    },
    "t_struct(AddressSet)3420_storage": {
      "encoding": "inplace",
      "label": "struct EnumerableSet.AddressSet",
      "members": [
        {
          "astId": 3419,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "_inner",
          "offset": 0,
          "slot": "0",
          "type": "t_struct(Set)3105_storage"
        }
      ],
      "numberOfBytes": "64"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_struct(BottomUpCheckpointLegacy)11820_storage": {
=======
    "t_struct(BottomUpCheckpoint)11694_storage": {
>>>>>>> 7748a92 (interface)
=======
    "t_struct(BottomUpCheckpoint)11748_storage": {
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_struct(AddressStakingReleases)14115_storage": {
      "encoding": "inplace",
      "label": "struct AddressStakingReleases",
      "members": [
        {
          "astId": 14107,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "length",
          "offset": 0,
          "slot": "0",
          "type": "t_uint16"
        },
        {
          "astId": 14109,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "startIdx",
          "offset": 2,
          "slot": "0",
          "type": "t_uint16"
        },
        {
          "astId": 14114,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "releases",
          "offset": 0,
          "slot": "1",
          "type": "t_mapping(t_uint16,t_struct(StakingRelease)14105_storage)"
        }
      ],
      "numberOfBytes": "64"
    },
    "t_struct(BottomUpCheckpoint)13896_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct BottomUpCheckpointLegacy",
      "members": [
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11803,
=======
          "astId": 11677,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11731,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13879,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "source",
          "offset": 0,
          "slot": "0",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_struct(SubnetID)11978_storage"
        },
        {
          "astId": 11805,
=======
          "type": "t_struct(SubnetID)11852_storage"
        },
        {
          "astId": 11679,
>>>>>>> 7748a92 (interface)
=======
          "type": "t_struct(SubnetID)11906_storage"
        },
        {
          "astId": 11733,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_struct(SubnetID)14054_storage"
        },
        {
          "astId": 13881,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "epoch",
          "offset": 0,
          "slot": "2",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11807,
=======
          "astId": 11681,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11735,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13883,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "fee",
          "offset": 0,
          "slot": "3",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11811,
=======
          "astId": 11685,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11739,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13887,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "crossMsgs",
          "offset": 0,
          "slot": "4",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_array(t_struct(CrossMsg)11873_storage)dyn_storage"
        },
        {
          "astId": 11815,
=======
          "type": "t_array(t_struct(CrossMsg)11747_storage)dyn_storage"
        },
        {
          "astId": 11689,
>>>>>>> 7748a92 (interface)
=======
          "type": "t_array(t_struct(CrossMsg)11801_storage)dyn_storage"
        },
        {
          "astId": 11743,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_array(t_struct(CrossMsg)13949_storage)dyn_storage"
        },
        {
          "astId": 13891,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "children",
          "offset": 0,
          "slot": "5",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_array(t_struct(ChildCheck)11867_storage)dyn_storage"
        },
        {
          "astId": 11817,
=======
          "type": "t_array(t_struct(ChildCheck)11741_storage)dyn_storage"
        },
        {
          "astId": 11691,
>>>>>>> 7748a92 (interface)
=======
          "type": "t_array(t_struct(ChildCheck)11795_storage)dyn_storage"
        },
        {
          "astId": 11745,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_array(t_struct(ChildCheck)13943_storage)dyn_storage"
        },
        {
          "astId": 13893,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "prevHash",
          "offset": 0,
          "slot": "6",
          "type": "t_bytes32"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11819,
=======
          "astId": 11693,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11747,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13895,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "proof",
          "offset": 0,
          "slot": "7",
          "type": "t_bytes_storage"
        }
      ],
      "numberOfBytes": "256"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_struct(ChildCheck)11867_storage": {
=======
    "t_struct(ChildCheck)11741_storage": {
>>>>>>> 7748a92 (interface)
=======
    "t_struct(ChildCheck)11795_storage": {
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_struct(ChildCheck)13943_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct ChildCheck",
      "members": [
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11863,
=======
          "astId": 11737,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11791,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13939,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "source",
          "offset": 0,
          "slot": "0",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_struct(SubnetID)11978_storage"
        },
        {
          "astId": 11866,
=======
          "type": "t_struct(SubnetID)11852_storage"
        },
        {
          "astId": 11740,
>>>>>>> 7748a92 (interface)
=======
          "type": "t_struct(SubnetID)11906_storage"
        },
        {
          "astId": 11794,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_struct(SubnetID)14054_storage"
        },
        {
          "astId": 13942,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "checks",
          "offset": 0,
          "slot": "2",
          "type": "t_array(t_bytes32)dyn_storage"
        }
      ],
      "numberOfBytes": "96"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_struct(CrossMsg)11873_storage": {
=======
    "t_struct(CrossMsg)11747_storage": {
>>>>>>> 7748a92 (interface)
=======
    "t_struct(CrossMsg)11801_storage": {
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_struct(CrossMsg)13949_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct CrossMsg",
      "members": [
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11870,
=======
          "astId": 11744,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11798,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13946,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "message",
          "offset": 0,
          "slot": "0",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_struct(StorableMsg)11888_storage"
        },
        {
          "astId": 11872,
=======
          "type": "t_struct(StorableMsg)11762_storage"
        },
        {
          "astId": 11746,
>>>>>>> 7748a92 (interface)
=======
          "type": "t_struct(StorableMsg)11816_storage"
        },
        {
          "astId": 11800,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_struct(StorableMsg)13964_storage"
        },
        {
          "astId": 13948,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "wrapped",
          "offset": 0,
          "slot": "11",
          "type": "t_bool"
        }
      ],
      "numberOfBytes": "384"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_struct(EpochVoteBottomUpSubmission)11930_storage": {
=======
    "t_struct(EpochVoteBottomUpSubmission)11804_storage": {
>>>>>>> 7748a92 (interface)
=======
    "t_struct(EpochVoteBottomUpSubmission)11858_storage": {
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_struct(EpochVoteBottomUpSubmission)14006_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct EpochVoteBottomUpSubmission",
      "members": [
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11924,
=======
          "astId": 11798,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11852,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 14000,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "vote",
          "offset": 0,
          "slot": "0",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_struct(EpochVoteSubmission)11912_storage"
        },
        {
          "astId": 11929,
=======
          "type": "t_struct(EpochVoteSubmission)11786_storage"
        },
        {
          "astId": 11803,
>>>>>>> 7748a92 (interface)
=======
          "type": "t_struct(EpochVoteSubmission)11840_storage"
        },
        {
          "astId": 11857,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_struct(EpochVoteSubmission)13988_storage"
        },
        {
          "astId": 14005,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "submissions",
          "offset": 0,
          "slot": "5",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_mapping(t_bytes32,t_struct(BottomUpCheckpointLegacy)11820_storage)"
=======
          "type": "t_mapping(t_bytes32,t_struct(BottomUpCheckpoint)11694_storage)"
>>>>>>> 7748a92 (interface)
=======
          "type": "t_mapping(t_bytes32,t_struct(BottomUpCheckpoint)11748_storage)"
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_mapping(t_bytes32,t_struct(BottomUpCheckpoint)13896_storage)"
>>>>>>> fa018d6 (Adding min priority queue (#209))
        }
      ],
      "numberOfBytes": "192"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_struct(EpochVoteSubmission)11912_storage": {
=======
    "t_struct(EpochVoteSubmission)11786_storage": {
>>>>>>> 7748a92 (interface)
=======
    "t_struct(EpochVoteSubmission)11840_storage": {
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_struct(EpochVoteSubmission)13988_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct EpochVoteSubmission",
      "members": [
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11895,
=======
          "astId": 11769,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11823,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13971,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "nonce",
          "offset": 0,
          "slot": "0",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11897,
=======
          "astId": 11771,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11825,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13973,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "totalSubmissionWeight",
          "offset": 0,
          "slot": "1",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11899,
=======
          "astId": 11773,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11827,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13975,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "mostVotedSubmission",
          "offset": 0,
          "slot": "2",
          "type": "t_bytes32"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11905,
=======
          "astId": 11779,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11833,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13981,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "submitters",
          "offset": 0,
          "slot": "3",
          "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11911,
=======
          "astId": 11785,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11839,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13987,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "submissionWeights",
          "offset": 0,
          "slot": "4",
          "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))"
        }
      ],
      "numberOfBytes": "160"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_struct(FvmAddress)11952_storage": {
=======
    "t_struct(FvmAddress)11826_storage": {
>>>>>>> 7748a92 (interface)
=======
    "t_struct(FvmAddress)11880_storage": {
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_struct(FvmAddress)14028_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct FvmAddress",
      "members": [
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11949,
=======
          "astId": 11823,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11877,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 14025,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "addrType",
          "offset": 0,
          "slot": "0",
          "type": "t_uint8"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11951,
=======
          "astId": 11825,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11879,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 14027,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "payload",
          "offset": 0,
          "slot": "1",
          "type": "t_bytes_storage"
        }
      ],
      "numberOfBytes": "64"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_struct(IPCAddress)12005_storage": {
=======
    "t_struct(IPCAddress)11946_storage": {
>>>>>>> 7748a92 (interface)
=======
    "t_struct(IPCAddress)11953_storage": {
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_struct(IPCAddress)14153_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct IPCAddress",
      "members": [
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 12001,
=======
          "astId": 11942,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11949,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 14149,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "subnetId",
          "offset": 0,
          "slot": "0",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_struct(SubnetID)11978_storage"
        },
        {
          "astId": 12004,
=======
          "type": "t_struct(SubnetID)11852_storage"
        },
        {
          "astId": 11945,
>>>>>>> 7748a92 (interface)
=======
          "type": "t_struct(SubnetID)11906_storage"
        },
        {
          "astId": 11952,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_struct(SubnetID)14054_storage"
        },
        {
          "astId": 14152,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "rawAddress",
          "offset": 0,
          "slot": "2",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_struct(FvmAddress)11952_storage"
=======
          "type": "t_struct(FvmAddress)11826_storage"
>>>>>>> 7748a92 (interface)
=======
          "type": "t_struct(FvmAddress)11880_storage"
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_struct(FvmAddress)14028_storage"
>>>>>>> fa018d6 (Adding min priority queue (#209))
        }
      ],
      "numberOfBytes": "128"
    },
    "t_struct(Set)3105_storage": {
      "encoding": "inplace",
      "label": "struct EnumerableSet.Set",
      "members": [
        {
          "astId": 3100,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "_values",
          "offset": 0,
          "slot": "0",
          "type": "t_array(t_bytes32)dyn_storage"
        },
        {
          "astId": 3104,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "_indexes",
          "offset": 0,
          "slot": "1",
          "type": "t_mapping(t_bytes32,t_uint256)"
        }
      ],
      "numberOfBytes": "64"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_struct(StorableMsg)11888_storage": {
=======
    "t_struct(StakingChange)11883_storage": {
=======
    "t_struct(StakingChange)14085_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct StakingChange",
      "members": [
        {
<<<<<<< HEAD
          "astId": 11878,
=======
          "astId": 14080,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "op",
          "offset": 0,
          "slot": "0",
<<<<<<< HEAD
          "type": "t_enum(StakingOperation)11875"
        },
        {
          "astId": 11880,
=======
          "type": "t_enum(StakingOperation)14077"
        },
        {
          "astId": 14082,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "amount",
          "offset": 0,
          "slot": "1",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
          "astId": 11882,
=======
          "astId": 14084,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "validator",
          "offset": 0,
          "slot": "2",
          "type": "t_address"
        }
      ],
      "numberOfBytes": "96"
    },
<<<<<<< HEAD
    "t_struct(StakingChangeSet)11901_storage": {
=======
    "t_struct(StakingChangeSet)14098_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct StakingChangeSet",
      "members": [
        {
<<<<<<< HEAD
          "astId": 11886,
=======
          "astId": 14088,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "nextConfigurationNumber",
          "offset": 0,
          "slot": "0",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
          "astId": 11889,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "totalChanges",
=======
          "astId": 14091,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "startConfigurationNumber",
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "offset": 8,
          "slot": "0",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
          "astId": 11895,
=======
          "astId": 14097,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "changes",
          "offset": 0,
          "slot": "1",
<<<<<<< HEAD
          "type": "t_mapping(t_uint64,t_struct(StakingChange)11883_storage)"
        },
        {
          "astId": 11900,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "validators",
          "offset": 0,
          "slot": "2",
          "type": "t_mapping(t_address,t_uint64)"
        }
      ],
      "numberOfBytes": "96"
    },
    "t_struct(StakingRelease)11908_storage": {
=======
          "type": "t_mapping(t_uint64,t_struct(StakingChange)14085_storage)"
        }
      ],
      "numberOfBytes": "64"
    },
    "t_struct(StakingRelease)14105_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct StakingRelease",
      "members": [
        {
<<<<<<< HEAD
          "astId": 11904,
=======
          "astId": 14101,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "releaseAt",
          "offset": 0,
          "slot": "0",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
          "astId": 11907,
=======
          "astId": 14104,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "amount",
          "offset": 0,
          "slot": "1",
          "type": "t_uint256"
        }
      ],
      "numberOfBytes": "64"
    },
<<<<<<< HEAD
    "t_struct(StakingReleaseQueue)11919_storage": {
=======
    "t_struct(StakingReleaseQueue)14125_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct StakingReleaseQueue",
      "members": [
        {
<<<<<<< HEAD
          "astId": 11911,
=======
          "astId": 14118,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "lockingDuration",
          "offset": 0,
          "slot": "0",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
          "astId": 11918,
=======
          "astId": 14124,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "releases",
          "offset": 0,
          "slot": "1",
<<<<<<< HEAD
          "type": "t_mapping(t_address,t_array(t_struct(StakingRelease)11908_storage)dyn_storage)"
=======
          "type": "t_mapping(t_address,t_struct(AddressStakingReleases)14115_storage)"
>>>>>>> fa018d6 (Adding min priority queue (#209))
        }
      ],
      "numberOfBytes": "64"
    },
<<<<<<< HEAD
    "t_struct(StorableMsg)11762_storage": {
>>>>>>> 7748a92 (interface)
=======
    "t_struct(StorableMsg)11816_storage": {
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_struct(StorableMsg)13964_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct StorableMsg",
      "members": [
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11876,
=======
          "astId": 11750,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11804,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13952,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "from",
          "offset": 0,
          "slot": "0",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_struct(IPCAddress)12005_storage"
        },
        {
          "astId": 11879,
=======
          "type": "t_struct(IPCAddress)11946_storage"
        },
        {
          "astId": 11753,
>>>>>>> 7748a92 (interface)
=======
          "type": "t_struct(IPCAddress)11953_storage"
        },
        {
          "astId": 11807,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_struct(IPCAddress)14153_storage"
        },
        {
          "astId": 13955,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "to",
          "offset": 0,
          "slot": "4",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_struct(IPCAddress)12005_storage"
        },
        {
          "astId": 11881,
=======
          "type": "t_struct(IPCAddress)11946_storage"
        },
        {
          "astId": 11755,
>>>>>>> 7748a92 (interface)
=======
          "type": "t_struct(IPCAddress)11953_storage"
        },
        {
          "astId": 11809,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_struct(IPCAddress)14153_storage"
        },
        {
          "astId": 13957,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "value",
          "offset": 0,
          "slot": "8",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11883,
=======
          "astId": 11757,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11811,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13959,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "nonce",
          "offset": 0,
          "slot": "9",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11885,
=======
          "astId": 11759,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11813,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13961,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "method",
          "offset": 8,
          "slot": "9",
          "type": "t_bytes4"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11887,
=======
          "astId": 11761,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11815,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 13963,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "params",
          "offset": 0,
          "slot": "10",
          "type": "t_bytes_storage"
        }
      ],
      "numberOfBytes": "352"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_struct(SubnetActorStorage)10401_storage": {
=======
    "t_struct(SubnetActorStorage)10275_storage": {
>>>>>>> 7748a92 (interface)
=======
    "t_struct(SubnetActorStorage)10329_storage": {
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_struct(SubnetActorStorage)11059_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct SubnetActorStorage",
      "members": [
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10325,
=======
          "astId": 10187,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10242,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 10971,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "epochVoteSubmissions",
          "offset": 0,
          "slot": "0",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_mapping(t_uint64,t_struct(EpochVoteBottomUpSubmission)11930_storage)"
        },
        {
          "astId": 10330,
=======
          "type": "t_mapping(t_uint64,t_struct(EpochVoteBottomUpSubmission)11804_storage)"
        },
        {
          "astId": 10192,
>>>>>>> 7748a92 (interface)
=======
          "type": "t_mapping(t_uint64,t_struct(EpochVoteBottomUpSubmission)11858_storage)"
        },
        {
          "astId": 10247,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_mapping(t_uint64,t_struct(EpochVoteBottomUpSubmission)14006_storage)"
        },
        {
          "astId": 10976,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "stake",
          "offset": 0,
          "slot": "1",
          "type": "t_mapping(t_address,t_uint256)"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10335,
=======
          "astId": 10197,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10252,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 10981,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "accumulatedRewards",
          "offset": 0,
          "slot": "2",
          "type": "t_mapping(t_address,t_uint256)"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10340,
=======
          "astId": 10202,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10257,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 10986,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "validatorNetAddresses",
          "offset": 0,
          "slot": "3",
          "type": "t_mapping(t_address,t_string_storage)"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10346,
=======
          "astId": 10208,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10263,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 10992,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "validatorWorkerAddresses",
          "offset": 0,
          "slot": "4",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_mapping(t_address,t_struct(FvmAddress)11952_storage)"
        },
        {
          "astId": 10352,
=======
          "type": "t_mapping(t_address,t_struct(FvmAddress)11826_storage)"
        },
        {
          "astId": 10214,
>>>>>>> 7748a92 (interface)
=======
          "type": "t_mapping(t_address,t_struct(FvmAddress)11880_storage)"
        },
        {
          "astId": 10269,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_mapping(t_address,t_struct(FvmAddress)14028_storage)"
        },
        {
          "astId": 10998,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "committedCheckpoints",
          "offset": 0,
          "slot": "5",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_mapping(t_uint64,t_struct(BottomUpCheckpointLegacy)11820_storage)"
        },
        {
          "astId": 10355,
=======
          "type": "t_mapping(t_uint64,t_struct(BottomUpCheckpoint)11694_storage)"
        },
        {
          "astId": 10217,
>>>>>>> 7748a92 (interface)
=======
          "type": "t_mapping(t_uint64,t_struct(BottomUpCheckpoint)11748_storage)"
        },
        {
          "astId": 10272,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_mapping(t_uint64,t_struct(BottomUpCheckpoint)13896_storage)"
        },
        {
          "astId": 11001,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "genesis",
          "offset": 0,
          "slot": "6",
          "type": "t_bytes_storage"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10358,
=======
          "astId": 10220,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10275,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 11004,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "totalStake",
          "offset": 0,
          "slot": "7",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10361,
=======
          "astId": 10223,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10278,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 11007,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "minActivationCollateral",
          "offset": 0,
          "slot": "8",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10364,
=======
          "astId": 10226,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10281,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 11010,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "configurationNumber",
          "offset": 0,
          "slot": "9",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10367,
=======
          "astId": 10229,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10284,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 11013,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "topDownCheckPeriod",
          "offset": 8,
          "slot": "9",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10370,
=======
          "astId": 10232,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10287,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 11016,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "bottomUpCheckPeriod",
          "offset": 16,
          "slot": "9",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10373,
=======
          "astId": 10235,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11019,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "minValidators",
          "offset": 24,
          "slot": "9",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10376,
=======
          "astId": 10238,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10290,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 11022,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "name",
          "offset": 0,
          "slot": "10",
          "type": "t_bytes32"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10378,
=======
          "astId": 10240,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10292,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 11024,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "currentSubnetHash",
          "offset": 0,
          "slot": "11",
          "type": "t_bytes32"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10381,
=======
          "astId": 10243,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10295,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 11027,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "prevExecutedCheckpointHash",
          "offset": 0,
          "slot": "12",
          "type": "t_bytes32"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10384,
=======
          "astId": 10246,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10298,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 11030,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "ipcGatewayAddr",
          "offset": 0,
          "slot": "13",
          "type": "t_address"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 10388,
=======
          "astId": 10250,
>>>>>>> 7748a92 (interface)
=======
          "astId": 10302,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 11034,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "status",
          "offset": 20,
          "slot": "13",
<<<<<<< HEAD
          "type": "t_enum(Status)5004"
        },
        {
<<<<<<< HEAD
          "astId": 10392,
=======
          "astId": 10254,
>>>>>>> 7748a92 (interface)
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "validators",
          "offset": 0,
          "slot": "14",
          "type": "t_struct(AddressSet)3420_storage"
        },
        {
<<<<<<< HEAD
          "astId": 10396,
=======
          "astId": 10258,
>>>>>>> 7748a92 (interface)
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "parentId",
          "offset": 0,
          "slot": "16",
<<<<<<< HEAD
          "type": "t_struct(SubnetID)11978_storage"
        },
        {
          "astId": 10400,
=======
          "type": "t_struct(SubnetID)11852_storage"
        },
        {
          "astId": 10262,
>>>>>>> 7748a92 (interface)
=======
          "type": "t_enum(Status)4998"
        },
        {
<<<<<<< HEAD
          "astId": 10306,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "parentId",
          "offset": 0,
          "slot": "14",
          "type": "t_struct(SubnetID)11906_storage"
        },
        {
          "astId": 10310,
>>>>>>> f640da2 (confirm with configuration number)
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "consensus",
          "offset": 0,
          "slot": "16",
          "type": "t_enum(ConsensusType)4984"
        },
        {
          "astId": 10313,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "configurationNumber",
          "offset": 1,
          "slot": "16",
          "type": "t_uint64"
        },
        {
          "astId": 10318,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "validatorSetChanges",
          "offset": 0,
          "slot": "17",
          "type": "t_array(t_struct(ValidatorChange)11923_storage)dyn_storage"
        },
        {
          "astId": 10322,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "validators",
          "offset": 0,
          "slot": "18",
<<<<<<< HEAD
<<<<<<< HEAD
          "type": "t_enum(ConsensusType)4990"
=======
          "type": "t_enum(ConsensusType)4546"
=======
=======
          "astId": 11038,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "validators",
          "offset": 0,
          "slot": "14",
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "type": "t_struct(AddressSet)3420_storage"
>>>>>>> f640da2 (confirm with configuration number)
        },
        {
          "astId": 11042,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "parentId",
          "offset": 0,
<<<<<<< HEAD
<<<<<<< HEAD
          "slot": "19",
          "type": "t_struct(ValidatorSet)11939_storage"
        },
        {
          "astId": 10270,
=======
          "slot": "16",
          "type": "t_struct(SubnetID)14054_storage"
        },
        {
          "astId": 11046,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "consensus",
          "offset": 0,
          "slot": "18",
          "type": "t_enum(ConsensusType)4984"
        },
        {
          "astId": 11050,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "validatorSet",
          "offset": 0,
          "slot": "19",
          "type": "t_struct(ValidatorSet)14146_storage"
        },
        {
          "astId": 11054,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "changeSet",
          "offset": 0,
          "slot": "21",
<<<<<<< HEAD
          "type": "t_struct(StakingChangeSet)11901_storage"
        },
        {
          "astId": 10274,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "releaseQueue",
          "offset": 0,
          "slot": "24",
          "type": "t_struct(StakingReleaseQueue)11919_storage"
>>>>>>> 7748a92 (interface)
=======
          "slot": "20",
          "type": "t_mapping(t_address,t_struct(Validator)11914_storage)"
>>>>>>> f640da2 (confirm with configuration number)
=======
          "type": "t_struct(StakingChangeSet)14098_storage"
        },
        {
          "astId": 11058,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "releaseQueue",
          "offset": 0,
          "slot": "23",
          "type": "t_struct(StakingReleaseQueue)14125_storage"
>>>>>>> fa018d6 (Adding min priority queue (#209))
        }
      ],
      "numberOfBytes": "800"
    },
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    "t_struct(SubnetID)11978_storage": {
=======
    "t_struct(SubnetID)11852_storage": {
>>>>>>> 7748a92 (interface)
=======
    "t_struct(SubnetID)11906_storage": {
>>>>>>> f640da2 (confirm with configuration number)
=======
    "t_struct(SubnetID)14054_storage": {
>>>>>>> fa018d6 (Adding min priority queue (#209))
      "encoding": "inplace",
      "label": "struct SubnetID",
      "members": [
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11973,
=======
          "astId": 11847,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11901,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 14049,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "root",
          "offset": 0,
          "slot": "0",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          "astId": 11977,
=======
          "astId": 11851,
>>>>>>> 7748a92 (interface)
=======
          "astId": 11905,
>>>>>>> f640da2 (confirm with configuration number)
=======
          "astId": 14053,
>>>>>>> fa018d6 (Adding min priority queue (#209))
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "route",
          "offset": 0,
          "slot": "1",
          "type": "t_array(t_address)dyn_storage"
        }
      ],
      "numberOfBytes": "64"
    },
    "t_struct(Validator)14133_storage": {
      "encoding": "inplace",
      "label": "struct Validator",
      "members": [
        {
          "astId": 14127,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "confirmedCollateral",
          "offset": 0,
          "slot": "0",
          "type": "t_uint256"
        },
        {
          "astId": 14129,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "totalCollateral",
          "offset": 0,
          "slot": "1",
          "type": "t_uint256"
        },
        {
          "astId": 14132,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "data",
          "offset": 0,
          "slot": "2",
          "type": "t_bytes_storage"
        }
      ],
      "numberOfBytes": "96"
    },
    "t_struct(ValidatorSet)14146_storage": {
      "encoding": "inplace",
      "label": "struct ValidatorSet",
      "members": [
        {
          "astId": 14136,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "activeLimit",
          "offset": 0,
          "slot": "0",
          "type": "t_uint16"
        },
        {
          "astId": 14139,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "totalValidators",
          "offset": 2,
          "slot": "0",
          "type": "t_uint16"
        },
        {
          "astId": 14145,
          "contract": "src/lib/LibSubnetActorStorage.sol:SubnetActorModifiers",
          "label": "validators",
          "offset": 0,
          "slot": "1",
          "type": "t_mapping(t_address,t_struct(Validator)14133_storage)"
        }
      ],
      "numberOfBytes": "64"
    },
    "t_uint16": {
      "encoding": "inplace",
      "label": "uint16",
      "numberOfBytes": "2"
    },
    "t_uint256": {
      "encoding": "inplace",
      "label": "uint256",
      "numberOfBytes": "32"
    },
    "t_uint64": {
      "encoding": "inplace",
      "label": "uint64",
      "numberOfBytes": "8"
    },
    "t_uint8": {
      "encoding": "inplace",
      "label": "uint8",
      "numberOfBytes": "1"
    }
  }
}
