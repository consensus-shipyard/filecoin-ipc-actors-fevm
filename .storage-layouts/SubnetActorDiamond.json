{
  "storage": [
    {
      "astId": 3962,
      "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
      "label": "s",
      "offset": 0,
      "slot": "0",
<<<<<<< HEAD
      "type": "t_struct(SubnetActorStorage)12460_storage"
=======
      "type": "t_struct(SubnetActorStorage)11996_storage"
>>>>>>> dev
    }
  ],
  "types": {
    "t_address": {
      "encoding": "inplace",
      "label": "address",
      "numberOfBytes": "20"
    },
    "t_array(t_address)dyn_storage": {
      "base": "t_address",
      "encoding": "dynamic_array",
      "label": "address[]",
      "numberOfBytes": "32"
    },
<<<<<<< HEAD
    "t_array(t_bytes32)dyn_storage": {
      "base": "t_bytes32",
      "encoding": "dynamic_array",
      "label": "bytes32[]",
      "numberOfBytes": "32"
    },
    "t_array(t_struct(GenesisValidator)14859_storage)dyn_storage": {
      "base": "t_struct(GenesisValidator)14859_storage",
=======
    "t_array(t_struct(Validator)14385_storage)dyn_storage": {
      "base": "t_struct(Validator)14385_storage",
>>>>>>> dev
      "encoding": "dynamic_array",
      "label": "struct Validator[]",
      "numberOfBytes": "32"
    },
    "t_bool": {
      "encoding": "inplace",
      "label": "bool",
      "numberOfBytes": "1"
    },
    "t_bytes32": {
      "encoding": "inplace",
      "label": "bytes32",
      "numberOfBytes": "32"
    },
    "t_bytes_storage": {
      "encoding": "bytes",
      "label": "bytes",
      "numberOfBytes": "32"
    },
<<<<<<< HEAD
    "t_enum(ConsensusType)5070": {
=======
    "t_enum(ConsensusType)4993": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "enum ConsensusType",
      "numberOfBytes": "1"
    },
<<<<<<< HEAD
    "t_enum(StakingOperation)14790": {
=======
    "t_enum(StakingOperation)14281": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "enum StakingOperation",
      "numberOfBytes": "1"
    },
<<<<<<< HEAD
    "t_mapping(t_address,t_struct(AddressStakingReleases)14834_storage)": {
=======
    "t_mapping(t_address,t_struct(AddressStakingReleases)14325_storage)": {
>>>>>>> dev
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => struct AddressStakingReleases)",
      "numberOfBytes": "32",
<<<<<<< HEAD
      "value": "t_struct(AddressStakingReleases)14834_storage"
    },
    "t_mapping(t_address,t_struct(Validator)14852_storage)": {
=======
      "value": "t_struct(AddressStakingReleases)14325_storage"
    },
    "t_mapping(t_address,t_struct(ValidatorInfo)14343_storage)": {
>>>>>>> dev
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => struct ValidatorInfo)",
      "numberOfBytes": "32",
<<<<<<< HEAD
      "value": "t_struct(Validator)14852_storage"
=======
      "value": "t_struct(ValidatorInfo)14343_storage"
>>>>>>> dev
    },
    "t_mapping(t_address,t_uint16)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => uint16)",
      "numberOfBytes": "32",
      "value": "t_uint16"
    },
    "t_mapping(t_address,t_uint256)": {
      "encoding": "mapping",
      "key": "t_address",
      "label": "mapping(address => uint256)",
      "numberOfBytes": "32",
      "value": "t_uint256"
    },
    "t_mapping(t_bytes32,t_uint256)": {
      "encoding": "mapping",
      "key": "t_bytes32",
      "label": "mapping(bytes32 => uint256)",
      "numberOfBytes": "32",
      "value": "t_uint256"
    },
    "t_mapping(t_uint16,t_address)": {
      "encoding": "mapping",
      "key": "t_uint16",
      "label": "mapping(uint16 => address)",
      "numberOfBytes": "32",
      "value": "t_address"
    },
<<<<<<< HEAD
    "t_mapping(t_uint16,t_struct(StakingRelease)14824_storage)": {
=======
    "t_mapping(t_uint16,t_struct(StakingRelease)14315_storage)": {
>>>>>>> dev
      "encoding": "mapping",
      "key": "t_uint16",
      "label": "mapping(uint16 => struct StakingRelease)",
      "numberOfBytes": "32",
<<<<<<< HEAD
      "value": "t_struct(StakingRelease)14824_storage"
    },
    "t_mapping(t_uint64,t_struct(AddressSet)3420_storage)": {
      "encoding": "mapping",
      "key": "t_uint64",
      "label": "mapping(uint64 => struct EnumerableSet.AddressSet)",
      "numberOfBytes": "32",
      "value": "t_struct(AddressSet)3420_storage"
    },
    "t_mapping(t_uint64,t_struct(BottomUpCheckpoint)14681_storage)": {
=======
      "value": "t_struct(StakingRelease)14315_storage"
    },
    "t_mapping(t_uint64,t_struct(BottomUpCheckpoint)14183_storage)": {
>>>>>>> dev
      "encoding": "mapping",
      "key": "t_uint64",
      "label": "mapping(uint64 => struct BottomUpCheckpoint)",
      "numberOfBytes": "32",
<<<<<<< HEAD
      "value": "t_struct(BottomUpCheckpoint)14681_storage"
    },
    "t_mapping(t_uint64,t_struct(StakingChange)14798_storage)": {
=======
      "value": "t_struct(BottomUpCheckpoint)14183_storage"
    },
    "t_mapping(t_uint64,t_struct(StakingChange)14289_storage)": {
>>>>>>> dev
      "encoding": "mapping",
      "key": "t_uint64",
      "label": "mapping(uint64 => struct StakingChange)",
      "numberOfBytes": "32",
<<<<<<< HEAD
      "value": "t_struct(StakingChange)14798_storage"
    },
    "t_struct(AddressSet)3420_storage": {
      "encoding": "inplace",
      "label": "struct EnumerableSet.AddressSet",
      "members": [
        {
          "astId": 3419,
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "_inner",
          "offset": 0,
          "slot": "0",
          "type": "t_struct(Set)3105_storage"
        }
      ],
      "numberOfBytes": "64"
    },
    "t_struct(AddressStakingReleases)14834_storage": {
=======
      "value": "t_struct(StakingChange)14289_storage"
    },
    "t_struct(AddressStakingReleases)14325_storage": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "struct AddressStakingReleases",
      "members": [
        {
<<<<<<< HEAD
          "astId": 14826,
=======
          "astId": 14317,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "length",
          "offset": 0,
          "slot": "0",
          "type": "t_uint16"
        },
        {
<<<<<<< HEAD
          "astId": 14828,
=======
          "astId": 14319,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "startIdx",
          "offset": 2,
          "slot": "0",
          "type": "t_uint16"
        },
        {
<<<<<<< HEAD
          "astId": 14833,
=======
          "astId": 14324,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "releases",
          "offset": 0,
          "slot": "1",
<<<<<<< HEAD
          "type": "t_mapping(t_uint16,t_struct(StakingRelease)14824_storage)"
=======
          "type": "t_mapping(t_uint16,t_struct(StakingRelease)14315_storage)"
>>>>>>> dev
        }
      ],
      "numberOfBytes": "64"
    },
<<<<<<< HEAD
    "t_struct(BottomUpCheckpoint)14681_storage": {
=======
    "t_struct(BottomUpCheckpoint)14183_storage": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "struct BottomUpCheckpoint",
      "members": [
        {
<<<<<<< HEAD
          "astId": 14668,
=======
          "astId": 14170,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "subnetID",
          "offset": 0,
          "slot": "0",
<<<<<<< HEAD
          "type": "t_struct(SubnetID)14769_storage"
        },
        {
          "astId": 14671,
=======
          "type": "t_struct(SubnetID)14257_storage"
        },
        {
          "astId": 14173,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "blockHeight",
          "offset": 0,
          "slot": "2",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
          "astId": 14674,
=======
          "astId": 14176,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "blockHash",
          "offset": 0,
          "slot": "3",
          "type": "t_bytes32"
        },
        {
<<<<<<< HEAD
          "astId": 14677,
=======
          "astId": 14179,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "nextConfigurationNumber",
          "offset": 0,
          "slot": "4",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
          "astId": 14680,
=======
          "astId": 14182,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "crossMessagesHash",
          "offset": 0,
          "slot": "5",
          "type": "t_bytes32"
        }
      ],
      "numberOfBytes": "192"
    },
<<<<<<< HEAD
    "t_struct(GenesisValidator)14859_storage": {
      "encoding": "inplace",
      "label": "struct GenesisValidator",
      "members": [
        {
          "astId": 14854,
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "addr",
          "offset": 0,
          "slot": "0",
          "type": "t_address"
        },
        {
          "astId": 14856,
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "collateral",
          "offset": 0,
          "slot": "1",
          "type": "t_uint256"
        },
        {
          "astId": 14858,
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "metadata",
          "offset": 0,
          "slot": "2",
          "type": "t_bytes_storage"
        }
      ],
      "numberOfBytes": "96"
    },
    "t_struct(MaxPQ)13215_storage": {
=======
    "t_struct(MaxPQ)12751_storage": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "struct MaxPQ",
      "members": [
        {
<<<<<<< HEAD
          "astId": 13214,
=======
          "astId": 12750,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "inner",
          "offset": 0,
          "slot": "0",
<<<<<<< HEAD
          "type": "t_struct(PQ)14452_storage"
=======
          "type": "t_struct(PQ)13954_storage"
>>>>>>> dev
        }
      ],
      "numberOfBytes": "96"
    },
<<<<<<< HEAD
    "t_struct(MinPQ)13828_storage": {
=======
    "t_struct(MinPQ)13347_storage": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "struct MinPQ",
      "members": [
        {
<<<<<<< HEAD
          "astId": 13827,
=======
          "astId": 13346,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "inner",
          "offset": 0,
          "slot": "0",
<<<<<<< HEAD
          "type": "t_struct(PQ)14452_storage"
=======
          "type": "t_struct(PQ)13954_storage"
>>>>>>> dev
        }
      ],
      "numberOfBytes": "96"
    },
<<<<<<< HEAD
    "t_struct(PQ)14452_storage": {
=======
    "t_struct(PQ)13954_storage": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "struct PQ",
      "members": [
        {
<<<<<<< HEAD
          "astId": 14441,
=======
          "astId": 13943,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "size",
          "offset": 0,
          "slot": "0",
          "type": "t_uint16"
        },
        {
<<<<<<< HEAD
          "astId": 14446,
=======
          "astId": 13948,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "addressToPos",
          "offset": 0,
          "slot": "1",
          "type": "t_mapping(t_address,t_uint16)"
        },
        {
<<<<<<< HEAD
          "astId": 14451,
=======
          "astId": 13953,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "posToAddress",
          "offset": 0,
          "slot": "2",
          "type": "t_mapping(t_uint16,t_address)"
        }
      ],
      "numberOfBytes": "96"
    },
<<<<<<< HEAD
    "t_struct(Set)3105_storage": {
      "encoding": "inplace",
      "label": "struct EnumerableSet.Set",
      "members": [
        {
          "astId": 3100,
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "_values",
          "offset": 0,
          "slot": "0",
          "type": "t_array(t_bytes32)dyn_storage"
        },
        {
          "astId": 3104,
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "_indexes",
          "offset": 0,
          "slot": "1",
          "type": "t_mapping(t_bytes32,t_uint256)"
        }
      ],
      "numberOfBytes": "64"
    },
    "t_struct(StakingChange)14798_storage": {
=======
    "t_struct(StakingChange)14289_storage": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "struct StakingChange",
      "members": [
        {
<<<<<<< HEAD
          "astId": 14793,
=======
          "astId": 14284,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "op",
          "offset": 0,
          "slot": "0",
<<<<<<< HEAD
          "type": "t_enum(StakingOperation)14790"
        },
        {
          "astId": 14795,
=======
          "type": "t_enum(StakingOperation)14281"
        },
        {
          "astId": 14286,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "payload",
          "offset": 0,
          "slot": "1",
          "type": "t_bytes_storage"
        },
        {
<<<<<<< HEAD
          "astId": 14797,
=======
          "astId": 14288,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "validator",
          "offset": 0,
          "slot": "2",
          "type": "t_address"
        }
      ],
      "numberOfBytes": "96"
    },
<<<<<<< HEAD
    "t_struct(StakingChangeLog)14817_storage": {
=======
    "t_struct(StakingChangeLog)14308_storage": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "struct StakingChangeLog",
      "members": [
        {
<<<<<<< HEAD
          "astId": 14807,
=======
          "astId": 14298,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "nextConfigurationNumber",
          "offset": 0,
          "slot": "0",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
          "astId": 14810,
=======
          "astId": 14301,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "startConfigurationNumber",
          "offset": 8,
          "slot": "0",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
          "astId": 14816,
=======
          "astId": 14307,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "changes",
          "offset": 0,
          "slot": "1",
<<<<<<< HEAD
          "type": "t_mapping(t_uint64,t_struct(StakingChange)14798_storage)"
=======
          "type": "t_mapping(t_uint64,t_struct(StakingChange)14289_storage)"
>>>>>>> dev
        }
      ],
      "numberOfBytes": "64"
    },
<<<<<<< HEAD
    "t_struct(StakingRelease)14824_storage": {
=======
    "t_struct(StakingRelease)14315_storage": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "struct StakingRelease",
      "members": [
        {
<<<<<<< HEAD
          "astId": 14820,
=======
          "astId": 14311,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "releaseAt",
          "offset": 0,
          "slot": "0",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
          "astId": 14823,
=======
          "astId": 14314,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "amount",
          "offset": 0,
          "slot": "1",
          "type": "t_uint256"
        }
      ],
      "numberOfBytes": "64"
    },
<<<<<<< HEAD
    "t_struct(StakingReleaseQueue)14844_storage": {
=======
    "t_struct(StakingReleaseQueue)14335_storage": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "struct StakingReleaseQueue",
      "members": [
        {
<<<<<<< HEAD
          "astId": 14837,
=======
          "astId": 14328,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "lockingDuration",
          "offset": 0,
          "slot": "0",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
          "astId": 14843,
=======
          "astId": 14334,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "releases",
          "offset": 0,
          "slot": "1",
<<<<<<< HEAD
          "type": "t_mapping(t_address,t_struct(AddressStakingReleases)14834_storage)"
=======
          "type": "t_mapping(t_address,t_struct(AddressStakingReleases)14325_storage)"
>>>>>>> dev
        }
      ],
      "numberOfBytes": "64"
    },
<<<<<<< HEAD
    "t_struct(SubnetActorStorage)12460_storage": {
=======
    "t_struct(SubnetActorStorage)11996_storage": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "struct SubnetActorStorage",
      "members": [
        {
<<<<<<< HEAD
          "astId": 12392,
=======
          "astId": 11942,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "committedCheckpoints",
          "offset": 0,
          "slot": "0",
<<<<<<< HEAD
          "type": "t_mapping(t_uint64,t_struct(BottomUpCheckpoint)14681_storage)"
        },
        {
          "astId": 12396,
=======
          "type": "t_mapping(t_uint64,t_struct(BottomUpCheckpoint)14183_storage)"
        },
        {
          "astId": 11946,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "genesisValidators",
          "offset": 0,
          "slot": "1",
<<<<<<< HEAD
          "type": "t_array(t_struct(GenesisValidator)14859_storage)dyn_storage"
        },
        {
          "astId": 12399,
=======
          "type": "t_array(t_struct(Validator)14385_storage)dyn_storage"
        },
        {
          "astId": 11949,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "lastBottomUpCheckpointHeight",
          "offset": 0,
          "slot": "2",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
          "astId": 12402,
=======
          "astId": 11952,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "minActivationCollateral",
          "offset": 0,
          "slot": "3",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
          "astId": 12405,
=======
          "astId": 11955,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "bottomUpCheckPeriod",
          "offset": 0,
          "slot": "4",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
          "astId": 12408,
=======
          "astId": 11958,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "minValidators",
          "offset": 8,
          "slot": "4",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
          "astId": 12411,
=======
          "astId": 11961,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "name",
          "offset": 0,
          "slot": "5",
          "type": "t_bytes32"
        },
        {
<<<<<<< HEAD
          "astId": 12413,
=======
          "astId": 11963,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "currentSubnetHash",
          "offset": 0,
          "slot": "6",
          "type": "t_bytes32"
        },
        {
<<<<<<< HEAD
          "astId": 12416,
=======
          "astId": 11966,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "ipcGatewayAddr",
          "offset": 0,
          "slot": "7",
          "type": "t_address"
        },
        {
<<<<<<< HEAD
          "astId": 12419,
=======
          "astId": 11969,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "majorityPercentage",
          "offset": 20,
          "slot": "7",
          "type": "t_uint8"
        },
        {
<<<<<<< HEAD
          "astId": 12423,
=======
          "astId": 11973,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "parentId",
          "offset": 0,
          "slot": "8",
<<<<<<< HEAD
          "type": "t_struct(SubnetID)14769_storage"
        },
        {
          "astId": 12427,
=======
          "type": "t_struct(SubnetID)14257_storage"
        },
        {
          "astId": 11977,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "consensus",
          "offset": 0,
          "slot": "10",
<<<<<<< HEAD
          "type": "t_enum(ConsensusType)5070"
        },
        {
          "astId": 12430,
=======
          "type": "t_enum(ConsensusType)4993"
        },
        {
          "astId": 11980,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "bootstrapped",
          "offset": 1,
          "slot": "10",
          "type": "t_bool"
        },
        {
<<<<<<< HEAD
          "astId": 12433,
=======
          "astId": 11983,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "killed",
          "offset": 2,
          "slot": "10",
          "type": "t_bool"
        },
        {
<<<<<<< HEAD
          "astId": 12437,
=======
          "astId": 11987,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "validatorSet",
          "offset": 0,
          "slot": "11",
<<<<<<< HEAD
          "type": "t_struct(ValidatorSet)14880_storage"
        },
        {
          "astId": 12441,
=======
          "type": "t_struct(ValidatorSet)14364_storage"
        },
        {
          "astId": 11991,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "changeSet",
          "offset": 0,
          "slot": "20",
<<<<<<< HEAD
          "type": "t_struct(StakingChangeLog)14817_storage"
        },
        {
          "astId": 12445,
=======
          "type": "t_struct(StakingChangeLog)14308_storage"
        },
        {
          "astId": 11995,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "releaseQueue",
          "offset": 0,
          "slot": "22",
<<<<<<< HEAD
          "type": "t_struct(StakingReleaseQueue)14844_storage"
        },
        {
          "astId": 12450,
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "relayerRewards",
          "offset": 0,
          "slot": "24",
          "type": "t_mapping(t_address,t_uint256)"
        },
        {
          "astId": 12456,
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "rewardedRelayers",
          "offset": 0,
          "slot": "25",
          "type": "t_mapping(t_uint64,t_struct(AddressSet)3420_storage)"
        },
        {
          "astId": 12459,
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "relayerReward",
          "offset": 0,
          "slot": "26",
          "type": "t_uint256"
=======
          "type": "t_struct(StakingReleaseQueue)14335_storage"
>>>>>>> dev
        }
      ],
      "numberOfBytes": "864"
    },
<<<<<<< HEAD
    "t_struct(SubnetID)14769_storage": {
=======
    "t_struct(SubnetID)14257_storage": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "struct SubnetID",
      "members": [
        {
<<<<<<< HEAD
          "astId": 14764,
=======
          "astId": 14252,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "root",
          "offset": 0,
          "slot": "0",
          "type": "t_uint64"
        },
        {
<<<<<<< HEAD
          "astId": 14768,
=======
          "astId": 14256,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "route",
          "offset": 0,
          "slot": "1",
          "type": "t_array(t_address)dyn_storage"
        }
      ],
      "numberOfBytes": "64"
    },
<<<<<<< HEAD
    "t_struct(Validator)14852_storage": {
=======
    "t_struct(Validator)14385_storage": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "struct Validator",
      "members": [
        {
<<<<<<< HEAD
          "astId": 14846,
=======
          "astId": 14380,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "weight",
          "offset": 0,
          "slot": "0",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
          "astId": 14848,
=======
          "astId": 14382,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "addr",
          "offset": 0,
          "slot": "1",
          "type": "t_address"
        },
        {
<<<<<<< HEAD
          "astId": 14851,
=======
          "astId": 14384,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "metadata",
          "offset": 0,
          "slot": "2",
          "type": "t_bytes_storage"
        }
      ],
      "numberOfBytes": "96"
    },
<<<<<<< HEAD
    "t_struct(ValidatorSet)14880_storage": {
=======
    "t_struct(ValidatorInfo)14343_storage": {
      "encoding": "inplace",
      "label": "struct ValidatorInfo",
      "members": [
        {
          "astId": 14337,
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "confirmedCollateral",
          "offset": 0,
          "slot": "0",
          "type": "t_uint256"
        },
        {
          "astId": 14339,
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "totalCollateral",
          "offset": 0,
          "slot": "1",
          "type": "t_uint256"
        },
        {
          "astId": 14342,
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "metadata",
          "offset": 0,
          "slot": "2",
          "type": "t_bytes_storage"
        }
      ],
      "numberOfBytes": "96"
    },
    "t_struct(ValidatorSet)14364_storage": {
>>>>>>> dev
      "encoding": "inplace",
      "label": "struct ValidatorSet",
      "members": [
        {
<<<<<<< HEAD
          "astId": 14862,
=======
          "astId": 14346,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "activeLimit",
          "offset": 0,
          "slot": "0",
          "type": "t_uint16"
        },
        {
<<<<<<< HEAD
          "astId": 14865,
=======
          "astId": 14349,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "totalConfirmedCollateral",
          "offset": 0,
          "slot": "1",
          "type": "t_uint256"
        },
        {
<<<<<<< HEAD
          "astId": 14871,
=======
          "astId": 14355,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "validators",
          "offset": 0,
          "slot": "2",
<<<<<<< HEAD
          "type": "t_mapping(t_address,t_struct(Validator)14852_storage)"
        },
        {
          "astId": 14875,
=======
          "type": "t_mapping(t_address,t_struct(ValidatorInfo)14343_storage)"
        },
        {
          "astId": 14359,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "activeValidators",
          "offset": 0,
          "slot": "3",
<<<<<<< HEAD
          "type": "t_struct(MinPQ)13828_storage"
        },
        {
          "astId": 14879,
=======
          "type": "t_struct(MinPQ)13347_storage"
        },
        {
          "astId": 14363,
>>>>>>> dev
          "contract": "src/SubnetActorDiamond.sol:SubnetActorDiamond",
          "label": "waitingValidators",
          "offset": 0,
          "slot": "6",
<<<<<<< HEAD
          "type": "t_struct(MaxPQ)13215_storage"
=======
          "type": "t_struct(MaxPQ)12751_storage"
>>>>>>> dev
        }
      ],
      "numberOfBytes": "288"
    },
    "t_uint16": {
      "encoding": "inplace",
      "label": "uint16",
      "numberOfBytes": "2"
    },
    "t_uint256": {
      "encoding": "inplace",
      "label": "uint256",
      "numberOfBytes": "32"
    },
    "t_uint64": {
      "encoding": "inplace",
      "label": "uint64",
      "numberOfBytes": "8"
    },
    "t_uint8": {
      "encoding": "inplace",
      "label": "uint8",
      "numberOfBytes": "1"
    }
  }
}
