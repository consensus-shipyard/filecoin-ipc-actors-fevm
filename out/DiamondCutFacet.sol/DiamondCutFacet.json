{
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "_selector",
                    "type": "bytes4"
                }
            ],
            "name": "CannotAddFunctionToDiamondThatAlreadyExists",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4[]",
                    "name": "_selectors",
                    "type": "bytes4[]"
                }
            ],
            "name": "CannotAddSelectorsToZeroAddress",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "_selector",
                    "type": "bytes4"
                }
            ],
            "name": "CannotRemoveFunctionThatDoesNotExist",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "_selector",
                    "type": "bytes4"
                }
            ],
            "name": "CannotRemoveImmutableFunction",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "_selector",
                    "type": "bytes4"
                }
            ],
            "name": "CannotReplaceFunctionThatDoesNotExists",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "_selector",
                    "type": "bytes4"
                }
            ],
            "name": "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4[]",
                    "name": "_selectors",
                    "type": "bytes4[]"
                }
            ],
            "name": "CannotReplaceFunctionsFromFacetWithZeroAddress",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "_selector",
                    "type": "bytes4"
                }
            ],
            "name": "CannotReplaceImmutableFunction",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "enum IDiamond.FacetCutAction",
                    "name": "_action",
                    "type": "uint8"
                }
            ],
            "name": "IncorrectFacetCutAction",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_initializationContractAddress",
                    "type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "_calldata",
                    "type": "bytes"
                }
            ],
            "name": "InitializationFunctionReverted",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_contractAddress",
                    "type": "address"
                },
                {
                    "internalType": "string",
                    "name": "_message",
                    "type": "string"
                }
            ],
            "name": "NoBytecodeAtAddress",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_facetAddress",
                    "type": "address"
                }
            ],
            "name": "NoSelectorsProvidedForFacetForCut",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_facetAddress",
                    "type": "address"
                }
            ],
            "name": "RemoveFacetAddressMustBeZeroAddress",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "facetAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "enum IDiamond.FacetCutAction",
                            "name": "action",
                            "type": "uint8"
                        },
                        {
                            "internalType": "bytes4[]",
                            "name": "functionSelectors",
                            "type": "bytes4[]"
                        }
                    ],
                    "indexed": false,
                    "internalType": "struct IDiamond.FacetCut[]",
                    "name": "_diamondCut",
                    "type": "tuple[]"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "_init",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "_calldata",
                    "type": "bytes"
                }
            ],
            "name": "DiamondCut",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "facetAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "enum IDiamond.FacetCutAction",
                            "name": "action",
                            "type": "uint8"
                        },
                        {
                            "internalType": "bytes4[]",
                            "name": "functionSelectors",
                            "type": "bytes4[]"
                        }
                    ],
                    "internalType": "struct IDiamond.FacetCut[]",
                    "name": "_diamondCut",
                    "type": "tuple[]"
                },
                {
                    "internalType": "address",
                    "name": "_init",
                    "type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "_calldata",
                    "type": "bytes"
                }
            ],
            "name": "diamondCut",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "bytecode": {
        "object": "0x608060405234801561001057600080fd5b50610f5c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610961565b610045565b005b61004d61009e565b61009761005a8587610aa7565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506100db92505050565b5050505050565b600080516020610f07833981519152600301546001600160a01b031633146100d9576040516330cd747160e01b815260040160405180910390fd5b565b825160005b818110156102285760008582815181106100fc576100fc610beb565b6020026020010151604001519050600086838151811061011e5761011e610beb565b6020026020010151600001519050815160000361015e5760405163e767f91f60e01b81526001600160a01b03821660048201526024015b60405180910390fd5b600087848151811061017257610172610beb565b60200260200101516020015190506000600281111561019357610193610c01565b8160028111156101a5576101a5610c01565b036101b9576101b48284610274565b61021a565b60018160028111156101cd576101cd610c01565b036101dc576101b48284610427565b60028160028111156101f0576101f0610c01565b036101ff576101b4828461058d565b80604051633ff4d20f60e11b81526004016101559190610c39565b8360010193505050506100e0565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67384848460405161025c93929190610c9d565b60405180910390a161026e8383610809565b50505050565b6001600160a01b03821661029d57806040516302b8da0760e21b81526004016101559190610d89565b7f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd35460408051606081019091526021808252600080516020610f0783398151915292916102f491869190610ebe60208301396108cf565b825160005b8181101561041f57600085828151811061031557610315610beb565b6020908102919091018101516001600160e01b031981166000908152918790526040909120549091506001600160a01b03168015610368578160405163ebbf5d0760e01b81526004016101559190610dd7565b6040805180820182526001600160a01b03808b16825261ffff80891660208085019182526001600160e01b0319881660009081528c8252958620945185549251909316600160a01b026001600160b01b0319909216929093169190911717909155600180890180549182018155835291206008820401805460e085901c60046007909416939093026101000a92830263ffffffff909302191691909117905561041085610e02565b945082600101925050506102f9565b505050505050565b600080516020610f078339815191526001600160a01b03831661045f578160405163cd98a96f60e01b81526004016101559190610d89565b61048183604051806060016040528060288152602001610edf602891396108cf565b815160005b818110156100975760008482815181106104a2576104a2610beb565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03163081036104f65781604051632901806d60e11b81526004016101559190610dd7565b866001600160a01b0316816001600160a01b03160361052a5781604051631ac6ce8d60e11b81526004016101559190610dd7565b6001600160a01b0381166105535781604051637479f93960e01b81526004016101559190610dd7565b506001600160e01b031916600090815260208490526040902080546001600160a01b0319166001600160a01b038716179055600101610486565b7f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd354600080516020610f07833981519152906001600160a01b038416156105f25760405163d091bc8160e01b81526001600160a01b0385166004820152602401610155565b825160005b8181101561041f57600085828151811061061357610613610beb565b6020908102919091018101516001600160e01b0319811660009081528783526040908190208151808301909252546001600160a01b038116808352600160a01b90910461ffff1693820193909352909250906106845781604051637a08a22d60e01b81526004016101559190610dd7565b8051306001600160a01b03909116036106b25781604051630df5fd6160e31b81526004016101559190610dd7565b6106bb85610e23565b945084816020015161ffff16146107985760008660010186815481106106e3576106e3610beb565b90600052602060002090600891828204019190066004029054906101000a900460e01b90508087600101836020015161ffff168154811061072657610726610beb565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c92909202939093179055838201516001600160e01b03199390931681529088905260409020805461ffff60a01b1916600160a01b61ffff909316929092029190911790555b856001018054806107ab576107ab610e3a565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319909316815291869052506040902080546001600160b01b03191690556001016105f7565b6001600160a01b03821661081b575050565b61083d82604051806060016040528060258152602001610e99602591396108cf565b600080836001600160a01b0316836040516108589190610e50565b600060405180830381855af49150503d8060008114610893576040519150601f19603f3d011682016040523d82523d6000602084013e610898565b606091505b50915091508161026e578051156108b25780518082602001fd5b838360405163192105d760e01b8152600401610155929190610e6c565b813b60008190036108f757828260405163919834b960e01b8152600401610155929190610e6c565b505050565b80356001600160a01b038116811461091357600080fd5b919050565b60008083601f84011261092a57600080fd5b50813567ffffffffffffffff81111561094257600080fd5b60208301915083602082850101111561095a57600080fd5b9250929050565b60008060008060006060868803121561097957600080fd5b853567ffffffffffffffff8082111561099157600080fd5b818801915088601f8301126109a557600080fd5b8135818111156109b457600080fd5b8960208260051b85010111156109c957600080fd5b602083019750809650506109df602089016108fc565b945060408801359150808211156109f557600080fd5b50610a0288828901610918565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610a4c57610a4c610a13565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a7b57610a7b610a13565b604052919050565b600067ffffffffffffffff821115610a9d57610a9d610a13565b5060051b60200190565b6000610aba610ab584610a83565b610a52565b83815260208082019190600586811b860136811115610ad857600080fd5b865b81811015610bde57803567ffffffffffffffff80821115610afb5760008081fd5b818a01915060608236031215610b115760008081fd5b610b19610a29565b610b22836108fc565b81528683013560038110610b365760008081fd5b8188015260408381013583811115610b4e5760008081fd5b939093019236601f850112610b6557600092508283fd5b83359250610b75610ab584610a83565b83815292871b84018801928881019036851115610b925760008081fd5b948901945b84861015610bc75785356001600160e01b031981168114610bb85760008081fd5b82529489019490890190610b97565b918301919091525088525050948301948301610ada565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60038110610c3557634e487b7160e01b600052602160045260246000fd5b9052565b60208101610c478284610c17565b92915050565b60005b83811015610c68578181015183820152602001610c50565b50506000910152565b60008151808452610c89816020860160208601610c4d565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b016000805b85811015610d58578a8503607f19018752825180516001600160a01b03168652848101518a870190610cfb87890182610c17565b506040918201519187018b90528151908190529085019083908a8801905b80831015610d435783516001600160e01b0319168252928701926001929092019190870190610d19565b50988601989650505091830191600101610cc7565b5050506001600160a01b038a16908801528681036040880152610d7b8189610c71565b9a9950505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610dcb5783516001600160e01b03191683529284019291840191600101610da5565b50909695505050505050565b6001600160e01b031991909116815260200190565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818103610e1957610e19610dec565b6001019392505050565b600081610e3257610e32610dec565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251610e62818460208701610c4d565b9190910192915050565b6001600160a01b0383168152604060208201819052600090610e9090830184610c71565b94935050505056fe6469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64656469616d6f6e644375743a2041646420666163657420686173206e6f20636f64654c69624469616d6f6e644375743a205265706c61636520666163657420686173206e6f20636f6465806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd2a26469706673582212209a967d4ff4726223988592cb74445e68ea9fa93eb946e100bd9b4cba57c2a81264736f6c63430008130033",
        "sourceMap": "472:750:38:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610961565b610045565b005b61004d61009e565b61009761005a8587610aa7565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506100db92505050565b5050505050565b600080516020610f07833981519152600301546001600160a01b031633146100d9576040516330cd747160e01b815260040160405180910390fd5b565b825160005b818110156102285760008582815181106100fc576100fc610beb565b6020026020010151604001519050600086838151811061011e5761011e610beb565b6020026020010151600001519050815160000361015e5760405163e767f91f60e01b81526001600160a01b03821660048201526024015b60405180910390fd5b600087848151811061017257610172610beb565b60200260200101516020015190506000600281111561019357610193610c01565b8160028111156101a5576101a5610c01565b036101b9576101b48284610274565b61021a565b60018160028111156101cd576101cd610c01565b036101dc576101b48284610427565b60028160028111156101f0576101f0610c01565b036101ff576101b4828461058d565b80604051633ff4d20f60e11b81526004016101559190610c39565b8360010193505050506100e0565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67384848460405161025c93929190610c9d565b60405180910390a161026e8383610809565b50505050565b6001600160a01b03821661029d57806040516302b8da0760e21b81526004016101559190610d89565b7f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd35460408051606081019091526021808252600080516020610f0783398151915292916102f491869190610ebe60208301396108cf565b825160005b8181101561041f57600085828151811061031557610315610beb565b6020908102919091018101516001600160e01b031981166000908152918790526040909120549091506001600160a01b03168015610368578160405163ebbf5d0760e01b81526004016101559190610dd7565b6040805180820182526001600160a01b03808b16825261ffff80891660208085019182526001600160e01b0319881660009081528c8252958620945185549251909316600160a01b026001600160b01b0319909216929093169190911717909155600180890180549182018155835291206008820401805460e085901c60046007909416939093026101000a92830263ffffffff909302191691909117905561041085610e02565b945082600101925050506102f9565b505050505050565b600080516020610f078339815191526001600160a01b03831661045f578160405163cd98a96f60e01b81526004016101559190610d89565b61048183604051806060016040528060288152602001610edf602891396108cf565b815160005b818110156100975760008482815181106104a2576104a2610beb565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03163081036104f65781604051632901806d60e11b81526004016101559190610dd7565b866001600160a01b0316816001600160a01b03160361052a5781604051631ac6ce8d60e11b81526004016101559190610dd7565b6001600160a01b0381166105535781604051637479f93960e01b81526004016101559190610dd7565b506001600160e01b031916600090815260208490526040902080546001600160a01b0319166001600160a01b038716179055600101610486565b7f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd354600080516020610f07833981519152906001600160a01b038416156105f25760405163d091bc8160e01b81526001600160a01b0385166004820152602401610155565b825160005b8181101561041f57600085828151811061061357610613610beb565b6020908102919091018101516001600160e01b0319811660009081528783526040908190208151808301909252546001600160a01b038116808352600160a01b90910461ffff1693820193909352909250906106845781604051637a08a22d60e01b81526004016101559190610dd7565b8051306001600160a01b03909116036106b25781604051630df5fd6160e31b81526004016101559190610dd7565b6106bb85610e23565b945084816020015161ffff16146107985760008660010186815481106106e3576106e3610beb565b90600052602060002090600891828204019190066004029054906101000a900460e01b90508087600101836020015161ffff168154811061072657610726610beb565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c92909202939093179055838201516001600160e01b03199390931681529088905260409020805461ffff60a01b1916600160a01b61ffff909316929092029190911790555b856001018054806107ab576107ab610e3a565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319909316815291869052506040902080546001600160b01b03191690556001016105f7565b6001600160a01b03821661081b575050565b61083d82604051806060016040528060258152602001610e99602591396108cf565b600080836001600160a01b0316836040516108589190610e50565b600060405180830381855af49150503d8060008114610893576040519150601f19603f3d011682016040523d82523d6000602084013e610898565b606091505b50915091508161026e578051156108b25780518082602001fd5b838360405163192105d760e01b8152600401610155929190610e6c565b813b60008190036108f757828260405163919834b960e01b8152600401610155929190610e6c565b505050565b80356001600160a01b038116811461091357600080fd5b919050565b60008083601f84011261092a57600080fd5b50813567ffffffffffffffff81111561094257600080fd5b60208301915083602082850101111561095a57600080fd5b9250929050565b60008060008060006060868803121561097957600080fd5b853567ffffffffffffffff8082111561099157600080fd5b818801915088601f8301126109a557600080fd5b8135818111156109b457600080fd5b8960208260051b85010111156109c957600080fd5b602083019750809650506109df602089016108fc565b945060408801359150808211156109f557600080fd5b50610a0288828901610918565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610a4c57610a4c610a13565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a7b57610a7b610a13565b604052919050565b600067ffffffffffffffff821115610a9d57610a9d610a13565b5060051b60200190565b6000610aba610ab584610a83565b610a52565b83815260208082019190600586811b860136811115610ad857600080fd5b865b81811015610bde57803567ffffffffffffffff80821115610afb5760008081fd5b818a01915060608236031215610b115760008081fd5b610b19610a29565b610b22836108fc565b81528683013560038110610b365760008081fd5b8188015260408381013583811115610b4e5760008081fd5b939093019236601f850112610b6557600092508283fd5b83359250610b75610ab584610a83565b83815292871b84018801928881019036851115610b925760008081fd5b948901945b84861015610bc75785356001600160e01b031981168114610bb85760008081fd5b82529489019490890190610b97565b918301919091525088525050948301948301610ada565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60038110610c3557634e487b7160e01b600052602160045260246000fd5b9052565b60208101610c478284610c17565b92915050565b60005b83811015610c68578181015183820152602001610c50565b50506000910152565b60008151808452610c89816020860160208601610c4d565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b016000805b85811015610d58578a8503607f19018752825180516001600160a01b03168652848101518a870190610cfb87890182610c17565b506040918201519187018b90528151908190529085019083908a8801905b80831015610d435783516001600160e01b0319168252928701926001929092019190870190610d19565b50988601989650505091830191600101610cc7565b5050506001600160a01b038a16908801528681036040880152610d7b8189610c71565b9a9950505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610dcb5783516001600160e01b03191683529284019291840191600101610da5565b50909695505050505050565b6001600160e01b031991909116815260200190565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818103610e1957610e19610dec565b6001019392505050565b600081610e3257610e32610dec565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251610e62818460208701610c4d565b9190910192915050565b6001600160a01b0383168152604060208201819052600090610e9090830184610c71565b94935050505056fe6469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64656469616d6f6e644375743a2041646420666163657420686173206e6f20636f64654c69624469616d6f6e644375743a205265706c61636520666163657420686173206e6f20636f6465806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd2a26469706673582212209a967d4ff4726223988592cb74445e68ea9fa93eb946e100bd9b4cba57c2a81264736f6c63430008130033",
        "sourceMap": "472:750:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;961:259;;;;;;:::i;:::-;;:::i;:::-;;;1083:35;:33;:35::i;:::-;1128:85;;1164:11;;1128:85;:::i;:::-;1184:5;1202:9;;1128:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1128:21:38;;-1:-1:-1;;;1128:85:38:i;:::-;961:259;;;;;:::o;2587:156:57:-;-1:-1:-1;;;;;;;;;;;2663:30:57;;;-1:-1:-1;;;;;2663:30:57;2649:10;:44;2645:92;;2716:10;;-1:-1:-1;;;2716:10:57;;;;;;;;;;;2645:92;2587:156::o;2749:1291::-;2884:18;;2867:14;2912:985;2950:6;2937:10;:19;2912:985;;;2974:33;3010:11;3022:10;3010:23;;;;;;;;:::i;:::-;;;;;;;:41;;;2974:77;;3065:20;3088:11;3100:10;3088:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3065:59;;3142:17;:24;3170:1;3142:29;3138:122;;3198:47;;-1:-1:-1;;;3198:47:57;;-1:-1:-1;;;;;5563:32:98;;3198:47:57;;;5545:51:98;5518:18;;3198:47:57;;;;;;;;3138:122;3273:33;3309:11;3321:10;3309:23;;;;;;;;:::i;:::-;;;;;;;:30;;;3273:66;;3367:27;3357:37;;;;;;;;:::i;:::-;:6;:37;;;;;;;;:::i;:::-;;3353:466;;3414:45;3427:12;3441:17;3414:12;:45::i;:::-;3353:466;;;3494:31;3484:6;:41;;;;;;;;:::i;:::-;;3480:339;;3545:49;3562:12;3576:17;3545:16;:49::i;3480:339::-;3629:30;3619:6;:40;;;;;;;;:::i;:::-;;3615:204;;3679:48;3695:12;3709:17;3679:15;:48::i;3615:204::-;3797:6;3773:31;;-1:-1:-1;;;3773:31:57;;;;;;;;:::i;3615:204::-;3860:12;;;;;2960:937;;;2912:985;;;;3911:74;3936:11;3956:5;3974:9;3911:74;;;;;;;;:::i;:::-;;;;;;;;3995:38;4016:5;4023:9;3995:20;:38::i;:::-;2857:1183;2749:1291;;;:::o;4046:1158::-;-1:-1:-1;;;;;4150:27:57;;4146:116;;4232:18;4200:51;;-1:-1:-1;;;4200:51:57;;;;;;;;:::i;4146:116::-;4355:12;:19;4385:74;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;260:43:57;4355:19;4385:74;;4408:13;;4385:74;;;;;;:22;:74::i;:::-;4486:25;;4469:14;4521:677;4565:6;4549:13;:22;4521:677;;;4589:15;4607:18;4626:13;4607:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;4680:44:57;;4654:23;4680:44;;;;;;;;;;;:57;4607:33;;-1:-1:-1;;;;;;4680:57:57;4755:29;;4751:128;;4855:8;4811:53;;-1:-1:-1;;;4811:53:57;;;;;;;;:::i;4751:128::-;4939:107;;;;;;;;-1:-1:-1;;;;;4939:107:57;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4892:44:57;;-1:-1:-1;4892:44:57;;;;;;;;;:154;;;;;;;;;-1:-1:-1;;;4892:154:57;-1:-1:-1;;;;;;4892:154:57;;;;;;;;;;;;;;;;5060:12;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4892:154;5060:27;;;;;;;;;;;;;;;;5101:15;5019:13;5101:15;:::i;:::-;;;5158;;;;;4575:623;;4521:677;;;;4136:1068;;;4046:1158;;:::o;5210:1396::-;-1:-1:-1;;;;;;;;;;;;;;;;5372:27:57;;5368:131;;5469:18;5422:66;;-1:-1:-1;;;5422:66:57;;;;;;;;:::i;5368:131::-;5508:81;5531:13;5508:81;;;;;;;;;;;;;;;;;:22;:81::i;:::-;5612:25;;5599:10;5647:953;5691:2;5675:13;:18;5647:953;;;5711:15;5729:18;5748:13;5729:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;5802:44:57;;5776:23;5802:44;;;;;;;;;;;:57;5729:33;;-1:-1:-1;;;;;;5802:57:57;6011:4;5984:32;;5980:118;;6074:8;6043:40;;-1:-1:-1;;;6043:40:57;;;;;;;;:::i;5980:118::-;6134:13;-1:-1:-1;;;;;6115:32:57;:15;-1:-1:-1;;;;;6115:32:57;;6111:144;;6231:8;6174:66;;-1:-1:-1;;;6174:66:57;;;;;;;;:::i;6111:144::-;-1:-1:-1;;;;;6272:29:57;;6268:123;;6367:8;6328:48;;-1:-1:-1;;;6328:48:57;;;;;;;;:::i;6268:123::-;-1:-1:-1;;;;;;;6445:44:57;:34;:44;;;;;;;;;;:73;;-1:-1:-1;;;;;;6445:73:57;-1:-1:-1;;;;;6445:73:57;;;;;-1:-1:-1;6560:15:57;5647:953;;6612:1796;6793:12;:19;-1:-1:-1;;;;;;;;;;;260:43:57;-1:-1:-1;;;;;6826:27:57;;;6822:115;;6876:50;;-1:-1:-1;;;6876:50:57;;-1:-1:-1;;;;;5563:32:98;;6876:50:57;;;5545:51:98;5518:18;;6876:50:57;5399:203:98;6822:115:57;6959:25;;6946:10;6994:1408;7038:2;7022:13;:18;6994:1408;;;7058:15;7076:18;7095:13;7076:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;7199:61:57;;7123:73;7199:61;;;;;;;;;;;7123:137;;;;;;;;;-1:-1:-1;;;;;7123:137:57;;;;;-1:-1:-1;;;7123:137:57;;;;;;;;;;;;7076:33;;-1:-1:-1;7123:137:57;7274:153;;7403:8;7366:46;;-1:-1:-1;;;7366:46:57;;;;;;;;:::i;7274:153::-;7538:47;;7597:4;-1:-1:-1;;;;;7538:64:57;;;;7534:149;;7659:8;7629:39;;-1:-1:-1;;;7629:39:57;;;;;;;;:::i;7534:149::-;7747:15;;;:::i;:::-;;;7835:13;7780:34;:51;;;:68;;;7776:412;;7868:19;7890:2;:12;;7903:13;7890:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;7868:49;;8003:12;7935:2;:12;;7948:34;:51;;;7935:65;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:80;;;:65;;;;;;:80;;;;;;;;;;;;;;;;;;;;;;8101:72;;;;-1:-1:-1;;;;;;8033:48:57;;;;;;;;;;;;;:140;;-1:-1:-1;;;;8033:140:57;-1:-1:-1;;;8033:140:57;;;;;;;;;;;;;;7776:412;8237:2;:12;;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8237:18:57;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8276:44:57;;;;;;;;;-1:-1:-1;8276:44:57;;;8269:51;;-1:-1:-1;;;;;;8269:51:57;;;8237:18;8362:15;6994:1408;;8414:888;-1:-1:-1;;;;;8506:19:57;;8502:56;;8414:888;;:::o;8502:56::-;8567:70;8590:5;8567:70;;;;;;;;;;;;;;;;;:22;:70::i;:::-;8701:12;8715:18;8737:5;-1:-1:-1;;;;;8737:18:57;8756:9;8737:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8700:66;;;;8827:7;8822:474;;8911:12;;:17;8907:379;;9094:5;9088:12;9144:15;9136:5;9132:2;9128:14;9121:39;8907:379;9254:5;9261:9;9223:48;;-1:-1:-1;;;9223:48:57;;;;;;;;;:::i;9308:320::-;9481:22;;9412:20;9526:17;;;9522:100;;9586:9;9597:13;9566:45;;-1:-1:-1;;;9566:45:57;;;;;;;;;:::i;9522:100::-;9402:226;9308:320;;:::o;14:173:98:-;82:20;;-1:-1:-1;;;;;131:31:98;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:347::-;243:8;253:6;307:3;300:4;292:6;288:17;284:27;274:55;;325:1;322;315:12;274:55;-1:-1:-1;348:20:98;;391:18;380:30;;377:50;;;423:1;420;413:12;377:50;460:4;452:6;448:17;436:29;;512:3;505:4;496:6;488;484:19;480:30;477:39;474:59;;;529:1;526;519:12;474:59;192:347;;;;;:::o;544:1011::-;688:6;696;704;712;720;773:2;761:9;752:7;748:23;744:32;741:52;;;789:1;786;779:12;741:52;829:9;816:23;858:18;899:2;891:6;888:14;885:34;;;915:1;912;905:12;885:34;953:6;942:9;938:22;928:32;;998:7;991:4;987:2;983:13;979:27;969:55;;1020:1;1017;1010:12;969:55;1060:2;1047:16;1086:2;1078:6;1075:14;1072:34;;;1102:1;1099;1092:12;1072:34;1157:7;1150:4;1140:6;1137:1;1133:14;1129:2;1125:23;1121:34;1118:47;1115:67;;;1178:1;1175;1168:12;1115:67;1209:4;1205:2;1201:13;1191:23;;1233:6;1223:16;;;1258:40;1292:4;1281:9;1277:20;1258:40;:::i;:::-;1248:50;;1351:2;1340:9;1336:18;1323:32;1307:48;;1380:2;1370:8;1367:16;1364:36;;;1396:1;1393;1386:12;1364:36;;1435:60;1487:7;1476:8;1465:9;1461:24;1435:60;:::i;:::-;544:1011;;;;-1:-1:-1;544:1011:98;;-1:-1:-1;1514:8:98;;1409:86;544:1011;-1:-1:-1;;;544:1011:98:o;1560:127::-;1621:10;1616:3;1612:20;1609:1;1602:31;1652:4;1649:1;1642:15;1676:4;1673:1;1666:15;1692:253;1764:2;1758:9;1806:4;1794:17;;1841:18;1826:34;;1862:22;;;1823:62;1820:88;;;1888:18;;:::i;:::-;1924:2;1917:22;1692:253;:::o;1950:275::-;2021:2;2015:9;2086:2;2067:13;;-1:-1:-1;;2063:27:98;2051:40;;2121:18;2106:34;;2142:22;;;2103:62;2100:88;;;2168:18;;:::i;:::-;2204:2;2197:22;1950:275;;-1:-1:-1;1950:275:98:o;2230:191::-;2298:4;2331:18;2323:6;2320:30;2317:56;;;2353:18;;:::i;:::-;-1:-1:-1;2398:1:98;2394:14;2410:4;2390:25;;2230:191::o;2426:2727::-;2598:9;2633:72;2649:55;2697:6;2649:55;:::i;:::-;2633:72;:::i;:::-;2739:19;;;2777:4;2797:12;;;;2727:3;2828:1;2863:15;;;2852:27;;2902:14;2891:26;;2888:46;;;2930:1;2927;2920:12;2888:46;2954:5;2968:2152;2984:6;2979:3;2976:15;2968:2152;;;3070:3;3057:17;3097:18;3147:2;3134:11;3131:19;3128:109;;;3191:1;3220:2;3216;3209:14;3128:109;3271:11;3264:5;3260:23;3250:33;;3328:4;3323:2;3307:14;3303:23;3299:34;3296:124;;;3374:1;3403:2;3399;3392:14;3296:124;3448:22;;:::i;:::-;3499;3518:2;3499:22;:::i;:::-;3490:7;3483:39;3571:2;3567;3563:11;3550:25;3610:1;3601:7;3598:14;3588:112;;3654:1;3683:2;3679;3672:14;3588:112;3720:16;;;3713:33;3769:2;3811:11;;;3798:25;3839:14;;;3836:104;;;3894:1;3923:2;3919;3912:14;3836:104;3964:15;;;;;4022:14;4015:4;4006:14;;4002:35;3992:136;;4080:1;4069:12;;4110:3;4105;4098:16;3992:136;4165:3;4152:17;4141:28;;4195:69;4211:52;4259:3;4211:52;:::i;4195:69::-;4308:18;;;4404:12;;;4395:22;;4391:31;;;4348:14;;;;4451;4438:28;;4435:121;;;4508:1;4538:3;4533;4526:16;4435:121;4582:12;;;;4607:394;4625:8;4618:5;4615:19;4607:394;;;4708:19;;-1:-1:-1;;;;;;4766:34:98;;4754:47;;4744:164;;4852:1;4886:3;4881;4874:16;4744:164;4925:22;;4646:14;;;;4973;;;;4607:394;;;5021:16;;;5014:31;;;;-1:-1:-1;5058:20:98;;-1:-1:-1;;5098:12:98;;;;3001;;2968:2152;;;-1:-1:-1;5142:5:98;;2426:2727;-1:-1:-1;;;;;;;2426:2727:98:o;5158:127::-;5219:10;5214:3;5210:20;5207:1;5200:31;5250:4;5247:1;5240:15;5274:4;5271:1;5264:15;5607:127;5668:10;5663:3;5659:20;5656:1;5649:31;5699:4;5696:1;5689:15;5723:4;5720:1;5713:15;5739:242;5825:1;5818:5;5815:12;5805:143;;5870:10;5865:3;5861:20;5858:1;5851:31;5905:4;5902:1;5895:15;5933:4;5930:1;5923:15;5805:143;5957:18;;5739:242::o;5986:219::-;6138:2;6123:18;;6150:49;6127:9;6181:6;6150:49;:::i;:::-;5986:219;;;;:::o;6210:250::-;6295:1;6305:113;6319:6;6316:1;6313:13;6305:113;;;6395:11;;;6389:18;6376:11;;;6369:39;6341:2;6334:10;6305:113;;;-1:-1:-1;;6452:1:98;6434:16;;6427:27;6210:250::o;6465:270::-;6506:3;6544:5;6538:12;6571:6;6566:3;6559:19;6587:76;6656:6;6649:4;6644:3;6640:14;6633:4;6626:5;6622:16;6587:76;:::i;:::-;6717:2;6696:15;-1:-1:-1;;6692:29:98;6683:39;;;;6724:4;6679:50;;6465:270;-1:-1:-1;;6465:270:98:o;6740:1960::-;7010:4;7039:2;7079;7068:9;7064:18;7109:2;7098:9;7091:21;7132:6;7167;7161:13;7198:6;7190;7183:22;7224:3;7214:13;;7258:2;7247:9;7243:18;7236:25;;7320:2;7310:6;7307:1;7303:14;7292:9;7288:30;7284:39;7342:4;7381:2;7373:6;7369:15;7402:1;7423;7433:1096;7449:6;7444:3;7441:15;7433:1096;;;7518:22;;;-1:-1:-1;;7514:37:98;7502:50;;7575:13;;7662:9;;-1:-1:-1;;;;;7658:35:98;7643:51;;7733:11;;;7727:18;7615:15;;;;7758:61;7803:15;;;7727:18;7758:61;:::i;:::-;-1:-1:-1;7842:4:98;7887:11;;;7881:18;7919:15;;;7912:27;;;8000:21;;8034:24;;;;8124:23;;;;8171:1;;8080:15;;;;8185:236;8201:8;8196:3;8193:17;8185:236;;;8282:15;;-1:-1:-1;;;;;;8278:42:98;8264:57;;8390:17;;;;8229:1;8220:11;;;;;8347:14;;;;8185:236;;;-1:-1:-1;8507:12:98;;;;8444:5;-1:-1:-1;;;8472:15:98;;;;7475:1;7466:11;7433:1096;;;-1:-1:-1;;;;;;;;5356:31:98;;8565:18;;;5344:44;8622:22;;;8615:4;8600:20;;8593:52;8662:32;8626:6;8679;8662:32;:::i;:::-;8654:40;6740:1960;-1:-1:-1;;;;;;;;;;6740:1960:98:o;8705:657::-;8874:2;8926:21;;;8996:13;;8899:18;;;9018:22;;;8845:4;;8874:2;9097:15;;;;9071:2;9056:18;;;8845:4;9140:196;9154:6;9151:1;9148:13;9140:196;;;9219:13;;-1:-1:-1;;;;;;9215:40:98;9203:53;;9311:15;;;;9276:12;;;;9176:1;9169:9;9140:196;;;-1:-1:-1;9353:3:98;;8705:657;-1:-1:-1;;;;;;8705:657:98:o;9367:202::-;-1:-1:-1;;;;;;9529:33:98;;;;9511:52;;9499:2;9484:18;;9367:202::o;9574:127::-;9635:10;9630:3;9626:20;9623:1;9616:31;9666:4;9663:1;9656:15;9690:4;9687:1;9680:15;9706:197;9744:3;9772:6;9813:2;9806:5;9802:14;9840:2;9831:7;9828:15;9825:41;;9846:18;;:::i;:::-;9895:1;9882:15;;9706:197;-1:-1:-1;;;9706:197:98:o;9908:136::-;9947:3;9975:5;9965:39;;9984:18;;:::i;:::-;-1:-1:-1;;;10020:18:98;;9908:136::o;10049:127::-;10110:10;10105:3;10101:20;10098:1;10091:31;10141:4;10138:1;10131:15;10165:4;10162:1;10155:15;10181:287;10310:3;10348:6;10342:13;10364:66;10423:6;10418:3;10411:4;10403:6;10399:17;10364:66;:::i;:::-;10446:16;;;;;10181:287;-1:-1:-1;;10181:287:98:o;10473:314::-;-1:-1:-1;;;;;10648:32:98;;10630:51;;10717:2;10712;10697:18;;10690:30;;;-1:-1:-1;;10737:44:98;;10762:18;;10754:6;10737:44;:::i;:::-;10729:52;10473:314;-1:-1:-1;;;;10473:314:98:o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotAddFunctionToDiamondThatAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"_selectors\",\"type\":\"bytes4[]\"}],\"name\":\"CannotAddSelectorsToZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotRemoveFunctionThatDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotRemoveImmutableFunction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotReplaceFunctionThatDoesNotExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"_selectors\",\"type\":\"bytes4[]\"}],\"name\":\"CannotReplaceFunctionsFromFacetWithZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotReplaceImmutableFunction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"_action\",\"type\":\"uint8\"}],\"name\":\"IncorrectFacetCutAction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initializationContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"InitializationFunctionReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"NoBytecodeAtAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_facetAddress\",\"type\":\"address\"}],\"name\":\"NoSelectorsProvidedForFacetForCut\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_facetAddress\",\"type\":\"address\"}],\"name\":\"RemoveFacetAddressMustBeZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamond.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamond.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"_calldata\":\"A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init\",\"_diamondCut\":\"Contains the facet addresses and function selectors\",\"_init\":\"The address of the contract or facet to execute _calldata\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Add/replace/remove any number of functions and optionally execute         a function with delegatecall\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/diamond/DiamondCutFacet.sol\":\"DiamondCutFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/diamond/DiamondCutFacet.sol\":{\"keccak256\":\"0x673f0c594445cda87a9d83c063385ffc2b9a052c2114eb77835a858e17b233a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9034b59b56ce2fdb4326b4cca030d7e5b891c5855d58cd6656b505b5b331985d\",\"dweb:/ipfs/QmaNn4DdN2gNJ62vXDGTMzCmg19fVWpcjpwU3yBEpEX6gV\"]},\"src/interfaces/IDiamond.sol\":{\"keccak256\":\"0x4458466caa842c9f6acc4a52ce32ae61ab705ec64a6a62626dadf7ef1da2c016\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b5b66a6dee491abf6aceaae603554781c3042c1b9d3f4c65f00a70f293ad07f1\",\"dweb:/ipfs/QmPkArewER2FTp5fZPCG2K2EcRGWq3XhdGdUDhiQbYh1gn\"]},\"src/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0xfce76cbd9e6b2e1db8c16253b2a64640093226a521416fef04de75c8704b0c57\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5d8532895a516253dda46faa09cdbfbffac55f8d6d83e082bea1479445e73643\",\"dweb:/ipfs/QmfBiFhj5YxBMbTJHiYwztBqtahwkQVhPtyfW8w4t1ZQU4\"]},\"src/lib/LibDiamond.sol\":{\"keccak256\":\"0x4c098d2e50dbee6df459abcdde7fec02c9253bfc11be1af9e4032ae6b5270bfc\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f4d4f9ae8aa6532731e9871cb88a3e9582fbae32b068cd2a28def34b767c18a6\",\"dweb:/ipfs/QmcQrRUSkiaJtsio3ZmgpxHH8GYNQL3ZwVCX71Vyb6SWTo\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.19+commit.7dd6d404"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "_selector",
                            "type": "bytes4"
                        }
                    ],
                    "type": "error",
                    "name": "CannotAddFunctionToDiamondThatAlreadyExists"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4[]",
                            "name": "_selectors",
                            "type": "bytes4[]"
                        }
                    ],
                    "type": "error",
                    "name": "CannotAddSelectorsToZeroAddress"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "_selector",
                            "type": "bytes4"
                        }
                    ],
                    "type": "error",
                    "name": "CannotRemoveFunctionThatDoesNotExist"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "_selector",
                            "type": "bytes4"
                        }
                    ],
                    "type": "error",
                    "name": "CannotRemoveImmutableFunction"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "_selector",
                            "type": "bytes4"
                        }
                    ],
                    "type": "error",
                    "name": "CannotReplaceFunctionThatDoesNotExists"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "_selector",
                            "type": "bytes4"
                        }
                    ],
                    "type": "error",
                    "name": "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4[]",
                            "name": "_selectors",
                            "type": "bytes4[]"
                        }
                    ],
                    "type": "error",
                    "name": "CannotReplaceFunctionsFromFacetWithZeroAddress"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "_selector",
                            "type": "bytes4"
                        }
                    ],
                    "type": "error",
                    "name": "CannotReplaceImmutableFunction"
                },
                {
                    "inputs": [
                        {
                            "internalType": "enum IDiamond.FacetCutAction",
                            "name": "_action",
                            "type": "uint8"
                        }
                    ],
                    "type": "error",
                    "name": "IncorrectFacetCutAction"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_initializationContractAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "_calldata",
                            "type": "bytes"
                        }
                    ],
                    "type": "error",
                    "name": "InitializationFunctionReverted"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_contractAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "string",
                            "name": "_message",
                            "type": "string"
                        }
                    ],
                    "type": "error",
                    "name": "NoBytecodeAtAddress"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_facetAddress",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "NoSelectorsProvidedForFacetForCut"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotOwner"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_facetAddress",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "RemoveFacetAddressMustBeZeroAddress"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IDiamond.FacetCut[]",
                            "name": "_diamondCut",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "facetAddress",
                                    "type": "address"
                                },
                                {
                                    "internalType": "enum IDiamond.FacetCutAction",
                                    "name": "action",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes4[]",
                                    "name": "functionSelectors",
                                    "type": "bytes4[]"
                                }
                            ],
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "_init",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes",
                            "name": "_calldata",
                            "type": "bytes",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "DiamondCut",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IDiamond.FacetCut[]",
                            "name": "_diamondCut",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "facetAddress",
                                    "type": "address"
                                },
                                {
                                    "internalType": "enum IDiamond.FacetCutAction",
                                    "name": "action",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes4[]",
                                    "name": "functionSelectors",
                                    "type": "bytes4[]"
                                }
                            ]
                        },
                        {
                            "internalType": "address",
                            "name": "_init",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "_calldata",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "diamondCut"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
                        "params": {
                            "_calldata": "A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init",
                            "_diamondCut": "Contains the facet addresses and function selectors",
                            "_init": "The address of the contract or facet to execute _calldata"
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
                        "notice": "Add/replace/remove any number of functions and optionally execute         a function with delegatecall"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@openzeppelin/=node_modules/@openzeppelin/",
                "ds-test/=lib/forge-std/lib/ds-test/src/",
                "elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "fevmate/=lib/fevmate/contracts/",
                "forge-std/=lib/forge-std/src/",
                "hardhat-deploy/=node_modules/hardhat-deploy/",
                "hardhat/=node_modules/hardhat/",
                "murky/=lib/murky/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
                "openzeppelin/=lib/openzeppelin-contracts/contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/diamond/DiamondCutFacet.sol": "DiamondCutFacet"
            },
            "libraries": {}
        },
        "sources": {
            "src/diamond/DiamondCutFacet.sol": {
                "keccak256": "0x673f0c594445cda87a9d83c063385ffc2b9a052c2114eb77835a858e17b233a6",
                "urls": [
                    "bzz-raw://9034b59b56ce2fdb4326b4cca030d7e5b891c5855d58cd6656b505b5b331985d",
                    "dweb:/ipfs/QmaNn4DdN2gNJ62vXDGTMzCmg19fVWpcjpwU3yBEpEX6gV"
                ],
                "license": "MIT"
            },
            "src/interfaces/IDiamond.sol": {
                "keccak256": "0x4458466caa842c9f6acc4a52ce32ae61ab705ec64a6a62626dadf7ef1da2c016",
                "urls": [
                    "bzz-raw://b5b66a6dee491abf6aceaae603554781c3042c1b9d3f4c65f00a70f293ad07f1",
                    "dweb:/ipfs/QmPkArewER2FTp5fZPCG2K2EcRGWq3XhdGdUDhiQbYh1gn"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/interfaces/IDiamondCut.sol": {
                "keccak256": "0xfce76cbd9e6b2e1db8c16253b2a64640093226a521416fef04de75c8704b0c57",
                "urls": [
                    "bzz-raw://5d8532895a516253dda46faa09cdbfbffac55f8d6d83e082bea1479445e73643",
                    "dweb:/ipfs/QmfBiFhj5YxBMbTJHiYwztBqtahwkQVhPtyfW8w4t1ZQU4"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/LibDiamond.sol": {
                "keccak256": "0x4c098d2e50dbee6df459abcdde7fec02c9253bfc11be1af9e4032ae6b5270bfc",
                "urls": [
                    "bzz-raw://f4d4f9ae8aa6532731e9871cb88a3e9582fbae32b068cd2a28def34b767c18a6",
                    "dweb:/ipfs/QmcQrRUSkiaJtsio3ZmgpxHH8GYNQL3ZwVCX71Vyb6SWTo"
                ],
                "license": "MIT OR Apache-2.0"
            }
        },
        "version": 1
    },
    "ast": {
        "absolutePath": "src/diamond/DiamondCutFacet.sol",
        "id": 36368,
        "exportedSymbols": {
            "DiamondCutFacet": [36367],
            "IDiamondCut": [39448],
            "LibDiamond": [40954]
        },
        "nodeType": "SourceUnit",
        "src": "32:1191:38",
        "nodes": [
            {
                "id": 36333,
                "nodeType": "PragmaDirective",
                "src": "32:23:38",
                "nodes": [],
                "literals": ["solidity", "0.8", ".19"]
            },
            {
                "id": 36335,
                "nodeType": "ImportDirective",
                "src": "362:58:38",
                "nodes": [],
                "absolutePath": "src/interfaces/IDiamondCut.sol",
                "file": "../interfaces/IDiamondCut.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 36368,
                "sourceUnit": 39449,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 36334,
                            "name": "IDiamondCut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39448,
                            "src": "370:11:38",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 36337,
                "nodeType": "ImportDirective",
                "src": "421:49:38",
                "nodes": [],
                "absolutePath": "src/lib/LibDiamond.sol",
                "file": "../lib/LibDiamond.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 36368,
                "sourceUnit": 40955,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 36336,
                            "name": "LibDiamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40954,
                            "src": "429:10:38",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 36367,
                "nodeType": "ContractDefinition",
                "src": "472:750:38",
                "nodes": [
                    {
                        "id": 36366,
                        "nodeType": "FunctionDefinition",
                        "src": "961:259:38",
                        "nodes": [],
                        "body": {
                            "id": 36365,
                            "nodeType": "Block",
                            "src": "1073:147:38",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 36352,
                                                "name": "LibDiamond",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 40954,
                                                "src": "1083:10:38",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_LibDiamond_$40954_$",
                                                    "typeString": "type(library LibDiamond)"
                                                }
                                            },
                                            "id": 36354,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1094:22:38",
                                            "memberName": "enforceIsContractOwner",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 40416,
                                            "src": "1083:33:38",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$__$",
                                                "typeString": "function () view"
                                            }
                                        },
                                        "id": 36355,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1083:35:38",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 36356,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1083:35:38"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 36360,
                                                "name": "_diamondCut",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 36344,
                                                "src": "1164:11:38",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_FacetCut_$39418_calldata_ptr_$dyn_calldata_ptr",
                                                    "typeString": "struct IDiamond.FacetCut calldata[] calldata"
                                                }
                                            },
                                            {
                                                "id": 36361,
                                                "name": "_init",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 36346,
                                                "src": "1184:5:38",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 36362,
                                                "name": "_calldata",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 36348,
                                                "src": "1202:9:38",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_array$_t_struct$_FacetCut_$39418_calldata_ptr_$dyn_calldata_ptr",
                                                    "typeString": "struct IDiamond.FacetCut calldata[] calldata"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            ],
                                            "expression": {
                                                "id": 36357,
                                                "name": "LibDiamond",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 40954,
                                                "src": "1128:10:38",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_LibDiamond_$40954_$",
                                                    "typeString": "type(library LibDiamond)"
                                                }
                                            },
                                            "id": 36359,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1139:10:38",
                                            "memberName": "diamondCut",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 40534,
                                            "src": "1128:21:38",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$39418_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                                "typeString": "function (struct IDiamond.FacetCut memory[] memory,address,bytes memory)"
                                            }
                                        },
                                        "id": 36363,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [
                                            "1151:11:38",
                                            "1177:5:38",
                                            "1191:9:38"
                                        ],
                                        "names": [
                                            "_diamondCut",
                                            "_init",
                                            "_calldata"
                                        ],
                                        "nodeType": "FunctionCall",
                                        "src": "1128:85:38",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 36364,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1128:85:38"
                                }
                            ]
                        },
                        "baseFunctions": [39447],
                        "documentation": {
                            "id": 36340,
                            "nodeType": "StructuredDocumentation",
                            "src": "518:438:38",
                            "text": "@notice Add/replace/remove any number of functions and optionally execute\n         a function with delegatecall\n @param _diamondCut Contains the facet addresses and function selectors\n @param _init The address of the contract or facet to execute _calldata\n @param _calldata A function call, including function selector and arguments\n                  _calldata is executed with delegatecall on _init"
                        },
                        "functionSelector": "1f931c1c",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "diamondCut",
                        "nameLocation": "970:10:38",
                        "overrides": {
                            "id": 36350,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1064:8:38"
                        },
                        "parameters": {
                            "id": 36349,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 36344,
                                    "mutability": "mutable",
                                    "name": "_diamondCut",
                                    "nameLocation": "1001:11:38",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 36366,
                                    "src": "981:31:38",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_FacetCut_$39418_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct IDiamond.FacetCut[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 36342,
                                            "nodeType": "UserDefinedTypeName",
                                            "pathNode": {
                                                "id": 36341,
                                                "name": "FacetCut",
                                                "nameLocations": ["981:8:38"],
                                                "nodeType": "IdentifierPath",
                                                "referencedDeclaration": 39418,
                                                "src": "981:8:38"
                                            },
                                            "referencedDeclaration": 39418,
                                            "src": "981:8:38",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_FacetCut_$39418_storage_ptr",
                                                "typeString": "struct IDiamond.FacetCut"
                                            }
                                        },
                                        "id": 36343,
                                        "nodeType": "ArrayTypeName",
                                        "src": "981:10:38",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_FacetCut_$39418_storage_$dyn_storage_ptr",
                                            "typeString": "struct IDiamond.FacetCut[]"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 36346,
                                    "mutability": "mutable",
                                    "name": "_init",
                                    "nameLocation": "1022:5:38",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 36366,
                                    "src": "1014:13:38",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 36345,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1014:7:38",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 36348,
                                    "mutability": "mutable",
                                    "name": "_calldata",
                                    "nameLocation": "1044:9:38",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 36366,
                                    "src": "1029:24:38",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 36347,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1029:5:38",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "980:74:38"
                        },
                        "returnParameters": {
                            "id": 36351,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1073:0:38"
                        },
                        "scope": 36367,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 36338,
                            "name": "IDiamondCut",
                            "nameLocations": ["500:11:38"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39448,
                            "src": "500:11:38"
                        },
                        "id": 36339,
                        "nodeType": "InheritanceSpecifier",
                        "src": "500:11:38"
                    }
                ],
                "canonicalName": "DiamondCutFacet",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "linearizedBaseContracts": [36367, 39448, 39429],
                "name": "DiamondCutFacet",
                "nameLocation": "481:15:38",
                "scope": 36368,
                "usedErrors": [
                    40247, 40253, 40258, 40262, 40266, 40271, 40277, 40290,
                    40294, 40298, 40302, 40306, 40310, 40314
                ]
            }
        ],
        "license": "MIT"
    },
    "id": 38
}
