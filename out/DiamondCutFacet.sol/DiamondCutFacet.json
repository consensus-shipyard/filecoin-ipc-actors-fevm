{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "CannotAddFunctionToDiamondThatAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4[]",
          "name": "_selectors",
          "type": "bytes4[]"
        }
      ],
      "name": "CannotAddSelectorsToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "CannotRemoveFunctionThatDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "CannotRemoveImmutableFunction",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "CannotReplaceFunctionThatDoesNotExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4[]",
          "name": "_selectors",
          "type": "bytes4[]"
        }
      ],
      "name": "CannotReplaceFunctionsFromFacetWithZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "CannotReplaceImmutableFunction",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum IDiamond.FacetCutAction",
          "name": "_action",
          "type": "uint8"
        }
      ],
      "name": "IncorrectFacetCutAction",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_initializationContractAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "InitializationFunctionReverted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "NoBytecodeAtAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_facetAddress",
          "type": "address"
        }
      ],
      "name": "NoSelectorsProvidedForFacetForCut",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_facetAddress",
          "type": "address"
        }
      ],
      "name": "RemoveFacetAddressMustBeZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamond.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDiamond.FacetCut[]",
          "name": "_diamondCut",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_init",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "DiamondCut",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamond.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamond.FacetCut[]",
          "name": "_diamondCut",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "_init",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "diamondCut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080806040523461001657610d26908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c631f931c1c1461002857600080fd5b346109d35760603660031901126109d35767ffffffffffffffff600435116109d3573660236004350112156109d357600435600401359067ffffffffffffffff82116109d3573660248360051b6004350101116109d3576024356001600160a01b03811690036109d35767ffffffffffffffff604435116109d3573660236044350112156109d35767ffffffffffffffff60443560040135116109d357366024604435600401356044350101116109d3577f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd5546001600160a01b031633036109d8575061011c61011782610a4d565b610a27565b602081838152018092602460043501915b60248260051b6004350101831061089c5750505061015361011760443560040135610a65565b6044356004810135808352919291906024016020840137600060206044356004013584010152805160005b81811061029a575050604051906060820190606083525180915260809081830191808260051b85010195926000915b83831061020b576024356001600160a01b031660208701528588036040870152610209877f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67388806101fe8d85610ab8565b0390a1602435610b98565b005b9091929396607f1986820301835287516020836040606085019360018060a01b0381511686526102418482015185880190610aab565b015193606060408201528451809452019201906000905b80821061027757505050602080600192990193019301919392906101ad565b82516001600160e01b031916845260209384019390920191600190910190610258565b60406102a68285610a81565b5101516001600160a01b036102bb8386610a81565b515116908051156108835760206102d28487610a81565b510151600381101561086d57806104e6575081156104c55761ffff600080516020610cb18339815191525416610343610309610a07565b602181527f6469616d6f6e644375743a2041646420666163657420686173206e6f20636f646020820152606560f81b604082015284610c71565b8151916000915b8383106103605750505050506001905b0161017e565b6001600160e01b03196103738484610a81565b51166000818152600080516020610cd183398151915260205260409020549091906001600160a01b03166104ac5761040c6103ac6109e7565b87815261ffff9290921660208084018281526000868152600080516020610cd183398151915290925260409091209351845491516001600160b01b03199092166001600160a01b03919091161760a09190911b61ffff60a01b1617909255565b600080516020610cb18339815191525491680100000000000000008310156104965761046d90610450600194858101600080516020610cb183398151915255610b3d565b90919063ffffffff83549160031b9260e01c831b921b1916179055565b61ffff811461048057810192019161034a565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405163ebbf5d0760e01b815260048101839052602490fd5b6040516302b8da0760e21b81529081906104e29060048301610af8565b0390fd5b91969295909490916001810361064e5750861561063357610549610508610a07565b602881527f4c69624469616d6f6e644375743a205265706c61636520666163657420686173602082015267206e6f20636f646560c01b604082015288610c71565b60005b8551811015610625576001600160e01b03196105688288610a81565b51166000818152600080516020610cd183398151915260205260409020546001600160a01b031630811461060c578981146105f357156105db576000908152600080516020610cd18339815191526020526040902080546001600160a01b031916891790556105d690610b89565b61054c565b60249060405190637479f93960e01b82526004820152fd5b604051631ac6ce8d60e11b815260048101839052602490fd5b604051632901806d60e11b815260048101839052602490fd5b50935093600191955061035a565b60405163cd98a96f60e01b8152806104e28760048301610af8565b6002810361084d5750600080516020610cb1833981519152549680610835575060005b8551811015610625576001600160e01b031961068d8288610a81565b51169081600052600080516020610cd18339815191526020526040600020986106b46109e7565b99546001600160a01b038116808c5260a09190911c61ffff1660208c01521561081c5789516001600160a01b031630146108035780156104805760001901988961ffff60208301511603610788575b50600080516020610cb1833981519152549182156107725761076d926000190161072c81610b3d565b63ffffffff82549160031b1b19169055600080516020610cb183398151915255600052600080516020610cd183398151915260205260006040812055610b89565b610671565b634e487b7160e01b600052603160045260246000fd5b6107fd9061ffff602061079a8d610b3d565b90549060031b1c60e01b926107b784610450858585015116610b3d565b01516001600160e01b03199092166000908152600080516020610cd183398151915260205260409020805461ffff60a01b19169190921660a01b61ffff60a01b16179055565b38610703565b604051630df5fd6160e31b815260048101849052602490fd5b604051637a08a22d60e01b815260048101849052602490fd5b6024906040519063d091bc8160e01b82526004820152fd5b604051633ff4d20f60e11b815260249161086b906004830190610aab565bfd5b634e487b7160e01b600052602160045260246000fd5b60405163e767f91f60e01b815260048101839052602490fd5b823567ffffffffffffffff81116109d35760606004358201360360231901126109d3576040519081606081011067ffffffffffffffff60608401111761049657606082016040526004358101602401356001600160a01b03811681036109d3578252600360448260043501013510156109d3576004358101604481013560208401526064013567ffffffffffffffff81116109d357366043828460043501010112156109d357602481836004350101013561095961011782610a4d565b9260208483815201903660448460051b868460043501010101116109d35760448482600435010101915b60448460051b86846004350101010183106109b0575050505050604082015281526020928301920161012d565b82356001600160e01b0319811690036109d3578235815260209283019201610983565b600080fd5b6330cd747160e01b8152600490fd5b604051906040820182811067ffffffffffffffff82111761049657604052565b604051906060820182811067ffffffffffffffff82111761049657604052565b6040519190601f01601f1916820167ffffffffffffffff81118382101761049657604052565b67ffffffffffffffff81116104965760051b60200190565b67ffffffffffffffff811161049657601f01601f191660200190565b8051821015610a955760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90600382101561086d5752565b919082519283825260005b848110610ae4575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ac3565b6020908160408183019282815285518094520193019160005b828110610b1f575050505090565b83516001600160e01b03191685529381019392810192600101610b11565b90600080516020610cb18339815191528054831015610a9557600052601c8260031c7fb65beca8b6fa788bcb1528c2ab5f4dc6bc98e5896550baa013d8330fab0b86f4019260021b1690565b60001981146104805760010190565b6001600160a01b03811691908215610c6c5760008091610bf7610bb9610a07565b602581527f6469616d6f6e644375743a205f696e6974206164647265737320686173206e6f60208201526420636f646560d81b604082015282610c71565b83519060208501905af4913d15610c64573d92610c1661011785610a65565b9384523d6000602086013e5b15610c2c57505050565b825115610c3b57825160208401fd5b6104e260405192839263192105d760e01b84526004840152604060248401526044830190610ab8565b606092610c22565b505050565b803b15610c7c575050565b6040805163919834b960e01b81526001600160a01b03909216600483015260248201529081906104e2906044830190610ab856fe806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd3806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd2a26469706673582212206bfd5103f4e8c43e35d426c19e9e54a4174306193322a87d0d59d7b5aaf751f764736f6c63430008130033",
    "sourceMap": "472:750:39:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608080604052600436101561001357600080fd5b60003560e01c631f931c1c1461002857600080fd5b346109d35760603660031901126109d35767ffffffffffffffff600435116109d3573660236004350112156109d357600435600401359067ffffffffffffffff82116109d3573660248360051b6004350101116109d3576024356001600160a01b03811690036109d35767ffffffffffffffff604435116109d3573660236044350112156109d35767ffffffffffffffff60443560040135116109d357366024604435600401356044350101116109d3577f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd5546001600160a01b031633036109d8575061011c61011782610a4d565b610a27565b602081838152018092602460043501915b60248260051b6004350101831061089c5750505061015361011760443560040135610a65565b6044356004810135808352919291906024016020840137600060206044356004013584010152805160005b81811061029a575050604051906060820190606083525180915260809081830191808260051b85010195926000915b83831061020b576024356001600160a01b031660208701528588036040870152610209877f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67388806101fe8d85610ab8565b0390a1602435610b98565b005b9091929396607f1986820301835287516020836040606085019360018060a01b0381511686526102418482015185880190610aab565b015193606060408201528451809452019201906000905b80821061027757505050602080600192990193019301919392906101ad565b82516001600160e01b031916845260209384019390920191600190910190610258565b60406102a68285610a81565b5101516001600160a01b036102bb8386610a81565b515116908051156108835760206102d28487610a81565b510151600381101561086d57806104e6575081156104c55761ffff600080516020610cb18339815191525416610343610309610a07565b602181527f6469616d6f6e644375743a2041646420666163657420686173206e6f20636f646020820152606560f81b604082015284610c71565b8151916000915b8383106103605750505050506001905b0161017e565b6001600160e01b03196103738484610a81565b51166000818152600080516020610cd183398151915260205260409020549091906001600160a01b03166104ac5761040c6103ac6109e7565b87815261ffff9290921660208084018281526000868152600080516020610cd183398151915290925260409091209351845491516001600160b01b03199092166001600160a01b03919091161760a09190911b61ffff60a01b1617909255565b600080516020610cb18339815191525491680100000000000000008310156104965761046d90610450600194858101600080516020610cb183398151915255610b3d565b90919063ffffffff83549160031b9260e01c831b921b1916179055565b61ffff811461048057810192019161034a565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405163ebbf5d0760e01b815260048101839052602490fd5b6040516302b8da0760e21b81529081906104e29060048301610af8565b0390fd5b91969295909490916001810361064e5750861561063357610549610508610a07565b602881527f4c69624469616d6f6e644375743a205265706c61636520666163657420686173602082015267206e6f20636f646560c01b604082015288610c71565b60005b8551811015610625576001600160e01b03196105688288610a81565b51166000818152600080516020610cd183398151915260205260409020546001600160a01b031630811461060c578981146105f357156105db576000908152600080516020610cd18339815191526020526040902080546001600160a01b031916891790556105d690610b89565b61054c565b60249060405190637479f93960e01b82526004820152fd5b604051631ac6ce8d60e11b815260048101839052602490fd5b604051632901806d60e11b815260048101839052602490fd5b50935093600191955061035a565b60405163cd98a96f60e01b8152806104e28760048301610af8565b6002810361084d5750600080516020610cb1833981519152549680610835575060005b8551811015610625576001600160e01b031961068d8288610a81565b51169081600052600080516020610cd18339815191526020526040600020986106b46109e7565b99546001600160a01b038116808c5260a09190911c61ffff1660208c01521561081c5789516001600160a01b031630146108035780156104805760001901988961ffff60208301511603610788575b50600080516020610cb1833981519152549182156107725761076d926000190161072c81610b3d565b63ffffffff82549160031b1b19169055600080516020610cb183398151915255600052600080516020610cd183398151915260205260006040812055610b89565b610671565b634e487b7160e01b600052603160045260246000fd5b6107fd9061ffff602061079a8d610b3d565b90549060031b1c60e01b926107b784610450858585015116610b3d565b01516001600160e01b03199092166000908152600080516020610cd183398151915260205260409020805461ffff60a01b19169190921660a01b61ffff60a01b16179055565b38610703565b604051630df5fd6160e31b815260048101849052602490fd5b604051637a08a22d60e01b815260048101849052602490fd5b6024906040519063d091bc8160e01b82526004820152fd5b604051633ff4d20f60e11b815260249161086b906004830190610aab565bfd5b634e487b7160e01b600052602160045260246000fd5b60405163e767f91f60e01b815260048101839052602490fd5b823567ffffffffffffffff81116109d35760606004358201360360231901126109d3576040519081606081011067ffffffffffffffff60608401111761049657606082016040526004358101602401356001600160a01b03811681036109d3578252600360448260043501013510156109d3576004358101604481013560208401526064013567ffffffffffffffff81116109d357366043828460043501010112156109d357602481836004350101013561095961011782610a4d565b9260208483815201903660448460051b868460043501010101116109d35760448482600435010101915b60448460051b86846004350101010183106109b0575050505050604082015281526020928301920161012d565b82356001600160e01b0319811690036109d3578235815260209283019201610983565b600080fd5b6330cd747160e01b8152600490fd5b604051906040820182811067ffffffffffffffff82111761049657604052565b604051906060820182811067ffffffffffffffff82111761049657604052565b6040519190601f01601f1916820167ffffffffffffffff81118382101761049657604052565b67ffffffffffffffff81116104965760051b60200190565b67ffffffffffffffff811161049657601f01601f191660200190565b8051821015610a955760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90600382101561086d5752565b919082519283825260005b848110610ae4575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ac3565b6020908160408183019282815285518094520193019160005b828110610b1f575050505090565b83516001600160e01b03191685529381019392810192600101610b11565b90600080516020610cb18339815191528054831015610a9557600052601c8260031c7fb65beca8b6fa788bcb1528c2ab5f4dc6bc98e5896550baa013d8330fab0b86f4019260021b1690565b60001981146104805760010190565b6001600160a01b03811691908215610c6c5760008091610bf7610bb9610a07565b602581527f6469616d6f6e644375743a205f696e6974206164647265737320686173206e6f60208201526420636f646560d81b604082015282610c71565b83519060208501905af4913d15610c64573d92610c1661011785610a65565b9384523d6000602086013e5b15610c2c57505050565b825115610c3b57825160208401fd5b6104e260405192839263192105d760e01b84526004840152604060248401526044830190610ab8565b606092610c22565b505050565b803b15610c7c575050565b6040805163919834b960e01b81526001600160a01b03909216600483015260248201529081906104e2906044830190610ab856fe806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd3806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd2a26469706673582212206bfd5103f4e8c43e35d426c19e9e54a4174306193322a87d0d59d7b5aaf751f764736f6c63430008130033",
    "sourceMap": "472:750:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;472:750:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;472:750:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:30:59;472:750:39;-1:-1:-1;;;;;472:750:39;2649:10:59;:44;2645:92;;472:750:39;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2941:19:59;;;;;;472:750:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;472:750:39;;;;;;;;;;;;4027:9:59;472:750:39;3915:74:59;472:750:39;;;;;;:::i;:::-;3915:74:59;;;472:750:39;;4027:9:59;:::i;:::-;472:750:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;472:750:39;;;;;;;;;;;;;;;;;;;2917:22:59;472:750:39;3014:23:59;;;;:::i;:::-;;:41;;-1:-1:-1;;;;;3092:23:59;;;;:::i;:::-;;472:750:39;;;;;3146:29:59;3142:122;;472:750:39;3313:23:59;;;;:::i;:::-;;:30;472:750:39;;;;;;;3361:37:59;;;4154:27;;;4150:116;;472:750:39;-1:-1:-1;;;;;;;;;;;472:750:39;;4389:74:59;472:750:39;;:::i;:::-;;;;;;;;;-1:-1:-1;;;472:750:39;;;;4389:74:59;;:::i;:::-;472:750:39;;4530:25:59;472:750:39;4525:681:59;4557:22;;;;;;3357:466;;;;;472:750:39;3357:466:59;;472:750:39;2917:22:59;;4530:25;-1:-1:-1;;;;;;4615:33:59;;;;:::i;:::-;472:750:39;;;;;;-1:-1:-1;;;;;;;;;;;472:750:39;;;;;;;;;-1:-1:-1;;;;;472:750:39;4759:128:59;;472:750:39;;;:::i;:::-;;;;;;;;;;4947:107:59;;;472:750:39;;;-1:-1:-1;472:750:39;;;-1:-1:-1;;;;;;;;;;;472:750:39;;;;;;;;;;;;;-1:-1:-1;;;;;;472:750:39;;;-1:-1:-1;;;;;472:750:39;;;;;;;;;;-1:-1:-1;;;472:750:39;;;;;;;-1:-1:-1;;;;;;;;;;;472:750:39;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;472:750:39;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4530:25:59;;;472:750:39;;;;;;;;;;;;;;;;;;;;;;;;4759:128:59;472:750:39;;-1:-1:-1;;;4819:53:59;;472:750:39;4819:53:59;;472:750:39;;;;;4819:53:59;4150:116;472:750:39;;-1:-1:-1;;;4204:51:59;;472:750:39;;;4204:51:59;;472:750:39;4204:51:59;;;:::i;:::-;;;;3357:466;3488:41;;;;;;;;472:750:39;3488:41:59;;472:750:39;;5380:27:59;;;5376:131;;5516:81;472:750:39;;:::i;:::-;;;;;;;;;-1:-1:-1;;;472:750:39;;;;5516:81:59;;:::i;:::-;472:750:39;5678:15:59;472:750:39;;5635:41:59;;;;;-1:-1:-1;;;;;;5727:33:59;;;;:::i;:::-;472:750:39;;;;;;-1:-1:-1;;;;;;;;;;;472:750:39;;;;;;-1:-1:-1;;;;;472:750:39;6009:4:59;5982:32;;5978:118;;6113:32;;;6109:144;;6270:29;6266:123;;472:750:39;;;;-1:-1:-1;;;;;;;;;;;472:750:39;;;;;;;-1:-1:-1;;;;;;472:750:39;;;;;5678:15:59;;;:::i;:::-;5612:21;;6266:123;472:750:39;;;;6326:48:59;;;;;;472:750:39;6326:48:59;;472:750:39;6326:48:59;6109:144;472:750:39;;-1:-1:-1;;;6172:66:59;;472:750:39;6172:66:59;;472:750:39;;;;;6172:66:59;5978:118;472:750:39;;-1:-1:-1;;;6041:40:59;;472:750:39;6041:40:59;;472:750:39;;;;;6041:40:59;5635:41;;;;;472:750:39;5635:41:59;;;3357:466;;5376:131;472:750:39;;-1:-1:-1;;;5430:66:59;;472:750:39;5430:66:59;472:750:39;;5430:66:59;;;:::i;3484:339::-;3633:30;3623:40;;3633:30;;472:750:39;-1:-1:-1;;;;;;;;;;;472:750:39;6753:27:59;;6749:115;;6878:21;472:750:39;6944:15:59;472:750:39;;6901:41:59;;;;;-1:-1:-1;;;;;;6993:33:59;;;;:::i;:::-;472:750:39;;;;;;-1:-1:-1;;;;;;;;;;;472:750:39;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;472:750:39;;;;;;;;;;;;;;;;7195:61:59;7191:153;;472:750:39;;-1:-1:-1;;;;;472:750:39;7514:4:59;7455:64;7451:149;;472:750:39;;;;;;;;;;;;;;;7697:68:59;7693:412;;6944:15;472:750:39;-1:-1:-1;;;;;;;;;;;472:750:39;;;;;;6944:15:59;;-1:-1:-1;;472:750:39;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;472:750:39;;;-1:-1:-1;;;;;;;;;;;472:750:39;;;;;;;6944:15:59;:::i;:::-;6878:21;;472:750:39;;;;;;;;;;;;7693:412:59;7950:140;7807:27;472:750:39;;7807:27:59;;;:::i;:::-;472:750:39;;;;;;;;;7852:80:59;472:750:39;7852:65:59;472:750:39;;;;;;7852:65:59;:::i;:80::-;472:750:39;;-1:-1:-1;;;;;;472:750:39;;;;;;;-1:-1:-1;;;;;;;;;;;472:750:39;;;;;;;-1:-1:-1;;;;472:750:39;;;;;;;-1:-1:-1;;;472:750:39;;;;;7950:140:59;7693:412;;;7451:149;472:750:39;;-1:-1:-1;;;7546:39:59;;472:750:39;7546:39:59;;472:750:39;;;;;7546:39:59;7191:153;472:750:39;;-1:-1:-1;;;7283:46:59;;472:750:39;7283:46:59;;472:750:39;;;;;7283:46:59;6749:115;472:750:39;;;;6803:50:59;;;;;;472:750:39;6803:50:59;;472:750:39;6803:50:59;3619:204;472:750:39;;-1:-1:-1;;;3777:31:59;;472:750:39;;;;;3777:31:59;;;472:750:39;:::i;:::-;3777:31:59;472:750:39;;;;;;;;;;;;3142:122:59;472:750:39;;-1:-1:-1;;;3202:47:59;;472:750:39;3202:47:59;;472:750:39;;;;;3202:47:59;472:750:39;;;;;;;;;;;;;;;-1:-1:-1;;472:750:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;472:750:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;472:750:39;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;472:750:39;;;;;;;;;;;;;;;;;;;;;;2645:92:59;-1:-1:-1;;;2716:10:59;;472:750:39;;2716:10:59;472:750:39;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;472:750:39;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;472:750:39;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;;472:750:39;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;472:750:39;;;;;;;-1:-1:-1;472:750:39;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;472:750:39;;;;;;;:::o;8260:830:59:-;-1:-1:-1;;;;;472:750:39;;;8260:830:59;8352:19;;8348:56;;8369:1;472:750:39;;8413:70:59;472:750:39;;:::i;:::-;;;;;;;;;-1:-1:-1;;;472:750:39;;;;8413:70:59;;:::i;:::-;8583:29;;;472:750:39;8583:29:59;;;;;;472:750:39;;;;;;;;;;:::i;:::-;;;;;8369:1:59;472:750:39;;;;;8672:8:59;8668:416;;8260:830;;;:::o;8668:416::-;472:750:39;;8700:16:59;:12;;8822:144;;472:750:39;8822:144:59;;;8696:378;472:750:39;;;9011:48:59;;;;;;;;;;;472:750:39;;;;;;;;;;;:::i;:::-;;;;;8348:56:59;8387:7;;;:::o;9096:320::-;9230:71;;9314:17;9310:100;;9096:320;;:::o;9310:100::-;472:750:39;;;-1:-1:-1;;;9354:45:59;;-1:-1:-1;;;;;472:750:39;;;9354:45:59;;;472:750:39;;;;;;;;;;;;;;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotAddFunctionToDiamondThatAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"_selectors\",\"type\":\"bytes4[]\"}],\"name\":\"CannotAddSelectorsToZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotRemoveFunctionThatDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotRemoveImmutableFunction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotReplaceFunctionThatDoesNotExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"_selectors\",\"type\":\"bytes4[]\"}],\"name\":\"CannotReplaceFunctionsFromFacetWithZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotReplaceImmutableFunction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"_action\",\"type\":\"uint8\"}],\"name\":\"IncorrectFacetCutAction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initializationContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"InitializationFunctionReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"NoBytecodeAtAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_facetAddress\",\"type\":\"address\"}],\"name\":\"NoSelectorsProvidedForFacetForCut\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_facetAddress\",\"type\":\"address\"}],\"name\":\"RemoveFacetAddressMustBeZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamond.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamond.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"_calldata\":\"A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init\",\"_diamondCut\":\"Contains the facet addresses and function selectors\",\"_init\":\"The address of the contract or facet to execute _calldata\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Add/replace/remove any number of functions and optionally execute         a function with delegatecall\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/diamond/DiamondCutFacet.sol\":\"DiamondCutFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"src/diamond/DiamondCutFacet.sol\":{\"keccak256\":\"0x673f0c594445cda87a9d83c063385ffc2b9a052c2114eb77835a858e17b233a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9034b59b56ce2fdb4326b4cca030d7e5b891c5855d58cd6656b505b5b331985d\",\"dweb:/ipfs/QmaNn4DdN2gNJ62vXDGTMzCmg19fVWpcjpwU3yBEpEX6gV\"]},\"src/interfaces/IDiamond.sol\":{\"keccak256\":\"0x4458466caa842c9f6acc4a52ce32ae61ab705ec64a6a62626dadf7ef1da2c016\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b5b66a6dee491abf6aceaae603554781c3042c1b9d3f4c65f00a70f293ad07f1\",\"dweb:/ipfs/QmPkArewER2FTp5fZPCG2K2EcRGWq3XhdGdUDhiQbYh1gn\"]},\"src/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0xfce76cbd9e6b2e1db8c16253b2a64640093226a521416fef04de75c8704b0c57\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5d8532895a516253dda46faa09cdbfbffac55f8d6d83e082bea1479445e73643\",\"dweb:/ipfs/QmfBiFhj5YxBMbTJHiYwztBqtahwkQVhPtyfW8w4t1ZQU4\"]},\"src/lib/LibDiamond.sol\":{\"keccak256\":\"0x272a9f4a0f8cd9430148a61b272db2c33f53bd3144f2123d6b891fb00932bf7a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://285f52ec07cd38f1f567acc64acaa65956230dac3f71a7365a0afc1785a8c0d3\",\"dweb:/ipfs/QmUteCBSzVq8L8zH3S4a4PQAPR8ncZbJLc6ckap3pzgYww\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "CannotAddFunctionToDiamondThatAlreadyExists"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4[]",
              "name": "_selectors",
              "type": "bytes4[]"
            }
          ],
          "type": "error",
          "name": "CannotAddSelectorsToZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "CannotRemoveFunctionThatDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "CannotRemoveImmutableFunction"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "CannotReplaceFunctionThatDoesNotExists"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4[]",
              "name": "_selectors",
              "type": "bytes4[]"
            }
          ],
          "type": "error",
          "name": "CannotReplaceFunctionsFromFacetWithZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "CannotReplaceImmutableFunction"
        },
        {
          "inputs": [
            {
              "internalType": "enum IDiamond.FacetCutAction",
              "name": "_action",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "IncorrectFacetCutAction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initializationContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "InitializationFunctionReverted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_message",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "NoBytecodeAtAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_facetAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NoSelectorsProvidedForFacetForCut"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_facetAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "RemoveFacetAddressMustBeZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "struct IDiamond.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamond.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_init",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DiamondCut",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IDiamond.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamond.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "diamondCut"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "params": {
              "_calldata": "A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init",
              "_diamondCut": "Contains the facet addresses and function selectors",
              "_init": "The address of the contract or facet to execute _calldata"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "notice": "Add/replace/remove any number of functions and optionally execute         a function with delegatecall"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "fevmate/=lib/fevmate/contracts/",
        "forge-std/=lib/forge-std/src/",
        "murky/=lib/murky/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/diamond/DiamondCutFacet.sol": "DiamondCutFacet"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "src/diamond/DiamondCutFacet.sol": {
        "keccak256": "0x673f0c594445cda87a9d83c063385ffc2b9a052c2114eb77835a858e17b233a6",
        "urls": [
          "bzz-raw://9034b59b56ce2fdb4326b4cca030d7e5b891c5855d58cd6656b505b5b331985d",
          "dweb:/ipfs/QmaNn4DdN2gNJ62vXDGTMzCmg19fVWpcjpwU3yBEpEX6gV"
        ],
        "license": "MIT"
      },
      "src/interfaces/IDiamond.sol": {
        "keccak256": "0x4458466caa842c9f6acc4a52ce32ae61ab705ec64a6a62626dadf7ef1da2c016",
        "urls": [
          "bzz-raw://b5b66a6dee491abf6aceaae603554781c3042c1b9d3f4c65f00a70f293ad07f1",
          "dweb:/ipfs/QmPkArewER2FTp5fZPCG2K2EcRGWq3XhdGdUDhiQbYh1gn"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/interfaces/IDiamondCut.sol": {
        "keccak256": "0xfce76cbd9e6b2e1db8c16253b2a64640093226a521416fef04de75c8704b0c57",
        "urls": [
          "bzz-raw://5d8532895a516253dda46faa09cdbfbffac55f8d6d83e082bea1479445e73643",
          "dweb:/ipfs/QmfBiFhj5YxBMbTJHiYwztBqtahwkQVhPtyfW8w4t1ZQU4"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibDiamond.sol": {
        "keccak256": "0x272a9f4a0f8cd9430148a61b272db2c33f53bd3144f2123d6b891fb00932bf7a",
        "urls": [
          "bzz-raw://285f52ec07cd38f1f567acc64acaa65956230dac3f71a7365a0afc1785a8c0d3",
          "dweb:/ipfs/QmUteCBSzVq8L8zH3S4a4PQAPR8ncZbJLc6ckap3pzgYww"
        ],
        "license": "MIT OR Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/diamond/DiamondCutFacet.sol",
    "id": 36386,
    "exportedSymbols": {
      "DiamondCutFacet": [
        36385
      ],
      "IDiamondCut": [
        39468
      ],
      "LibDiamond": [
        41031
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1191:39",
    "nodes": [
      {
        "id": 36351,
        "nodeType": "PragmaDirective",
        "src": "32:23:39",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 36353,
        "nodeType": "ImportDirective",
        "src": "362:58:39",
        "nodes": [],
        "absolutePath": "src/interfaces/IDiamondCut.sol",
        "file": "../interfaces/IDiamondCut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36386,
        "sourceUnit": 39469,
        "symbolAliases": [
          {
            "foreign": {
              "id": 36352,
              "name": "IDiamondCut",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39468,
              "src": "370:11:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 36355,
        "nodeType": "ImportDirective",
        "src": "421:49:39",
        "nodes": [],
        "absolutePath": "src/lib/LibDiamond.sol",
        "file": "../lib/LibDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36386,
        "sourceUnit": 41032,
        "symbolAliases": [
          {
            "foreign": {
              "id": 36354,
              "name": "LibDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41031,
              "src": "429:10:39",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 36385,
        "nodeType": "ContractDefinition",
        "src": "472:750:39",
        "nodes": [
          {
            "id": 36384,
            "nodeType": "FunctionDefinition",
            "src": "961:259:39",
            "nodes": [],
            "body": {
              "id": 36383,
              "nodeType": "Block",
              "src": "1073:147:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 36370,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41031,
                        "src": "1083:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$41031_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 36372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1094:22:39",
                      "memberName": "enforceIsContractOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40501,
                      "src": "1083:33:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 36373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:35:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36374,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:35:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36378,
                        "name": "_diamondCut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36362,
                        "src": "1164:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$39438_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDiamond.FacetCut calldata[] calldata"
                        }
                      },
                      {
                        "id": 36379,
                        "name": "_init",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36364,
                        "src": "1184:5:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 36380,
                        "name": "_calldata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36366,
                        "src": "1202:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$39438_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDiamond.FacetCut calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 36375,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41031,
                        "src": "1128:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$41031_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 36377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1139:10:39",
                      "memberName": "diamondCut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40620,
                      "src": "1128:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$39438_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct IDiamond.FacetCut memory[] memory,address,bytes memory)"
                      }
                    },
                    "id": 36381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1151:11:39",
                      "1177:5:39",
                      "1191:9:39"
                    ],
                    "names": [
                      "_diamondCut",
                      "_init",
                      "_calldata"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1128:85:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36382,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:85:39"
                }
              ]
            },
            "baseFunctions": [
              39467
            ],
            "documentation": {
              "id": 36358,
              "nodeType": "StructuredDocumentation",
              "src": "518:438:39",
              "text": "@notice Add/replace/remove any number of functions and optionally execute\n         a function with delegatecall\n @param _diamondCut Contains the facet addresses and function selectors\n @param _init The address of the contract or facet to execute _calldata\n @param _calldata A function call, including function selector and arguments\n                  _calldata is executed with delegatecall on _init"
            },
            "functionSelector": "1f931c1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "diamondCut",
            "nameLocation": "970:10:39",
            "overrides": {
              "id": 36368,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1064:8:39"
            },
            "parameters": {
              "id": 36367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36362,
                  "mutability": "mutable",
                  "name": "_diamondCut",
                  "nameLocation": "1001:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 36384,
                  "src": "981:31:39",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FacetCut_$39438_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IDiamond.FacetCut[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36360,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36359,
                        "name": "FacetCut",
                        "nameLocations": [
                          "981:8:39"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 39438,
                        "src": "981:8:39"
                      },
                      "referencedDeclaration": 39438,
                      "src": "981:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$39438_storage_ptr",
                        "typeString": "struct IDiamond.FacetCut"
                      }
                    },
                    "id": 36361,
                    "nodeType": "ArrayTypeName",
                    "src": "981:10:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$39438_storage_$dyn_storage_ptr",
                      "typeString": "struct IDiamond.FacetCut[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36364,
                  "mutability": "mutable",
                  "name": "_init",
                  "nameLocation": "1022:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 36384,
                  "src": "1014:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36366,
                  "mutability": "mutable",
                  "name": "_calldata",
                  "nameLocation": "1044:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 36384,
                  "src": "1029:24:39",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 36365,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "980:74:39"
            },
            "returnParameters": {
              "id": 36369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:0:39"
            },
            "scope": 36385,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 36356,
              "name": "IDiamondCut",
              "nameLocations": [
                "500:11:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39468,
              "src": "500:11:39"
            },
            "id": 36357,
            "nodeType": "InheritanceSpecifier",
            "src": "500:11:39"
          }
        ],
        "canonicalName": "DiamondCutFacet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          36385,
          39468,
          39449
        ],
        "name": "DiamondCutFacet",
        "nameLocation": "481:15:39",
        "scope": 36386,
        "usedErrors": [
          40332,
          40338,
          40343,
          40347,
          40351,
          40356,
          40362,
          40375,
          40379,
          40383,
          40387,
          40391,
          40395,
          40399
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 39
}