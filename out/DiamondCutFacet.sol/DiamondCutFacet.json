{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "CannotAddFunctionToDiamondThatAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4[]",
          "name": "_selectors",
          "type": "bytes4[]"
        }
      ],
      "name": "CannotAddSelectorsToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "CannotRemoveFunctionThatDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "CannotRemoveImmutableFunction",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "CannotReplaceFunctionThatDoesNotExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4[]",
          "name": "_selectors",
          "type": "bytes4[]"
        }
      ],
      "name": "CannotReplaceFunctionsFromFacetWithZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "CannotReplaceImmutableFunction",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum IDiamond.FacetCutAction",
          "name": "_action",
          "type": "uint8"
        }
      ],
      "name": "IncorrectFacetCutAction",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_initializationContractAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "InitializationFunctionReverted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "NoBytecodeAtAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_facetAddress",
          "type": "address"
        }
      ],
      "name": "NoSelectorsProvidedForFacetForCut",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_facetAddress",
          "type": "address"
        }
      ],
      "name": "RemoveFacetAddressMustBeZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamond.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDiamond.FacetCut[]",
          "name": "_diamondCut",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_init",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "DiamondCut",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamond.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamond.FacetCut[]",
          "name": "_diamondCut",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "_init",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "diamondCut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610f5e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610963565b610045565b005b61004d61009e565b61009761005a8587610aa9565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506100db92505050565b5050505050565b600080516020610f09833981519152600301546001600160a01b031633146100d9576040516330cd747160e01b815260040160405180910390fd5b565b825160005b818110156102285760008582815181106100fc576100fc610bed565b6020026020010151604001519050600086838151811061011e5761011e610bed565b6020026020010151600001519050815160000361015e5760405163e767f91f60e01b81526001600160a01b03821660048201526024015b60405180910390fd5b600087848151811061017257610172610bed565b60200260200101516020015190506000600281111561019357610193610c03565b8160028111156101a5576101a5610c03565b036101b9576101b48284610274565b61021a565b60018160028111156101cd576101cd610c03565b036101dc576101b48284610427565b60028160028111156101f0576101f0610c03565b036101ff576101b4828461058d565b80604051633ff4d20f60e11b81526004016101559190610c3b565b8360010193505050506100e0565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67384848460405161025c93929190610c9f565b60405180910390a161026e838361080b565b50505050565b6001600160a01b03821661029d57806040516302b8da0760e21b81526004016101559190610d8b565b7f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd35460408051606081019091526021808252600080516020610f0983398151915292916102f491869190610ec060208301396108d1565b825160005b8181101561041f57600085828151811061031557610315610bed565b6020908102919091018101516001600160e01b031981166000908152918790526040909120549091506001600160a01b03168015610368578160405163ebbf5d0760e01b81526004016101559190610dd9565b6040805180820182526001600160a01b03808b16825261ffff80891660208085019182526001600160e01b0319881660009081528c8252958620945185549251909316600160a01b026001600160b01b0319909216929093169190911717909155600180890180549182018155835291206008820401805460e085901c60046007909416939093026101000a92830263ffffffff909302191691909117905561041085610e04565b945082600101925050506102f9565b505050505050565b600080516020610f098339815191526001600160a01b03831661045f578160405163cd98a96f60e01b81526004016101559190610d8b565b61048183604051806060016040528060288152602001610ee1602891396108d1565b815160005b818110156100975760008482815181106104a2576104a2610bed565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03163081036104f65781604051632901806d60e11b81526004016101559190610dd9565b866001600160a01b0316816001600160a01b03160361052a5781604051631ac6ce8d60e11b81526004016101559190610dd9565b6001600160a01b0381166105535781604051637479f93960e01b81526004016101559190610dd9565b506001600160e01b031916600090815260208490526040902080546001600160a01b0319166001600160a01b038716179055600101610486565b7f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd354600080516020610f09833981519152906001600160a01b038416156105f25760405163d091bc8160e01b81526001600160a01b0385166004820152602401610155565b825160005b8181101561041f57600085828151811061061357610613610bed565b6020908102919091018101516001600160e01b0319811660009081528783526040908190208151808301909252546001600160a01b038116808352600160a01b90910461ffff1693820193909352909250906106845781604051637a08a22d60e01b81526004016101559190610dd9565b8051306001600160a01b03909116036106b25781604051630df5fd6160e31b81526004016101559190610dd9565b846106bc81610e25565b95505084816020015161ffff161461079a5760008660010186815481106106e5576106e5610bed565b90600052602060002090600891828204019190066004029054906101000a900460e01b90508087600101836020015161ffff168154811061072857610728610bed565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c92909202939093179055838201516001600160e01b03199390931681529088905260409020805461ffff60a01b1916600160a01b61ffff909316929092029190911790555b856001018054806107ad576107ad610e3c565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319909316815291869052506040902080546001600160b01b03191690556001016105f7565b6001600160a01b03821661081d575050565b61083f82604051806060016040528060258152602001610e9b602591396108d1565b600080836001600160a01b03168360405161085a9190610e52565b600060405180830381855af49150503d8060008114610895576040519150601f19603f3d011682016040523d82523d6000602084013e61089a565b606091505b50915091508161026e578051156108b45780518082602001fd5b838360405163192105d760e01b8152600401610155929190610e6e565b813b60008190036108f957828260405163919834b960e01b8152600401610155929190610e6e565b505050565b80356001600160a01b038116811461091557600080fd5b919050565b60008083601f84011261092c57600080fd5b50813567ffffffffffffffff81111561094457600080fd5b60208301915083602082850101111561095c57600080fd5b9250929050565b60008060008060006060868803121561097b57600080fd5b853567ffffffffffffffff8082111561099357600080fd5b818801915088601f8301126109a757600080fd5b8135818111156109b657600080fd5b8960208260051b85010111156109cb57600080fd5b602083019750809650506109e1602089016108fe565b945060408801359150808211156109f757600080fd5b50610a048882890161091a565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610a4e57610a4e610a15565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a7d57610a7d610a15565b604052919050565b600067ffffffffffffffff821115610a9f57610a9f610a15565b5060051b60200190565b6000610abc610ab784610a85565b610a54565b83815260208082019190600586811b860136811115610ada57600080fd5b865b81811015610be057803567ffffffffffffffff80821115610afd5760008081fd5b818a01915060608236031215610b135760008081fd5b610b1b610a2b565b610b24836108fe565b81528683013560038110610b385760008081fd5b8188015260408381013583811115610b505760008081fd5b939093019236601f850112610b6757600092508283fd5b83359250610b77610ab784610a85565b83815292871b84018801928881019036851115610b945760008081fd5b948901945b84861015610bc95785356001600160e01b031981168114610bba5760008081fd5b82529489019490890190610b99565b918301919091525088525050948301948301610adc565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60038110610c3757634e487b7160e01b600052602160045260246000fd5b9052565b60208101610c498284610c19565b92915050565b60005b83811015610c6a578181015183820152602001610c52565b50506000910152565b60008151808452610c8b816020860160208601610c4f565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b016000805b85811015610d5a578a8503607f19018752825180516001600160a01b03168652848101518a870190610cfd87890182610c19565b506040918201519187018b90528151908190529085019083908a8801905b80831015610d455783516001600160e01b0319168252928701926001929092019190870190610d1b565b50988601989650505091830191600101610cc9565b5050506001600160a01b038a16908801528681036040880152610d7d8189610c73565b9a9950505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610dcd5783516001600160e01b03191683529284019291840191600101610da7565b50909695505050505050565b6001600160e01b031991909116815260200190565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818103610e1b57610e1b610dee565b6001019392505050565b600081610e3457610e34610dee565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251610e64818460208701610c4f565b9190910192915050565b6001600160a01b0383168152604060208201819052600090610e9290830184610c73565b94935050505056fe6469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64656469616d6f6e644375743a2041646420666163657420686173206e6f20636f64654c69624469616d6f6e644375743a205265706c61636520666163657420686173206e6f20636f6465806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd2a2646970667358221220aecc777137db2a03de6ca56b8731e83a1c47f49e3a815209d24b2429c947f1ca64736f6c63430008130033",
    "sourceMap": "472:750:33:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610963565b610045565b005b61004d61009e565b61009761005a8587610aa9565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506100db92505050565b5050505050565b600080516020610f09833981519152600301546001600160a01b031633146100d9576040516330cd747160e01b815260040160405180910390fd5b565b825160005b818110156102285760008582815181106100fc576100fc610bed565b6020026020010151604001519050600086838151811061011e5761011e610bed565b6020026020010151600001519050815160000361015e5760405163e767f91f60e01b81526001600160a01b03821660048201526024015b60405180910390fd5b600087848151811061017257610172610bed565b60200260200101516020015190506000600281111561019357610193610c03565b8160028111156101a5576101a5610c03565b036101b9576101b48284610274565b61021a565b60018160028111156101cd576101cd610c03565b036101dc576101b48284610427565b60028160028111156101f0576101f0610c03565b036101ff576101b4828461058d565b80604051633ff4d20f60e11b81526004016101559190610c3b565b8360010193505050506100e0565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67384848460405161025c93929190610c9f565b60405180910390a161026e838361080b565b50505050565b6001600160a01b03821661029d57806040516302b8da0760e21b81526004016101559190610d8b565b7f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd35460408051606081019091526021808252600080516020610f0983398151915292916102f491869190610ec060208301396108d1565b825160005b8181101561041f57600085828151811061031557610315610bed565b6020908102919091018101516001600160e01b031981166000908152918790526040909120549091506001600160a01b03168015610368578160405163ebbf5d0760e01b81526004016101559190610dd9565b6040805180820182526001600160a01b03808b16825261ffff80891660208085019182526001600160e01b0319881660009081528c8252958620945185549251909316600160a01b026001600160b01b0319909216929093169190911717909155600180890180549182018155835291206008820401805460e085901c60046007909416939093026101000a92830263ffffffff909302191691909117905561041085610e04565b945082600101925050506102f9565b505050505050565b600080516020610f098339815191526001600160a01b03831661045f578160405163cd98a96f60e01b81526004016101559190610d8b565b61048183604051806060016040528060288152602001610ee1602891396108d1565b815160005b818110156100975760008482815181106104a2576104a2610bed565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03163081036104f65781604051632901806d60e11b81526004016101559190610dd9565b866001600160a01b0316816001600160a01b03160361052a5781604051631ac6ce8d60e11b81526004016101559190610dd9565b6001600160a01b0381166105535781604051637479f93960e01b81526004016101559190610dd9565b506001600160e01b031916600090815260208490526040902080546001600160a01b0319166001600160a01b038716179055600101610486565b7f806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd354600080516020610f09833981519152906001600160a01b038416156105f25760405163d091bc8160e01b81526001600160a01b0385166004820152602401610155565b825160005b8181101561041f57600085828151811061061357610613610bed565b6020908102919091018101516001600160e01b0319811660009081528783526040908190208151808301909252546001600160a01b038116808352600160a01b90910461ffff1693820193909352909250906106845781604051637a08a22d60e01b81526004016101559190610dd9565b8051306001600160a01b03909116036106b25781604051630df5fd6160e31b81526004016101559190610dd9565b846106bc81610e25565b95505084816020015161ffff161461079a5760008660010186815481106106e5576106e5610bed565b90600052602060002090600891828204019190066004029054906101000a900460e01b90508087600101836020015161ffff168154811061072857610728610bed565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c92909202939093179055838201516001600160e01b03199390931681529088905260409020805461ffff60a01b1916600160a01b61ffff909316929092029190911790555b856001018054806107ad576107ad610e3c565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319909316815291869052506040902080546001600160b01b03191690556001016105f7565b6001600160a01b03821661081d575050565b61083f82604051806060016040528060258152602001610e9b602591396108d1565b600080836001600160a01b03168360405161085a9190610e52565b600060405180830381855af49150503d8060008114610895576040519150601f19603f3d011682016040523d82523d6000602084013e61089a565b606091505b50915091508161026e578051156108b45780518082602001fd5b838360405163192105d760e01b8152600401610155929190610e6e565b813b60008190036108f957828260405163919834b960e01b8152600401610155929190610e6e565b505050565b80356001600160a01b038116811461091557600080fd5b919050565b60008083601f84011261092c57600080fd5b50813567ffffffffffffffff81111561094457600080fd5b60208301915083602082850101111561095c57600080fd5b9250929050565b60008060008060006060868803121561097b57600080fd5b853567ffffffffffffffff8082111561099357600080fd5b818801915088601f8301126109a757600080fd5b8135818111156109b657600080fd5b8960208260051b85010111156109cb57600080fd5b602083019750809650506109e1602089016108fe565b945060408801359150808211156109f757600080fd5b50610a048882890161091a565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610a4e57610a4e610a15565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a7d57610a7d610a15565b604052919050565b600067ffffffffffffffff821115610a9f57610a9f610a15565b5060051b60200190565b6000610abc610ab784610a85565b610a54565b83815260208082019190600586811b860136811115610ada57600080fd5b865b81811015610be057803567ffffffffffffffff80821115610afd5760008081fd5b818a01915060608236031215610b135760008081fd5b610b1b610a2b565b610b24836108fe565b81528683013560038110610b385760008081fd5b8188015260408381013583811115610b505760008081fd5b939093019236601f850112610b6757600092508283fd5b83359250610b77610ab784610a85565b83815292871b84018801928881019036851115610b945760008081fd5b948901945b84861015610bc95785356001600160e01b031981168114610bba5760008081fd5b82529489019490890190610b99565b918301919091525088525050948301948301610adc565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60038110610c3757634e487b7160e01b600052602160045260246000fd5b9052565b60208101610c498284610c19565b92915050565b60005b83811015610c6a578181015183820152602001610c52565b50506000910152565b60008151808452610c8b816020860160208601610c4f565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b016000805b85811015610d5a578a8503607f19018752825180516001600160a01b03168652848101518a870190610cfd87890182610c19565b506040918201519187018b90528151908190529085019083908a8801905b80831015610d455783516001600160e01b0319168252928701926001929092019190870190610d1b565b50988601989650505091830191600101610cc9565b5050506001600160a01b038a16908801528681036040880152610d7d8189610c73565b9a9950505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610dcd5783516001600160e01b03191683529284019291840191600101610da7565b50909695505050505050565b6001600160e01b031991909116815260200190565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818103610e1b57610e1b610dee565b6001019392505050565b600081610e3457610e34610dee565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251610e64818460208701610c4f565b9190910192915050565b6001600160a01b0383168152604060208201819052600090610e9290830184610c73565b94935050505056fe6469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64656469616d6f6e644375743a2041646420666163657420686173206e6f20636f64654c69624469616d6f6e644375743a205265706c61636520666163657420686173206e6f20636f6465806e0cbb9fce296bbc336a48f42bf1dbc69722d18d90d6fe705b7582c2bb4bd2a2646970667358221220aecc777137db2a03de6ca56b8731e83a1c47f49e3a815209d24b2429c947f1ca64736f6c63430008130033",
    "sourceMap": "472:750:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;961:259;;;;;;:::i;:::-;;:::i;:::-;;;1083:35;:33;:35::i;:::-;1128:85;;1164:11;;1128:85;:::i;:::-;1184:5;1202:9;;1128:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1128:21:33;;-1:-1:-1;;;1128:85:33:i;:::-;961:259;;;;;:::o;2587:156:53:-;-1:-1:-1;;;;;;;;;;;2663:30:53;;;-1:-1:-1;;;;;2663:30:53;2649:10;:44;2645:92;;2716:10;;-1:-1:-1;;;2716:10:53;;;;;;;;;;;2645:92;2587:156::o;2749:1295::-;2884:18;;2867:14;2912:989;2954:6;2941:10;:19;2912:989;;;2978:33;3014:11;3026:10;3014:23;;;;;;;;:::i;:::-;;;;;;;:41;;;2978:77;;3069:20;3092:11;3104:10;3092:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3069:59;;3146:17;:24;3174:1;3146:29;3142:122;;3202:47;;-1:-1:-1;;;3202:47:53;;-1:-1:-1;;;;;5563:32:87;;3202:47:53;;;5545:51:87;5518:18;;3202:47:53;;;;;;;;3142:122;3277:33;3313:11;3325:10;3313:23;;;;;;;;:::i;:::-;;;;;;;:30;;;3277:66;;3371:27;3361:37;;;;;;;;:::i;:::-;:6;:37;;;;;;;;:::i;:::-;;3357:466;;3418:45;3431:12;3445:17;3418:12;:45::i;:::-;3357:466;;;3498:31;3488:6;:41;;;;;;;;:::i;:::-;;3484:339;;3549:49;3566:12;3580:17;3549:16;:49::i;3484:339::-;3633:30;3623:6;:40;;;;;;;;:::i;:::-;;3619:204;;3683:48;3699:12;3713:17;3683:15;:48::i;3619:204::-;3801:6;3777:31;;-1:-1:-1;;;3777:31:53;;;;;;;;:::i;3619:204::-;3864:12;;;;;2964:937;;;2912:989;;;;3915:74;3940:11;3960:5;3978:9;3915:74;;;;;;;;:::i;:::-;;;;;;;;3999:38;4020:5;4027:9;3999:20;:38::i;:::-;2857:1187;2749:1295;;;:::o;4050:1162::-;-1:-1:-1;;;;;4154:27:53;;4150:116;;4236:18;4204:51;;-1:-1:-1;;;4204:51:53;;;;;;;;:::i;4150:116::-;4359:12;:19;4389:74;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;260:43:53;4359:19;4389:74;;4412:13;;4389:74;;;;;;:22;:74::i;:::-;4490:25;;4473:14;4525:681;4573:6;4557:13;:22;4525:681;;;4597:15;4615:18;4634:13;4615:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;4688:44:53;;4662:23;4688:44;;;;;;;;;;;:57;4615:33;;-1:-1:-1;;;;;;4688:57:53;4763:29;;4759:128;;4863:8;4819:53;;-1:-1:-1;;;4819:53:53;;;;;;;;:::i;4759:128::-;4947:107;;;;;;;;-1:-1:-1;;;;;4947:107:53;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4900:44:53;;-1:-1:-1;4900:44:53;;;;;;;;;:154;;;;;;;;;-1:-1:-1;;;4900:154:53;-1:-1:-1;;;;;;4900:154:53;;;;;;;;;;;;;;;;5068:12;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4900:154;5068:27;;;;;;;;;;;;;;;;5109:15;5027:13;5109:15;:::i;:::-;;;5166;;;;;4583:623;;4525:681;;;;4140:1072;;;4050:1162;;:::o;5218:1395::-;-1:-1:-1;;;;;;;;;;;;;;;;5380:27:53;;5376:131;;5477:18;5430:66;;-1:-1:-1;;;5430:66:53;;;;;;;;:::i;5376:131::-;5516:81;5539:13;5516:81;;;;;;;;;;;;;;;;;:22;:81::i;:::-;5620:25;;5607:10;5655:952;5699:2;5683:13;:18;5655:952;;;5718:15;5736:18;5755:13;5736:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;5809:44:53;;5783:23;5809:44;;;;;;;;;;;:57;5736:33;;-1:-1:-1;;;;;;5809:57:53;6018:4;5991:32;;5987:118;;6081:8;6050:40;;-1:-1:-1;;;6050:40:53;;;;;;;;:::i;5987:118::-;6141:13;-1:-1:-1;;;;;6122:32:53;:15;-1:-1:-1;;;;;6122:32:53;;6118:144;;6238:8;6181:66;;-1:-1:-1;;;6181:66:53;;;;;;;;:::i;6118:144::-;-1:-1:-1;;;;;6279:29:53;;6275:123;;6374:8;6335:48;;-1:-1:-1;;;6335:48:53;;;;;;;;:::i;6275:123::-;-1:-1:-1;;;;;;;6452:44:53;:34;:44;;;;;;;;;;:73;;-1:-1:-1;;;;;;6452:73:53;-1:-1:-1;;;;;6452:73:53;;;;;-1:-1:-1;6567:15:53;5655:952;;6619:1795;6800:12;:19;-1:-1:-1;;;;;;;;;;;260:43:53;-1:-1:-1;;;;;6833:27:53;;;6829:115;;6883:50;;-1:-1:-1;;;6883:50:53;;-1:-1:-1;;;;;5563:32:87;;6883:50:53;;;5545:51:87;5518:18;;6883:50:53;5399:203:87;6829:115:53;6966:25;;6953:10;7001:1407;7045:2;7029:13;:18;7001:1407;;;7064:15;7082:18;7101:13;7082:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;7205:61:53;;7129:73;7205:61;;;;;;;;;;;7129:137;;;;;;;;;-1:-1:-1;;;;;7129:137:53;;;;;-1:-1:-1;;;7129:137:53;;;;;;;;;;;;7082:33;;-1:-1:-1;7129:137:53;7280:153;;7409:8;7372:46;;-1:-1:-1;;;7372:46:53;;;;;;;;:::i;7280:153::-;7544:47;;7603:4;-1:-1:-1;;;;;7544:64:53;;;;7540:149;;7665:8;7635:39;;-1:-1:-1;;;7635:39:53;;;;;;;;:::i;7540:149::-;7753:15;;;;:::i;:::-;;;;7841:13;7786:34;:51;;;:68;;;7782:412;;7874:19;7896:2;:12;;7909:13;7896:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;7874:49;;8009:12;7941:2;:12;;7954:34;:51;;;7941:65;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:80;;;:65;;;;;;:80;;;;;;;;;;;;;;;;;;;;;;8107:72;;;;-1:-1:-1;;;;;;8039:48:53;;;;;;;;;;;;;:140;;-1:-1:-1;;;;8039:140:53;-1:-1:-1;;;8039:140:53;;;;;;;;;;;;;;7782:412;8243:2;:12;;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8243:18:53;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8282:44:53;;;;;;;;;-1:-1:-1;8282:44:53;;;8275:51;;-1:-1:-1;;;;;;8275:51:53;;;8243:18;8368:15;7001:1407;;8420:888;-1:-1:-1;;;;;8512:19:53;;8508:56;;8420:888;;:::o;8508:56::-;8573:70;8596:5;8573:70;;;;;;;;;;;;;;;;;:22;:70::i;:::-;8707:12;8721:18;8743:5;-1:-1:-1;;;;;8743:18:53;8762:9;8743:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8706:66;;;;8833:7;8828:474;;8917:12;;:17;8913:379;;9100:5;9094:12;9150:15;9142:5;9138:2;9134:14;9127:39;8913:379;9260:5;9267:9;9229:48;;-1:-1:-1;;;9229:48:53;;;;;;;;;:::i;9314:320::-;9487:22;;9418:20;9532:17;;;9528:100;;9592:9;9603:13;9572:45;;-1:-1:-1;;;9572:45:53;;;;;;;;;:::i;9528:100::-;9408:226;9314:320;;:::o;14:173:87:-;82:20;;-1:-1:-1;;;;;131:31:87;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:347::-;243:8;253:6;307:3;300:4;292:6;288:17;284:27;274:55;;325:1;322;315:12;274:55;-1:-1:-1;348:20:87;;391:18;380:30;;377:50;;;423:1;420;413:12;377:50;460:4;452:6;448:17;436:29;;512:3;505:4;496:6;488;484:19;480:30;477:39;474:59;;;529:1;526;519:12;474:59;192:347;;;;;:::o;544:1011::-;688:6;696;704;712;720;773:2;761:9;752:7;748:23;744:32;741:52;;;789:1;786;779:12;741:52;829:9;816:23;858:18;899:2;891:6;888:14;885:34;;;915:1;912;905:12;885:34;953:6;942:9;938:22;928:32;;998:7;991:4;987:2;983:13;979:27;969:55;;1020:1;1017;1010:12;969:55;1060:2;1047:16;1086:2;1078:6;1075:14;1072:34;;;1102:1;1099;1092:12;1072:34;1157:7;1150:4;1140:6;1137:1;1133:14;1129:2;1125:23;1121:34;1118:47;1115:67;;;1178:1;1175;1168:12;1115:67;1209:4;1205:2;1201:13;1191:23;;1233:6;1223:16;;;1258:40;1292:4;1281:9;1277:20;1258:40;:::i;:::-;1248:50;;1351:2;1340:9;1336:18;1323:32;1307:48;;1380:2;1370:8;1367:16;1364:36;;;1396:1;1393;1386:12;1364:36;;1435:60;1487:7;1476:8;1465:9;1461:24;1435:60;:::i;:::-;544:1011;;;;-1:-1:-1;544:1011:87;;-1:-1:-1;1514:8:87;;1409:86;544:1011;-1:-1:-1;;;544:1011:87:o;1560:127::-;1621:10;1616:3;1612:20;1609:1;1602:31;1652:4;1649:1;1642:15;1676:4;1673:1;1666:15;1692:253;1764:2;1758:9;1806:4;1794:17;;1841:18;1826:34;;1862:22;;;1823:62;1820:88;;;1888:18;;:::i;:::-;1924:2;1917:22;1692:253;:::o;1950:275::-;2021:2;2015:9;2086:2;2067:13;;-1:-1:-1;;2063:27:87;2051:40;;2121:18;2106:34;;2142:22;;;2103:62;2100:88;;;2168:18;;:::i;:::-;2204:2;2197:22;1950:275;;-1:-1:-1;1950:275:87:o;2230:191::-;2298:4;2331:18;2323:6;2320:30;2317:56;;;2353:18;;:::i;:::-;-1:-1:-1;2398:1:87;2394:14;2410:4;2390:25;;2230:191::o;2426:2727::-;2598:9;2633:72;2649:55;2697:6;2649:55;:::i;:::-;2633:72;:::i;:::-;2739:19;;;2777:4;2797:12;;;;2727:3;2828:1;2863:15;;;2852:27;;2902:14;2891:26;;2888:46;;;2930:1;2927;2920:12;2888:46;2954:5;2968:2152;2984:6;2979:3;2976:15;2968:2152;;;3070:3;3057:17;3097:18;3147:2;3134:11;3131:19;3128:109;;;3191:1;3220:2;3216;3209:14;3128:109;3271:11;3264:5;3260:23;3250:33;;3328:4;3323:2;3307:14;3303:23;3299:34;3296:124;;;3374:1;3403:2;3399;3392:14;3296:124;3448:22;;:::i;:::-;3499;3518:2;3499:22;:::i;:::-;3490:7;3483:39;3571:2;3567;3563:11;3550:25;3610:1;3601:7;3598:14;3588:112;;3654:1;3683:2;3679;3672:14;3588:112;3720:16;;;3713:33;3769:2;3811:11;;;3798:25;3839:14;;;3836:104;;;3894:1;3923:2;3919;3912:14;3836:104;3964:15;;;;;4022:14;4015:4;4006:14;;4002:35;3992:136;;4080:1;4069:12;;4110:3;4105;4098:16;3992:136;4165:3;4152:17;4141:28;;4195:69;4211:52;4259:3;4211:52;:::i;4195:69::-;4308:18;;;4404:12;;;4395:22;;4391:31;;;4348:14;;;;4451;4438:28;;4435:121;;;4508:1;4538:3;4533;4526:16;4435:121;4582:12;;;;4607:394;4625:8;4618:5;4615:19;4607:394;;;4708:19;;-1:-1:-1;;;;;;4766:34:87;;4754:47;;4744:164;;4852:1;4886:3;4881;4874:16;4744:164;4925:22;;4646:14;;;;4973;;;;4607:394;;;5021:16;;;5014:31;;;;-1:-1:-1;5058:20:87;;-1:-1:-1;;5098:12:87;;;;3001;;2968:2152;;;-1:-1:-1;5142:5:87;;2426:2727;-1:-1:-1;;;;;;;2426:2727:87:o;5158:127::-;5219:10;5214:3;5210:20;5207:1;5200:31;5250:4;5247:1;5240:15;5274:4;5271:1;5264:15;5607:127;5668:10;5663:3;5659:20;5656:1;5649:31;5699:4;5696:1;5689:15;5723:4;5720:1;5713:15;5739:242;5825:1;5818:5;5815:12;5805:143;;5870:10;5865:3;5861:20;5858:1;5851:31;5905:4;5902:1;5895:15;5933:4;5930:1;5923:15;5805:143;5957:18;;5739:242::o;5986:219::-;6138:2;6123:18;;6150:49;6127:9;6181:6;6150:49;:::i;:::-;5986:219;;;;:::o;6210:250::-;6295:1;6305:113;6319:6;6316:1;6313:13;6305:113;;;6395:11;;;6389:18;6376:11;;;6369:39;6341:2;6334:10;6305:113;;;-1:-1:-1;;6452:1:87;6434:16;;6427:27;6210:250::o;6465:270::-;6506:3;6544:5;6538:12;6571:6;6566:3;6559:19;6587:76;6656:6;6649:4;6644:3;6640:14;6633:4;6626:5;6622:16;6587:76;:::i;:::-;6717:2;6696:15;-1:-1:-1;;6692:29:87;6683:39;;;;6724:4;6679:50;;6465:270;-1:-1:-1;;6465:270:87:o;6740:1960::-;7010:4;7039:2;7079;7068:9;7064:18;7109:2;7098:9;7091:21;7132:6;7167;7161:13;7198:6;7190;7183:22;7224:3;7214:13;;7258:2;7247:9;7243:18;7236:25;;7320:2;7310:6;7307:1;7303:14;7292:9;7288:30;7284:39;7342:4;7381:2;7373:6;7369:15;7402:1;7423;7433:1096;7449:6;7444:3;7441:15;7433:1096;;;7518:22;;;-1:-1:-1;;7514:37:87;7502:50;;7575:13;;7662:9;;-1:-1:-1;;;;;7658:35:87;7643:51;;7733:11;;;7727:18;7615:15;;;;7758:61;7803:15;;;7727:18;7758:61;:::i;:::-;-1:-1:-1;7842:4:87;7887:11;;;7881:18;7919:15;;;7912:27;;;8000:21;;8034:24;;;;8124:23;;;;8171:1;;8080:15;;;;8185:236;8201:8;8196:3;8193:17;8185:236;;;8282:15;;-1:-1:-1;;;;;;8278:42:87;8264:57;;8390:17;;;;8229:1;8220:11;;;;;8347:14;;;;8185:236;;;-1:-1:-1;8507:12:87;;;;8444:5;-1:-1:-1;;;8472:15:87;;;;7475:1;7466:11;7433:1096;;;-1:-1:-1;;;;;;;;5356:31:87;;8565:18;;;5344:44;8622:22;;;8615:4;8600:20;;8593:52;8662:32;8626:6;8679;8662:32;:::i;:::-;8654:40;6740:1960;-1:-1:-1;;;;;;;;;;6740:1960:87:o;8705:657::-;8874:2;8926:21;;;8996:13;;8899:18;;;9018:22;;;8845:4;;8874:2;9097:15;;;;9071:2;9056:18;;;8845:4;9140:196;9154:6;9151:1;9148:13;9140:196;;;9219:13;;-1:-1:-1;;;;;;9215:40:87;9203:53;;9311:15;;;;9276:12;;;;9176:1;9169:9;9140:196;;;-1:-1:-1;9353:3:87;;8705:657;-1:-1:-1;;;;;;8705:657:87:o;9367:202::-;-1:-1:-1;;;;;;9529:33:87;;;;9511:52;;9499:2;9484:18;;9367:202::o;9574:127::-;9635:10;9630:3;9626:20;9623:1;9616:31;9666:4;9663:1;9656:15;9690:4;9687:1;9680:15;9706:197;9744:3;9772:6;9813:2;9806:5;9802:14;9840:2;9831:7;9828:15;9825:41;;9846:18;;:::i;:::-;9895:1;9882:15;;9706:197;-1:-1:-1;;;9706:197:87:o;9908:136::-;9947:3;9975:5;9965:39;;9984:18;;:::i;:::-;-1:-1:-1;;;10020:18:87;;9908:136::o;10049:127::-;10110:10;10105:3;10101:20;10098:1;10091:31;10141:4;10138:1;10131:15;10165:4;10162:1;10155:15;10181:287;10310:3;10348:6;10342:13;10364:66;10423:6;10418:3;10411:4;10403:6;10399:17;10364:66;:::i;:::-;10446:16;;;;;10181:287;-1:-1:-1;;10181:287:87:o;10473:314::-;-1:-1:-1;;;;;10648:32:87;;10630:51;;10717:2;10712;10697:18;;10690:30;;;-1:-1:-1;;10737:44:87;;10762:18;;10754:6;10737:44;:::i;:::-;10729:52;10473:314;-1:-1:-1;;;;10473:314:87:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotAddFunctionToDiamondThatAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"_selectors\",\"type\":\"bytes4[]\"}],\"name\":\"CannotAddSelectorsToZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotRemoveFunctionThatDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotRemoveImmutableFunction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotReplaceFunctionThatDoesNotExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"_selectors\",\"type\":\"bytes4[]\"}],\"name\":\"CannotReplaceFunctionsFromFacetWithZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"CannotReplaceImmutableFunction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"_action\",\"type\":\"uint8\"}],\"name\":\"IncorrectFacetCutAction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initializationContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"InitializationFunctionReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"NoBytecodeAtAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_facetAddress\",\"type\":\"address\"}],\"name\":\"NoSelectorsProvidedForFacetForCut\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_facetAddress\",\"type\":\"address\"}],\"name\":\"RemoveFacetAddressMustBeZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamond.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamond.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"_calldata\":\"A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init\",\"_diamondCut\":\"Contains the facet addresses and function selectors\",\"_init\":\"The address of the contract or facet to execute _calldata\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Add/replace/remove any number of functions and optionally execute         a function with delegatecall\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/diamond/DiamondCutFacet.sol\":\"DiamondCutFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":sol-explore/=node_modules/sol-explore/\"]},\"sources\":{\"src/diamond/DiamondCutFacet.sol\":{\"keccak256\":\"0x673f0c594445cda87a9d83c063385ffc2b9a052c2114eb77835a858e17b233a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9034b59b56ce2fdb4326b4cca030d7e5b891c5855d58cd6656b505b5b331985d\",\"dweb:/ipfs/QmaNn4DdN2gNJ62vXDGTMzCmg19fVWpcjpwU3yBEpEX6gV\"]},\"src/interfaces/IDiamond.sol\":{\"keccak256\":\"0x4458466caa842c9f6acc4a52ce32ae61ab705ec64a6a62626dadf7ef1da2c016\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b5b66a6dee491abf6aceaae603554781c3042c1b9d3f4c65f00a70f293ad07f1\",\"dweb:/ipfs/QmPkArewER2FTp5fZPCG2K2EcRGWq3XhdGdUDhiQbYh1gn\"]},\"src/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0xfce76cbd9e6b2e1db8c16253b2a64640093226a521416fef04de75c8704b0c57\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5d8532895a516253dda46faa09cdbfbffac55f8d6d83e082bea1479445e73643\",\"dweb:/ipfs/QmfBiFhj5YxBMbTJHiYwztBqtahwkQVhPtyfW8w4t1ZQU4\"]},\"src/lib/LibDiamond.sol\":{\"keccak256\":\"0xfc3f43e8b9dad8e37ba0a396a8058550ab61617611ca312f4be9e506ba6a6684\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://785ce4dfa7e66a5d8614e34667ae7157a695537a1734f3eab28ca5a210e8e58e\",\"dweb:/ipfs/QmVsoZYCAMD3f15MUggEUwcqJuqKzeKzxs75GhMN63ZKAG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "CannotAddFunctionToDiamondThatAlreadyExists"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4[]",
              "name": "_selectors",
              "type": "bytes4[]"
            }
          ],
          "type": "error",
          "name": "CannotAddSelectorsToZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "CannotRemoveFunctionThatDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "CannotRemoveImmutableFunction"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "CannotReplaceFunctionThatDoesNotExists"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "CannotReplaceFunctionWithTheSameFunctionFromTheSameFacet"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4[]",
              "name": "_selectors",
              "type": "bytes4[]"
            }
          ],
          "type": "error",
          "name": "CannotReplaceFunctionsFromFacetWithZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "CannotReplaceImmutableFunction"
        },
        {
          "inputs": [
            {
              "internalType": "enum IDiamond.FacetCutAction",
              "name": "_action",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "IncorrectFacetCutAction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initializationContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "InitializationFunctionReverted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_message",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "NoBytecodeAtAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_facetAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NoSelectorsProvidedForFacetForCut"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_facetAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "RemoveFacetAddressMustBeZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "struct IDiamond.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamond.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_init",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DiamondCut",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IDiamond.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamond.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "diamondCut"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "params": {
              "_calldata": "A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init",
              "_diamondCut": "Contains the facet addresses and function selectors",
              "_init": "The address of the contract or facet to execute _calldata"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "notice": "Add/replace/remove any number of functions and optionally execute         a function with delegatecall"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "fevmate/=lib/fevmate/contracts/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "murky/=lib/murky/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "sol-explore/=node_modules/sol-explore/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/diamond/DiamondCutFacet.sol": "DiamondCutFacet"
      },
      "libraries": {}
    },
    "sources": {
      "src/diamond/DiamondCutFacet.sol": {
        "keccak256": "0x673f0c594445cda87a9d83c063385ffc2b9a052c2114eb77835a858e17b233a6",
        "urls": [
          "bzz-raw://9034b59b56ce2fdb4326b4cca030d7e5b891c5855d58cd6656b505b5b331985d",
          "dweb:/ipfs/QmaNn4DdN2gNJ62vXDGTMzCmg19fVWpcjpwU3yBEpEX6gV"
        ],
        "license": "MIT"
      },
      "src/interfaces/IDiamond.sol": {
        "keccak256": "0x4458466caa842c9f6acc4a52ce32ae61ab705ec64a6a62626dadf7ef1da2c016",
        "urls": [
          "bzz-raw://b5b66a6dee491abf6aceaae603554781c3042c1b9d3f4c65f00a70f293ad07f1",
          "dweb:/ipfs/QmPkArewER2FTp5fZPCG2K2EcRGWq3XhdGdUDhiQbYh1gn"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/interfaces/IDiamondCut.sol": {
        "keccak256": "0xfce76cbd9e6b2e1db8c16253b2a64640093226a521416fef04de75c8704b0c57",
        "urls": [
          "bzz-raw://5d8532895a516253dda46faa09cdbfbffac55f8d6d83e082bea1479445e73643",
          "dweb:/ipfs/QmfBiFhj5YxBMbTJHiYwztBqtahwkQVhPtyfW8w4t1ZQU4"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibDiamond.sol": {
        "keccak256": "0xfc3f43e8b9dad8e37ba0a396a8058550ab61617611ca312f4be9e506ba6a6684",
        "urls": [
          "bzz-raw://785ce4dfa7e66a5d8614e34667ae7157a695537a1734f3eab28ca5a210e8e58e",
          "dweb:/ipfs/QmVsoZYCAMD3f15MUggEUwcqJuqKzeKzxs75GhMN63ZKAG"
        ],
        "license": "MIT OR Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/diamond/DiamondCutFacet.sol",
    "id": 35422,
    "exportedSymbols": {
      "DiamondCutFacet": [
        35421
      ],
      "IDiamondCut": [
        38504
      ],
      "LibDiamond": [
        40077
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1191:33",
    "nodes": [
      {
        "id": 35387,
        "nodeType": "PragmaDirective",
        "src": "32:23:33",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 35389,
        "nodeType": "ImportDirective",
        "src": "362:58:33",
        "nodes": [],
        "absolutePath": "src/interfaces/IDiamondCut.sol",
        "file": "../interfaces/IDiamondCut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35422,
        "sourceUnit": 38505,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35388,
              "name": "IDiamondCut",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38504,
              "src": "370:11:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35391,
        "nodeType": "ImportDirective",
        "src": "421:49:33",
        "nodes": [],
        "absolutePath": "src/lib/LibDiamond.sol",
        "file": "../lib/LibDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35422,
        "sourceUnit": 40078,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35390,
              "name": "LibDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40077,
              "src": "429:10:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35421,
        "nodeType": "ContractDefinition",
        "src": "472:750:33",
        "nodes": [
          {
            "id": 35420,
            "nodeType": "FunctionDefinition",
            "src": "961:259:33",
            "nodes": [],
            "body": {
              "id": 35419,
              "nodeType": "Block",
              "src": "1073:147:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 35406,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40077,
                        "src": "1083:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$40077_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 35408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1094:22:33",
                      "memberName": "enforceIsContractOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39537,
                      "src": "1083:33:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 35409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:35:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35410,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:35:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35414,
                        "name": "_diamondCut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35398,
                        "src": "1164:11:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$38474_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDiamond.FacetCut calldata[] calldata"
                        }
                      },
                      {
                        "id": 35415,
                        "name": "_init",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35400,
                        "src": "1184:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35416,
                        "name": "_calldata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35402,
                        "src": "1202:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$38474_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IDiamond.FacetCut calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 35411,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40077,
                        "src": "1128:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$40077_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 35413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1139:10:33",
                      "memberName": "diamondCut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39656,
                      "src": "1128:21:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$38474_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct IDiamond.FacetCut memory[] memory,address,bytes memory)"
                      }
                    },
                    "id": 35417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1151:11:33",
                      "1177:5:33",
                      "1191:9:33"
                    ],
                    "names": [
                      "_diamondCut",
                      "_init",
                      "_calldata"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1128:85:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35418,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:85:33"
                }
              ]
            },
            "baseFunctions": [
              38503
            ],
            "documentation": {
              "id": 35394,
              "nodeType": "StructuredDocumentation",
              "src": "518:438:33",
              "text": "@notice Add/replace/remove any number of functions and optionally execute\n         a function with delegatecall\n @param _diamondCut Contains the facet addresses and function selectors\n @param _init The address of the contract or facet to execute _calldata\n @param _calldata A function call, including function selector and arguments\n                  _calldata is executed with delegatecall on _init"
            },
            "functionSelector": "1f931c1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "diamondCut",
            "nameLocation": "970:10:33",
            "overrides": {
              "id": 35404,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1064:8:33"
            },
            "parameters": {
              "id": 35403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35398,
                  "mutability": "mutable",
                  "name": "_diamondCut",
                  "nameLocation": "1001:11:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 35420,
                  "src": "981:31:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FacetCut_$38474_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IDiamond.FacetCut[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 35396,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 35395,
                        "name": "FacetCut",
                        "nameLocations": [
                          "981:8:33"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38474,
                        "src": "981:8:33"
                      },
                      "referencedDeclaration": 38474,
                      "src": "981:8:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$38474_storage_ptr",
                        "typeString": "struct IDiamond.FacetCut"
                      }
                    },
                    "id": 35397,
                    "nodeType": "ArrayTypeName",
                    "src": "981:10:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$38474_storage_$dyn_storage_ptr",
                      "typeString": "struct IDiamond.FacetCut[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35400,
                  "mutability": "mutable",
                  "name": "_init",
                  "nameLocation": "1022:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 35420,
                  "src": "1014:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35402,
                  "mutability": "mutable",
                  "name": "_calldata",
                  "nameLocation": "1044:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 35420,
                  "src": "1029:24:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35401,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "980:74:33"
            },
            "returnParameters": {
              "id": 35405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:0:33"
            },
            "scope": 35421,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 35392,
              "name": "IDiamondCut",
              "nameLocations": [
                "500:11:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38504,
              "src": "500:11:33"
            },
            "id": 35393,
            "nodeType": "InheritanceSpecifier",
            "src": "500:11:33"
          }
        ],
        "canonicalName": "DiamondCutFacet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35421,
          38504,
          38485
        ],
        "name": "DiamondCutFacet",
        "nameLocation": "481:15:33",
        "scope": 35422,
        "usedErrors": [
          39368,
          39374,
          39379,
          39383,
          39387,
          39392,
          39398,
          39411,
          39415,
          39419,
          39423,
          39427,
          39431,
          39435
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 33
}