{"abi":[{"type":"function","name":"addStake","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"commitBottomUpCheckpoint","inputs":[{"name":"bottomUpCheckpoint","type":"tuple","internalType":"struct BottomUpCheckpoint","components":[{"name":"subnetID","type":"tuple","internalType":"struct SubnetID","components":[{"name":"root","type":"uint64","internalType":"uint64"},{"name":"route","type":"address[]","internalType":"address[]"}]},{"name":"blockHeight","type":"uint64","internalType":"uint64"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"nextConfigurationNumber","type":"uint64","internalType":"uint64"},{"name":"crossMessagesHash","type":"bytes32","internalType":"bytes32"}]},{"name":"messages","type":"tuple[]","internalType":"struct CrossMsg[]","components":[{"name":"message","type":"tuple","internalType":"struct StorableMsg","components":[{"name":"from","type":"tuple","internalType":"struct IPCAddress","components":[{"name":"subnetId","type":"tuple","internalType":"struct SubnetID","components":[{"name":"root","type":"uint64","internalType":"uint64"},{"name":"route","type":"address[]","internalType":"address[]"}]},{"name":"rawAddress","type":"tuple","internalType":"struct FvmAddress","components":[{"name":"addrType","type":"uint8","internalType":"uint8"},{"name":"payload","type":"bytes","internalType":"bytes"}]}]},{"name":"to","type":"tuple","internalType":"struct IPCAddress","components":[{"name":"subnetId","type":"tuple","internalType":"struct SubnetID","components":[{"name":"root","type":"uint64","internalType":"uint64"},{"name":"route","type":"address[]","internalType":"address[]"}]},{"name":"rawAddress","type":"tuple","internalType":"struct FvmAddress","components":[{"name":"addrType","type":"uint8","internalType":"uint8"},{"name":"payload","type":"bytes","internalType":"bytes"}]}]},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"method","type":"bytes4","internalType":"bytes4"},{"name":"params","type":"bytes","internalType":"bytes"},{"name":"fee","type":"uint256","internalType":"uint256"}]},{"name":"wrapped","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"commitParentFinality","inputs":[{"name":"finality","type":"tuple","internalType":"struct ParentFinality","components":[{"name":"height","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createBottomUpCheckpoint","inputs":[{"name":"checkpoint","type":"tuple","internalType":"struct BottomUpCheckpoint","components":[{"name":"subnetID","type":"tuple","internalType":"struct SubnetID","components":[{"name":"root","type":"uint64","internalType":"uint64"},{"name":"route","type":"address[]","internalType":"address[]"}]},{"name":"blockHeight","type":"uint64","internalType":"uint64"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"nextConfigurationNumber","type":"uint64","internalType":"uint64"},{"name":"crossMessagesHash","type":"bytes32","internalType":"bytes32"}]},{"name":"membershipRootHash","type":"bytes32","internalType":"bytes32"},{"name":"membershipWeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fund","inputs":[{"name":"subnetId","type":"tuple","internalType":"struct SubnetID","components":[{"name":"root","type":"uint64","internalType":"uint64"},{"name":"route","type":"address[]","internalType":"address[]"}]},{"name":"to","type":"tuple","internalType":"struct FvmAddress","components":[{"name":"addrType","type":"uint8","internalType":"uint8"},{"name":"payload","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"kill","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"propagate","inputs":[{"name":"msgCid","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"register","inputs":[{"name":"genesisCircSupply","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"release","inputs":[{"name":"to","type":"tuple","internalType":"struct FvmAddress","components":[{"name":"addrType","type":"uint8","internalType":"uint8"},{"name":"payload","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"releaseRewardForRelayer","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"releaseStake","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sendCrossMessage","inputs":[{"name":"crossMsg","type":"tuple","internalType":"struct CrossMsg","components":[{"name":"message","type":"tuple","internalType":"struct StorableMsg","components":[{"name":"from","type":"tuple","internalType":"struct IPCAddress","components":[{"name":"subnetId","type":"tuple","internalType":"struct SubnetID","components":[{"name":"root","type":"uint64","internalType":"uint64"},{"name":"route","type":"address[]","internalType":"address[]"}]},{"name":"rawAddress","type":"tuple","internalType":"struct FvmAddress","components":[{"name":"addrType","type":"uint8","internalType":"uint8"},{"name":"payload","type":"bytes","internalType":"bytes"}]}]},{"name":"to","type":"tuple","internalType":"struct IPCAddress","components":[{"name":"subnetId","type":"tuple","internalType":"struct SubnetID","components":[{"name":"root","type":"uint64","internalType":"uint64"},{"name":"route","type":"address[]","internalType":"address[]"}]},{"name":"rawAddress","type":"tuple","internalType":"struct FvmAddress","components":[{"name":"addrType","type":"uint8","internalType":"uint8"},{"name":"payload","type":"bytes","internalType":"bytes"}]}]},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"method","type":"bytes4","internalType":"bytes4"},{"name":"params","type":"bytes","internalType":"bytes"},{"name":"fee","type":"uint256","internalType":"uint256"}]},{"name":"wrapped","type":"bool","internalType":"bool"}]}],"outputs":[],"stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addStake()":"5a627dbc","commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])":"f456b39e","commitParentFinality((uint256,bytes32))":"11196974","createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)":"a656ca5b","fund((uint64,address[]),(uint8,bytes))":"18f44b70","kill()":"41c0e1b5","propagate(bytes32)":"25bf0db6","register(uint256)":"f207564e","release((uint8,bytes))":"6b2c1eef","releaseRewardForRelayer(uint256)":"d8e25572","releaseStake(uint256)":"45f54485","sendCrossMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))":"c13175ef"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"crossMessagesHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"bottomUpCheckpoint\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes4\",\"name\":\"method\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct StorableMsg\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"}],\"internalType\":\"struct CrossMsg[]\",\"name\":\"messages\",\"type\":\"tuple[]\"}],\"name\":\"commitBottomUpCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ParentFinality\",\"name\":\"finality\",\"type\":\"tuple\"}],\"name\":\"commitParentFinality\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"crossMessagesHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"membershipRootHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"membershipWeight\",\"type\":\"uint256\"}],\"name\":\"createBottomUpCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"to\",\"type\":\"tuple\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgCid\",\"type\":\"bytes32\"}],\"name\":\"propagate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genesisCircSupply\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"to\",\"type\":\"tuple\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseRewardForRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes4\",\"name\":\"method\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct StorableMsg\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"}],\"internalType\":\"struct CrossMsg\",\"name\":\"crossMsg\",\"type\":\"tuple\"}],\"name\":\"sendCrossMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LimeChain team\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Gateway interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake()\":{\"notice\":\"AddStake adds stake to the collateral of a subnet.\"},\"commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])\":{\"notice\":\"commitBottomUpCheckpoint propagates the commitment of a checkpoint from a child subnet and processes the cross-messages directed to the subnets.\"},\"commitParentFinality((uint256,bytes32))\":{\"notice\":\"commit the ipc parent finality into storage\"},\"createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)\":{\"notice\":\"creates a new bottom-up checkpoint\"},\"fund((uint64,address[]),(uint8,bytes))\":{\"notice\":\"Fund injects new funds from an account of the parent chain to a subnet. This functions receives a transaction with the FILs that want to be injected in the subnet. - Funds injected are frozen. - A new fund cross-message is created and stored to propagate it to the subnet. It will be picked up by miners to include it in the next possible block. - The cross-message nonce is updated\"},\"kill()\":{\"notice\":\"Kill propagates the kill signal from a subnet actor to unregister it from th hierarchy.\"},\"propagate(bytes32)\":{\"notice\":\"Propagates the stored postbox item for the given cid\"},\"register(uint256)\":{\"notice\":\"Register is called by subnet actors to put the required collateral and register the subnet to the hierarchy.\"},\"release((uint8,bytes))\":{\"notice\":\"Release creates a new check message to release funds in parent chain This function burns the funds that will be released in the current subnet and propagates a new checkpoint message to the parent chain to signal the amount of funds that can be released for a specific address.\"},\"releaseRewardForRelayer(uint256)\":{\"notice\":\"Release reward for relayer\"},\"releaseStake(uint256)\":{\"notice\":\"Release stake recovers some collateral of the subnet\"},\"sendCrossMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))\":{\"notice\":\"SendCrossMessage sends an arbitrary cross-message to other subnet in the hierarchy. If the message includes any funds they need to be burnt (like in Release) before being propagated to the corresponding subnet. The circulating supply in each subnet needs to be updated as the message passes through them. Params expect a raw message without any subnet context (the IPC address is included in the message by the actor). Only actors are allowed to send arbitrary cross-messages as a side-effect of their execution. For plain token exchanges fund and release have to be used.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IGateway.sol\":\"IGateway\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/fevmate/contracts/utils/FilAddress.sol\":{\"keccak256\":\"0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7\",\"dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5\",\"dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593\",\"dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT\"]},\"src/constants/Constants.sol\":{\"keccak256\":\"0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940\",\"dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx\"]},\"src/enums/ConsensusType.sol\":{\"keccak256\":\"0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0\",\"dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ\"]},\"src/enums/Status.sol\":{\"keccak256\":\"0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33\",\"dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R\"]},\"src/errors/IPCErrors.sol\":{\"keccak256\":\"0x805445ebb35ec35ffb437762862b8b6543f5c7bd05da3b5986df4b8c9dfd1b48\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://1946e36135de4476c2889f405a0f0e8d7d03835e19dad9162f6c036fea105cab\",\"dweb:/ipfs/Qma8TsbkvzwLjaDqz5GrLnGupc1zvrrvqhrBhwCGEkEsGJ\"]},\"src/interfaces/IGateway.sol\":{\"keccak256\":\"0xb4209b44c3965fd233387ece78149461bd64a47788c3af24edb7c99ea1ef8868\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4db7a4573100063387e170c55a69772b20e403444e9d97b24cc220a71a52fbbb\",\"dweb:/ipfs/QmTYsSjmFsTwuNTXBByZKueJZLpe7RwNzLRWNPxXGA3YKB\"]},\"src/lib/AccountHelper.sol\":{\"keccak256\":\"0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc\",\"dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z\"]},\"src/lib/LibGatewayActorStorage.sol\":{\"keccak256\":\"0xb61284e3d7981a233030df31db55602fb104692d7cb92c6e58ecb54f8836b942\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://00632f2695c5a40776b5c489b3c49fb01f316eab112de788929e2076bdb82e91\",\"dweb:/ipfs/QmVzmckZQ931PvfhXVbZzC5Qa721WTu9bkefQcbQ8WjHqv\"]},\"src/lib/LibStaking.sol\":{\"keccak256\":\"0xb6ca249f7087f420c81d6405b122d7c8386fe3815169c01d338435f534a941f2\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://57203af0442e93b342cbf6dc0cb72d7b25c57d2c520c49221268806ac1171dff\",\"dweb:/ipfs/QmaCcc95fKYZsKkghaNfNdC8U9x7SBWd8ob1BLL1PvYiUs\"]},\"src/lib/LibStakingChangeLog.sol\":{\"keccak256\":\"0x1ec44b7c417dae8bec87da6f1f48eb10a1eacdfb4935144dd9094dc1bbe9aa9b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d6fcbd14fe0743c0ea0a8a8d2ea851b4864559c3553773f07d6ae708bcc83318\",\"dweb:/ipfs/QmYb6v6U27FAY4ut6gCZy6oK1MjN165RTxUGhrY6zxtg93\"]},\"src/lib/LibSubnetActorStorage.sol\":{\"keccak256\":\"0xa6c6005ec113e9a508ea3853a7a3a245cbe02f96e7499849f2ac5f4c29c8782c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://ccfcb933e842c4cb22cc81f9aecfe8924c1a78590b649e7055016e175479f642\",\"dweb:/ipfs/QmQpFyDfkspyXDdtigYwS431ZutgauzVwJiM2xC52ovWQo\"]},\"src/lib/priority/LibMaxPQ.sol\":{\"keccak256\":\"0x57844d18d78e8e555b2de3581a5e2908403e75252018b9c85d0274799e12a131\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://9125638cad4d136be39501e18307484f7b072ab0a882dc83da0b3a3569337014\",\"dweb:/ipfs/QmZ7Ho1edVXaPn2EwZwvrrwyHfqvZL1WUbt6ionX5GNX7V\"]},\"src/lib/priority/LibMinPQ.sol\":{\"keccak256\":\"0x7ca7b9c2c57102005714da3bdb1684050afd3f3d1e90c9dd5929a005eb17efa3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e958a3990a39a77b71b84c241ac3342262349fa38fcbb68fb7f50ddab6d3ba97\",\"dweb:/ipfs/QmQggiqv5n3xPW2dChtqDw2yiRjPsukLWuM58jqcsVo9M4\"]},\"src/lib/priority/LibPQ.sol\":{\"keccak256\":\"0x4d4290087995d669e80f8fdd405bfaae545323393c0c54689b84965ffb87303e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://c21b563f6bf23afacb38fc97ab94d1afe12e4ad3dfde96d4484068bf26b13a2c\",\"dweb:/ipfs/Qmd5d3EnZwaSRnjG4ZFH2X8HKgymzd6vQgus8A6oEoh5pJ\"]},\"src/structs/Checkpoint.sol\":{\"keccak256\":\"0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a\",\"dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww\"]},\"src/structs/FvmAddress.sol\":{\"keccak256\":\"0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac\",\"dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu\"]},\"src/structs/Subnet.sol\":{\"keccak256\":\"0x1ddb626039baf4a4411f06b5340aaa80dcd65e9980da7673b73ab16633d871ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://af017eef4cb46262ac29b4cf47faa1fc5d2b61970ec7d6d021eae4cf45b5577b\",\"dweb:/ipfs/QmZJiA2t934fbe62513neQYzxSNswnCRTJybp7d6X2RyWR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"payable","type":"function","name":"addStake"},{"inputs":[{"internalType":"struct BottomUpCheckpoint","name":"bottomUpCheckpoint","type":"tuple","components":[{"internalType":"struct SubnetID","name":"subnetID","type":"tuple","components":[{"internalType":"uint64","name":"root","type":"uint64"},{"internalType":"address[]","name":"route","type":"address[]"}]},{"internalType":"uint64","name":"blockHeight","type":"uint64"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"nextConfigurationNumber","type":"uint64"},{"internalType":"bytes32","name":"crossMessagesHash","type":"bytes32"}]},{"internalType":"struct CrossMsg[]","name":"messages","type":"tuple[]","components":[{"internalType":"struct StorableMsg","name":"message","type":"tuple","components":[{"internalType":"struct IPCAddress","name":"from","type":"tuple","components":[{"internalType":"struct SubnetID","name":"subnetId","type":"tuple","components":[{"internalType":"uint64","name":"root","type":"uint64"},{"internalType":"address[]","name":"route","type":"address[]"}]},{"internalType":"struct FvmAddress","name":"rawAddress","type":"tuple","components":[{"internalType":"uint8","name":"addrType","type":"uint8"},{"internalType":"bytes","name":"payload","type":"bytes"}]}]},{"internalType":"struct IPCAddress","name":"to","type":"tuple","components":[{"internalType":"struct SubnetID","name":"subnetId","type":"tuple","components":[{"internalType":"uint64","name":"root","type":"uint64"},{"internalType":"address[]","name":"route","type":"address[]"}]},{"internalType":"struct FvmAddress","name":"rawAddress","type":"tuple","components":[{"internalType":"uint8","name":"addrType","type":"uint8"},{"internalType":"bytes","name":"payload","type":"bytes"}]}]},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"bytes4","name":"method","type":"bytes4"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint256","name":"fee","type":"uint256"}]},{"internalType":"bool","name":"wrapped","type":"bool"}]}],"stateMutability":"nonpayable","type":"function","name":"commitBottomUpCheckpoint"},{"inputs":[{"internalType":"struct ParentFinality","name":"finality","type":"tuple","components":[{"internalType":"uint256","name":"height","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}]}],"stateMutability":"nonpayable","type":"function","name":"commitParentFinality"},{"inputs":[{"internalType":"struct BottomUpCheckpoint","name":"checkpoint","type":"tuple","components":[{"internalType":"struct SubnetID","name":"subnetID","type":"tuple","components":[{"internalType":"uint64","name":"root","type":"uint64"},{"internalType":"address[]","name":"route","type":"address[]"}]},{"internalType":"uint64","name":"blockHeight","type":"uint64"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"nextConfigurationNumber","type":"uint64"},{"internalType":"bytes32","name":"crossMessagesHash","type":"bytes32"}]},{"internalType":"bytes32","name":"membershipRootHash","type":"bytes32"},{"internalType":"uint256","name":"membershipWeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createBottomUpCheckpoint"},{"inputs":[{"internalType":"struct SubnetID","name":"subnetId","type":"tuple","components":[{"internalType":"uint64","name":"root","type":"uint64"},{"internalType":"address[]","name":"route","type":"address[]"}]},{"internalType":"struct FvmAddress","name":"to","type":"tuple","components":[{"internalType":"uint8","name":"addrType","type":"uint8"},{"internalType":"bytes","name":"payload","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"fund"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"kill"},{"inputs":[{"internalType":"bytes32","name":"msgCid","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"propagate"},{"inputs":[{"internalType":"uint256","name":"genesisCircSupply","type":"uint256"}],"stateMutability":"payable","type":"function","name":"register"},{"inputs":[{"internalType":"struct FvmAddress","name":"to","type":"tuple","components":[{"internalType":"uint8","name":"addrType","type":"uint8"},{"internalType":"bytes","name":"payload","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"release"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"releaseRewardForRelayer"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"releaseStake"},{"inputs":[{"internalType":"struct CrossMsg","name":"crossMsg","type":"tuple","components":[{"internalType":"struct StorableMsg","name":"message","type":"tuple","components":[{"internalType":"struct IPCAddress","name":"from","type":"tuple","components":[{"internalType":"struct SubnetID","name":"subnetId","type":"tuple","components":[{"internalType":"uint64","name":"root","type":"uint64"},{"internalType":"address[]","name":"route","type":"address[]"}]},{"internalType":"struct FvmAddress","name":"rawAddress","type":"tuple","components":[{"internalType":"uint8","name":"addrType","type":"uint8"},{"internalType":"bytes","name":"payload","type":"bytes"}]}]},{"internalType":"struct IPCAddress","name":"to","type":"tuple","components":[{"internalType":"struct SubnetID","name":"subnetId","type":"tuple","components":[{"internalType":"uint64","name":"root","type":"uint64"},{"internalType":"address[]","name":"route","type":"address[]"}]},{"internalType":"struct FvmAddress","name":"rawAddress","type":"tuple","components":[{"internalType":"uint8","name":"addrType","type":"uint8"},{"internalType":"bytes","name":"payload","type":"bytes"}]}]},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"bytes4","name":"method","type":"bytes4"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint256","name":"fee","type":"uint256"}]},{"internalType":"bool","name":"wrapped","type":"bool"}]}],"stateMutability":"payable","type":"function","name":"sendCrossMessage"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"addStake()":{"notice":"AddStake adds stake to the collateral of a subnet."},"commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])":{"notice":"commitBottomUpCheckpoint propagates the commitment of a checkpoint from a child subnet and processes the cross-messages directed to the subnets."},"commitParentFinality((uint256,bytes32))":{"notice":"commit the ipc parent finality into storage"},"createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)":{"notice":"creates a new bottom-up checkpoint"},"fund((uint64,address[]),(uint8,bytes))":{"notice":"Fund injects new funds from an account of the parent chain to a subnet. This functions receives a transaction with the FILs that want to be injected in the subnet. - Funds injected are frozen. - A new fund cross-message is created and stored to propagate it to the subnet. It will be picked up by miners to include it in the next possible block. - The cross-message nonce is updated"},"kill()":{"notice":"Kill propagates the kill signal from a subnet actor to unregister it from th hierarchy."},"propagate(bytes32)":{"notice":"Propagates the stored postbox item for the given cid"},"register(uint256)":{"notice":"Register is called by subnet actors to put the required collateral and register the subnet to the hierarchy."},"release((uint8,bytes))":{"notice":"Release creates a new check message to release funds in parent chain This function burns the funds that will be released in the current subnet and propagates a new checkpoint message to the parent chain to signal the amount of funds that can be released for a specific address."},"releaseRewardForRelayer(uint256)":{"notice":"Release reward for relayer"},"releaseStake(uint256)":{"notice":"Release stake recovers some collateral of the subnet"},"sendCrossMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))":{"notice":"SendCrossMessage sends an arbitrary cross-message to other subnet in the hierarchy. If the message includes any funds they need to be burnt (like in Release) before being propagated to the corresponding subnet. The circulating supply in each subnet needs to be updated as the message passes through them. Params expect a raw message without any subnet context (the IPC address is included in the message by the actor). Only actors are allowed to send arbitrary cross-messages as a side-effect of their execution. For plain token exchanges fund and release have to be used."}},"version":1}},"settings":{"remappings":["ds-test/=lib/forge-std/lib/ds-test/src/","elliptic-curve-solidity/=lib/elliptic-curve-solidity/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","fevmate/=lib/fevmate/contracts/","forge-std/=lib/forge-std/src/","murky/=lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IGateway.sol":"IGateway"},"libraries":{},"viaIR":true},"sources":{"lib/fevmate/contracts/utils/FilAddress.sol":{"keccak256":"0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31","urls":["bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7","dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1","urls":["bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5","dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol":{"keccak256":"0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892","urls":["bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593","dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT"],"license":"MIT"},"src/constants/Constants.sol":{"keccak256":"0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546","urls":["bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940","dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx"],"license":"MIT OR Apache-2.0"},"src/enums/ConsensusType.sol":{"keccak256":"0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d","urls":["bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0","dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ"],"license":"MIT OR Apache-2.0"},"src/enums/Status.sol":{"keccak256":"0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c","urls":["bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33","dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R"],"license":"MIT OR Apache-2.0"},"src/errors/IPCErrors.sol":{"keccak256":"0x805445ebb35ec35ffb437762862b8b6543f5c7bd05da3b5986df4b8c9dfd1b48","urls":["bzz-raw://1946e36135de4476c2889f405a0f0e8d7d03835e19dad9162f6c036fea105cab","dweb:/ipfs/Qma8TsbkvzwLjaDqz5GrLnGupc1zvrrvqhrBhwCGEkEsGJ"],"license":"MIT OR Apache-2.0"},"src/interfaces/IGateway.sol":{"keccak256":"0xb4209b44c3965fd233387ece78149461bd64a47788c3af24edb7c99ea1ef8868","urls":["bzz-raw://4db7a4573100063387e170c55a69772b20e403444e9d97b24cc220a71a52fbbb","dweb:/ipfs/QmTYsSjmFsTwuNTXBByZKueJZLpe7RwNzLRWNPxXGA3YKB"],"license":"MIT OR Apache-2.0"},"src/lib/AccountHelper.sol":{"keccak256":"0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5","urls":["bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc","dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z"],"license":"MIT OR Apache-2.0"},"src/lib/LibGatewayActorStorage.sol":{"keccak256":"0xb61284e3d7981a233030df31db55602fb104692d7cb92c6e58ecb54f8836b942","urls":["bzz-raw://00632f2695c5a40776b5c489b3c49fb01f316eab112de788929e2076bdb82e91","dweb:/ipfs/QmVzmckZQ931PvfhXVbZzC5Qa721WTu9bkefQcbQ8WjHqv"],"license":"MIT OR Apache-2.0"},"src/lib/LibStaking.sol":{"keccak256":"0xb6ca249f7087f420c81d6405b122d7c8386fe3815169c01d338435f534a941f2","urls":["bzz-raw://57203af0442e93b342cbf6dc0cb72d7b25c57d2c520c49221268806ac1171dff","dweb:/ipfs/QmaCcc95fKYZsKkghaNfNdC8U9x7SBWd8ob1BLL1PvYiUs"],"license":"MIT OR Apache-2.0"},"src/lib/LibStakingChangeLog.sol":{"keccak256":"0x1ec44b7c417dae8bec87da6f1f48eb10a1eacdfb4935144dd9094dc1bbe9aa9b","urls":["bzz-raw://d6fcbd14fe0743c0ea0a8a8d2ea851b4864559c3553773f07d6ae708bcc83318","dweb:/ipfs/QmYb6v6U27FAY4ut6gCZy6oK1MjN165RTxUGhrY6zxtg93"],"license":"MIT OR Apache-2.0"},"src/lib/LibSubnetActorStorage.sol":{"keccak256":"0xa6c6005ec113e9a508ea3853a7a3a245cbe02f96e7499849f2ac5f4c29c8782c","urls":["bzz-raw://ccfcb933e842c4cb22cc81f9aecfe8924c1a78590b649e7055016e175479f642","dweb:/ipfs/QmQpFyDfkspyXDdtigYwS431ZutgauzVwJiM2xC52ovWQo"],"license":"MIT OR Apache-2.0"},"src/lib/priority/LibMaxPQ.sol":{"keccak256":"0x57844d18d78e8e555b2de3581a5e2908403e75252018b9c85d0274799e12a131","urls":["bzz-raw://9125638cad4d136be39501e18307484f7b072ab0a882dc83da0b3a3569337014","dweb:/ipfs/QmZ7Ho1edVXaPn2EwZwvrrwyHfqvZL1WUbt6ionX5GNX7V"],"license":"MIT OR Apache-2.0"},"src/lib/priority/LibMinPQ.sol":{"keccak256":"0x7ca7b9c2c57102005714da3bdb1684050afd3f3d1e90c9dd5929a005eb17efa3","urls":["bzz-raw://e958a3990a39a77b71b84c241ac3342262349fa38fcbb68fb7f50ddab6d3ba97","dweb:/ipfs/QmQggiqv5n3xPW2dChtqDw2yiRjPsukLWuM58jqcsVo9M4"],"license":"MIT OR Apache-2.0"},"src/lib/priority/LibPQ.sol":{"keccak256":"0x4d4290087995d669e80f8fdd405bfaae545323393c0c54689b84965ffb87303e","urls":["bzz-raw://c21b563f6bf23afacb38fc97ab94d1afe12e4ad3dfde96d4484068bf26b13a2c","dweb:/ipfs/Qmd5d3EnZwaSRnjG4ZFH2X8HKgymzd6vQgus8A6oEoh5pJ"],"license":"MIT OR Apache-2.0"},"src/structs/Checkpoint.sol":{"keccak256":"0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746","urls":["bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a","dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww"],"license":"MIT OR Apache-2.0"},"src/structs/FvmAddress.sol":{"keccak256":"0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069","urls":["bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac","dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu"],"license":"MIT OR Apache-2.0"},"src/structs/Subnet.sol":{"keccak256":"0x1ddb626039baf4a4411f06b5340aaa80dcd65e9980da7673b73ab16633d871ce","urls":["bzz-raw://af017eef4cb46262ac29b4cf47faa1fc5d2b61970ec7d6d021eae4cf45b5577b","dweb:/ipfs/QmZJiA2t934fbe62513neQYzxSNswnCRTJybp7d6X2RyWR"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"src/interfaces/IGateway.sol","id":8844,"exportedSymbols":{"BottomUpCheckpoint":[16133],"CrossMsg":[16155],"FvmAddress":[16179],"IGateway":[8843],"ParentFinality":[16116],"SubnetID":[16209]},"nodeType":"SourceUnit","src":"46:3439:32","nodes":[{"id":8748,"nodeType":"PragmaDirective","src":"46:23:32","nodes":[],"literals":["solidity","0.8",".19"]},{"id":8752,"nodeType":"ImportDirective","src":"71:87:32","nodes":[],"absolutePath":"src/structs/Checkpoint.sol","file":"../structs/Checkpoint.sol","nameLocation":"-1:-1:-1","scope":8844,"sourceUnit":16173,"symbolAliases":[{"foreign":{"id":8749,"name":"BottomUpCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16133,"src":"79:18:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":8750,"name":"CrossMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16155,"src":"99:8:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":8751,"name":"ParentFinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16116,"src":"109:14:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":8754,"nodeType":"ImportDirective","src":"159:47:32","nodes":[],"absolutePath":"src/structs/Subnet.sol","file":"../structs/Subnet.sol","nameLocation":"-1:-1:-1","scope":8844,"sourceUnit":16342,"symbolAliases":[{"foreign":{"id":8753,"name":"SubnetID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16209,"src":"167:8:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":8756,"nodeType":"ImportDirective","src":"207:53:32","nodes":[],"absolutePath":"src/structs/FvmAddress.sol","file":"../structs/FvmAddress.sol","nameLocation":"-1:-1:-1","scope":8844,"sourceUnit":16187,"symbolAliases":[{"foreign":{"id":8755,"name":"FvmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16179,"src":"215:10:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":8843,"nodeType":"ContractDefinition","src":"318:3166:32","nodes":[{"id":8763,"nodeType":"FunctionDefinition","src":"476:62:32","nodes":[],"documentation":{"id":8758,"nodeType":"StructuredDocumentation","src":"343:128:32","text":"@notice Register is called by subnet actors to put the required collateral\n and register the subnet to the hierarchy."},"functionSelector":"f207564e","implemented":false,"kind":"function","modifiers":[],"name":"register","nameLocation":"485:8:32","parameters":{"id":8761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8760,"mutability":"mutable","name":"genesisCircSupply","nameLocation":"502:17:32","nodeType":"VariableDeclaration","scope":8763,"src":"494:25:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8759,"name":"uint256","nodeType":"ElementaryTypeName","src":"494:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"493:27:32"},"returnParameters":{"id":8762,"nodeType":"ParameterList","parameters":[],"src":"537:0:32"},"scope":8843,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":8767,"nodeType":"FunctionDefinition","src":"611:37:32","nodes":[],"documentation":{"id":8764,"nodeType":"StructuredDocumentation","src":"544:62:32","text":"@notice AddStake adds stake to the collateral of a subnet."},"functionSelector":"5a627dbc","implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"620:8:32","parameters":{"id":8765,"nodeType":"ParameterList","parameters":[],"src":"628:2:32"},"returnParameters":{"id":8766,"nodeType":"ParameterList","parameters":[],"src":"647:0:32"},"scope":8843,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":8773,"nodeType":"FunctionDefinition","src":"723:47:32","nodes":[],"documentation":{"id":8768,"nodeType":"StructuredDocumentation","src":"654:64:32","text":"@notice Release stake recovers some collateral of the subnet"},"functionSelector":"45f54485","implemented":false,"kind":"function","modifiers":[],"name":"releaseStake","nameLocation":"732:12:32","parameters":{"id":8771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8770,"mutability":"mutable","name":"amount","nameLocation":"753:6:32","nodeType":"VariableDeclaration","scope":8773,"src":"745:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8769,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"744:16:32"},"returnParameters":{"id":8772,"nodeType":"ParameterList","parameters":[],"src":"769:0:32"},"scope":8843,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":8779,"nodeType":"FunctionDefinition","src":"819:58:32","nodes":[],"documentation":{"id":8774,"nodeType":"StructuredDocumentation","src":"776:38:32","text":"@notice Release reward for relayer"},"functionSelector":"d8e25572","implemented":false,"kind":"function","modifiers":[],"name":"releaseRewardForRelayer","nameLocation":"828:23:32","parameters":{"id":8777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8776,"mutability":"mutable","name":"amount","nameLocation":"860:6:32","nodeType":"VariableDeclaration","scope":8779,"src":"852:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8775,"name":"uint256","nodeType":"ElementaryTypeName","src":"852:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"851:16:32"},"returnParameters":{"id":8778,"nodeType":"ParameterList","parameters":[],"src":"876:0:32"},"scope":8843,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":8783,"nodeType":"FunctionDefinition","src":"995:25:32","nodes":[],"documentation":{"id":8780,"nodeType":"StructuredDocumentation","src":"883:107:32","text":"@notice Kill propagates the kill signal from a subnet actor to unregister it from th\n hierarchy."},"functionSelector":"41c0e1b5","implemented":false,"kind":"function","modifiers":[],"name":"kill","nameLocation":"1004:4:32","parameters":{"id":8781,"nodeType":"ParameterList","parameters":[],"src":"1008:2:32"},"returnParameters":{"id":8782,"nodeType":"ParameterList","parameters":[],"src":"1019:0:32"},"scope":8843,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":8794,"nodeType":"FunctionDefinition","src":"1195:143:32","nodes":[],"documentation":{"id":8784,"nodeType":"StructuredDocumentation","src":"1026:164:32","text":"@notice commitBottomUpCheckpoint propagates the commitment of a checkpoint from a child subnet and\n processes the cross-messages directed to the subnets."},"functionSelector":"f456b39e","implemented":false,"kind":"function","modifiers":[],"name":"commitBottomUpCheckpoint","nameLocation":"1204:24:32","parameters":{"id":8792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8787,"mutability":"mutable","name":"bottomUpCheckpoint","nameLocation":"1266:18:32","nodeType":"VariableDeclaration","scope":8794,"src":"1238:46:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_BottomUpCheckpoint_$16133_calldata_ptr","typeString":"struct BottomUpCheckpoint"},"typeName":{"id":8786,"nodeType":"UserDefinedTypeName","pathNode":{"id":8785,"name":"BottomUpCheckpoint","nameLocations":["1238:18:32"],"nodeType":"IdentifierPath","referencedDeclaration":16133,"src":"1238:18:32"},"referencedDeclaration":16133,"src":"1238:18:32","typeDescriptions":{"typeIdentifier":"t_struct$_BottomUpCheckpoint_$16133_storage_ptr","typeString":"struct BottomUpCheckpoint"}},"visibility":"internal"},{"constant":false,"id":8791,"mutability":"mutable","name":"messages","nameLocation":"1314:8:32","nodeType":"VariableDeclaration","scope":8794,"src":"1294:28:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CrossMsg_$16155_calldata_ptr_$dyn_calldata_ptr","typeString":"struct CrossMsg[]"},"typeName":{"baseType":{"id":8789,"nodeType":"UserDefinedTypeName","pathNode":{"id":8788,"name":"CrossMsg","nameLocations":["1294:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":16155,"src":"1294:8:32"},"referencedDeclaration":16155,"src":"1294:8:32","typeDescriptions":{"typeIdentifier":"t_struct$_CrossMsg_$16155_storage_ptr","typeString":"struct CrossMsg"}},"id":8790,"nodeType":"ArrayTypeName","src":"1294:10:32","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CrossMsg_$16155_storage_$dyn_storage_ptr","typeString":"struct CrossMsg[]"}},"visibility":"internal"}],"src":"1228:100:32"},"returnParameters":{"id":8793,"nodeType":"ParameterList","parameters":[],"src":"1337:0:32"},"scope":8843,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":8804,"nodeType":"FunctionDefinition","src":"1783:83:32","nodes":[],"documentation":{"id":8795,"nodeType":"StructuredDocumentation","src":"1344:434:32","text":"Fund injects new funds from an account of the parent chain to a subnet.\n This functions receives a transaction with the FILs that want to be injected in the subnet.\n - Funds injected are frozen.\n - A new fund cross-message is created and stored to propagate it to the subnet. It will be\n picked up by miners to include it in the next possible block.\n - The cross-message nonce is updated"},"functionSelector":"18f44b70","implemented":false,"kind":"function","modifiers":[],"name":"fund","nameLocation":"1792:4:32","parameters":{"id":8802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8798,"mutability":"mutable","name":"subnetId","nameLocation":"1815:8:32","nodeType":"VariableDeclaration","scope":8804,"src":"1797:26:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SubnetID_$16209_calldata_ptr","typeString":"struct SubnetID"},"typeName":{"id":8797,"nodeType":"UserDefinedTypeName","pathNode":{"id":8796,"name":"SubnetID","nameLocations":["1797:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":16209,"src":"1797:8:32"},"referencedDeclaration":16209,"src":"1797:8:32","typeDescriptions":{"typeIdentifier":"t_struct$_SubnetID_$16209_storage_ptr","typeString":"struct SubnetID"}},"visibility":"internal"},{"constant":false,"id":8801,"mutability":"mutable","name":"to","nameLocation":"1845:2:32","nodeType":"VariableDeclaration","scope":8804,"src":"1825:22:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_FvmAddress_$16179_calldata_ptr","typeString":"struct FvmAddress"},"typeName":{"id":8800,"nodeType":"UserDefinedTypeName","pathNode":{"id":8799,"name":"FvmAddress","nameLocations":["1825:10:32"],"nodeType":"IdentifierPath","referencedDeclaration":16179,"src":"1825:10:32"},"referencedDeclaration":16179,"src":"1825:10:32","typeDescriptions":{"typeIdentifier":"t_struct$_FvmAddress_$16179_storage_ptr","typeString":"struct FvmAddress"}},"visibility":"internal"}],"src":"1796:52:32"},"returnParameters":{"id":8803,"nodeType":"ParameterList","parameters":[],"src":"1865:0:32"},"scope":8843,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":8811,"nodeType":"FunctionDefinition","src":"2198:58:32","nodes":[],"documentation":{"id":8805,"nodeType":"StructuredDocumentation","src":"1872:321:32","text":"@notice Release creates a new check message to release funds in parent chain\n This function burns the funds that will be released in the current subnet\n and propagates a new checkpoint message to the parent chain to signal\n the amount of funds that can be released for a specific address."},"functionSelector":"6b2c1eef","implemented":false,"kind":"function","modifiers":[],"name":"release","nameLocation":"2207:7:32","parameters":{"id":8809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8808,"mutability":"mutable","name":"to","nameLocation":"2235:2:32","nodeType":"VariableDeclaration","scope":8811,"src":"2215:22:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_FvmAddress_$16179_calldata_ptr","typeString":"struct FvmAddress"},"typeName":{"id":8807,"nodeType":"UserDefinedTypeName","pathNode":{"id":8806,"name":"FvmAddress","nameLocations":["2215:10:32"],"nodeType":"IdentifierPath","referencedDeclaration":16179,"src":"2215:10:32"},"referencedDeclaration":16179,"src":"2215:10:32","typeDescriptions":{"typeIdentifier":"t_struct$_FvmAddress_$16179_storage_ptr","typeString":"struct FvmAddress"}},"visibility":"internal"}],"src":"2214:24:32"},"returnParameters":{"id":8810,"nodeType":"ParameterList","parameters":[],"src":"2255:0:32"},"scope":8843,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":8818,"nodeType":"FunctionDefinition","src":"2923:69:32","nodes":[],"documentation":{"id":8812,"nodeType":"StructuredDocumentation","src":"2262:656:32","text":"@notice SendCrossMessage sends an arbitrary cross-message to other subnet in the hierarchy.\n If the message includes any funds they need to be burnt (like in Release)\n before being propagated to the corresponding subnet.\n The circulating supply in each subnet needs to be updated as the message passes through them.\n Params expect a raw message without any subnet context (the IPC address is\n included in the message by the actor). Only actors are allowed to send arbitrary\n cross-messages as a side-effect of their execution. For plain token exchanges\n fund and release have to be used."},"functionSelector":"c13175ef","implemented":false,"kind":"function","modifiers":[],"name":"sendCrossMessage","nameLocation":"2932:16:32","parameters":{"id":8816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8815,"mutability":"mutable","name":"crossMsg","nameLocation":"2965:8:32","nodeType":"VariableDeclaration","scope":8818,"src":"2949:24:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CrossMsg_$16155_memory_ptr","typeString":"struct CrossMsg"},"typeName":{"id":8814,"nodeType":"UserDefinedTypeName","pathNode":{"id":8813,"name":"CrossMsg","nameLocations":["2949:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":16155,"src":"2949:8:32"},"referencedDeclaration":16155,"src":"2949:8:32","typeDescriptions":{"typeIdentifier":"t_struct$_CrossMsg_$16155_storage_ptr","typeString":"struct CrossMsg"}},"visibility":"internal"}],"src":"2948:26:32"},"returnParameters":{"id":8817,"nodeType":"ParameterList","parameters":[],"src":"2991:0:32"},"scope":8843,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":8824,"nodeType":"FunctionDefinition","src":"3067:52:32","nodes":[],"documentation":{"id":8819,"nodeType":"StructuredDocumentation","src":"2998:64:32","text":"@notice Propagates the stored postbox item for the given cid"},"functionSelector":"25bf0db6","implemented":false,"kind":"function","modifiers":[],"name":"propagate","nameLocation":"3076:9:32","parameters":{"id":8822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8821,"mutability":"mutable","name":"msgCid","nameLocation":"3094:6:32","nodeType":"VariableDeclaration","scope":8824,"src":"3086:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3086:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3085:16:32"},"returnParameters":{"id":8823,"nodeType":"ParameterList","parameters":[],"src":"3118:0:32"},"scope":8843,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":8831,"nodeType":"FunctionDefinition","src":"3185:73:32","nodes":[],"documentation":{"id":8825,"nodeType":"StructuredDocumentation","src":"3125:55:32","text":"@notice commit the ipc parent finality into storage"},"functionSelector":"11196974","implemented":false,"kind":"function","modifiers":[],"name":"commitParentFinality","nameLocation":"3194:20:32","parameters":{"id":8829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8828,"mutability":"mutable","name":"finality","nameLocation":"3239:8:32","nodeType":"VariableDeclaration","scope":8831,"src":"3215:32:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ParentFinality_$16116_calldata_ptr","typeString":"struct ParentFinality"},"typeName":{"id":8827,"nodeType":"UserDefinedTypeName","pathNode":{"id":8826,"name":"ParentFinality","nameLocations":["3215:14:32"],"nodeType":"IdentifierPath","referencedDeclaration":16116,"src":"3215:14:32"},"referencedDeclaration":16116,"src":"3215:14:32","typeDescriptions":{"typeIdentifier":"t_struct$_ParentFinality_$16116_storage_ptr","typeString":"struct ParentFinality"}},"visibility":"internal"}],"src":"3214:34:32"},"returnParameters":{"id":8830,"nodeType":"ParameterList","parameters":[],"src":"3257:0:32"},"scope":8843,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":8842,"nodeType":"FunctionDefinition","src":"3315:167:32","nodes":[],"documentation":{"id":8832,"nodeType":"StructuredDocumentation","src":"3264:46:32","text":"@notice creates a new bottom-up checkpoint"},"functionSelector":"a656ca5b","implemented":false,"kind":"function","modifiers":[],"name":"createBottomUpCheckpoint","nameLocation":"3324:24:32","parameters":{"id":8840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8835,"mutability":"mutable","name":"checkpoint","nameLocation":"3386:10:32","nodeType":"VariableDeclaration","scope":8842,"src":"3358:38:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_BottomUpCheckpoint_$16133_calldata_ptr","typeString":"struct BottomUpCheckpoint"},"typeName":{"id":8834,"nodeType":"UserDefinedTypeName","pathNode":{"id":8833,"name":"BottomUpCheckpoint","nameLocations":["3358:18:32"],"nodeType":"IdentifierPath","referencedDeclaration":16133,"src":"3358:18:32"},"referencedDeclaration":16133,"src":"3358:18:32","typeDescriptions":{"typeIdentifier":"t_struct$_BottomUpCheckpoint_$16133_storage_ptr","typeString":"struct BottomUpCheckpoint"}},"visibility":"internal"},{"constant":false,"id":8837,"mutability":"mutable","name":"membershipRootHash","nameLocation":"3414:18:32","nodeType":"VariableDeclaration","scope":8842,"src":"3406:26:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3406:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8839,"mutability":"mutable","name":"membershipWeight","nameLocation":"3450:16:32","nodeType":"VariableDeclaration","scope":8842,"src":"3442:24:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8838,"name":"uint256","nodeType":"ElementaryTypeName","src":"3442:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3348:124:32"},"returnParameters":{"id":8841,"nodeType":"ParameterList","parameters":[],"src":"3481:0:32"},"scope":8843,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IGateway","contractDependencies":[],"contractKind":"interface","documentation":{"id":8757,"nodeType":"StructuredDocumentation","src":"262:56:32","text":"@title Gateway interface\n @author LimeChain team"},"fullyImplemented":false,"linearizedBaseContracts":[8843],"name":"IGateway","nameLocation":"328:8:32","scope":8844,"usedErrors":[]}],"license":"MIT OR Apache-2.0"},"id":32}