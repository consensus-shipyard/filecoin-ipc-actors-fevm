{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_IsAccount_Fails_BlsAccount",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_IsAccount_Fails_ContractAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_IsAccount_Fails_NonExistingAccount",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_IsAccount_Works_BlsAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_IsAccount_Works_ContractConstructor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_IsAccount_Works_EthAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_IsSystemActor_False",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_IsSystemActor_True",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b5061108b8061003d6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806385226c81116100a2578063b5508aa911610071578063b5508aa9146101b5578063ba414fa6146101bd578063e20c9f71146101d5578063e317fc23146101dd578063fa7626d4146101e557600080fd5b806385226c8114610188578063916a17c61461019d57806395b857f5146101a55780639e1026eb146101ad57600080fd5b806322ff0980116100e957806322ff0980146101535780633e5e3c231461015b5780633f7286f4146101635780634dfb18f81461016b57806366d9a9a01461017357600080fd5b8063084ca9b31461011b5780631cecb26e146101255780631ed7831c1461012d57806322c8b0321461014b575b600080fd5b6101236101f2565b005b6101236102f4565b610135610381565b6040516101429190610c8a565b60405180910390f35b6101236103e3565b610123610437565b610135610478565b6101356104d8565b610123610538565b61017b610570565b6040516101429190610cd7565b61019061065f565b6040516101429190610dae565b61017b61072f565b610123610815565b6101236108cc565b610190610907565b6101c56109d7565b6040519015158152602001610142565b610135610b02565b610123610b62565b6000546101c59060ff1681565b6040516001625e79b760e01b031981526104d26004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015610246573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026a9190610e28565b604051635d3f8a6960e01b81526001600160a01b03909116600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__90635d3f8a69906024015b602060405180830381865af41580156102c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e89190610e58565b156102f257600080fd5b565b6102fe6064610bff565b604051630972932760e21b81526064600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__906325ca4c9c906024015b602060405180830381865af415801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190610e58565b15156001146102f257600080fd5b6060600d8054806020026020016040519081016040528092919081815260200182805480156103d957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103bb575b5050505050905090565b6103f663beefbeef60ff60981b01610bff565b604051630972932760e21b815263beefbeef60ff60981b01600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__906325ca4c9c90602401610332565b604051630972932760e21b815263beefbeef60ff60981b01600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__906325ca4c9c906024016102a7565b6060600f8054806020026020016040519081016040528092919081815260200182805480156103d9576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103bb575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156103d9576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103bb575050505050905090565b604051630972932760e21b81526064600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__906325ca4c9c906024016102a7565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156106565760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561063e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106005790505b50505050508152505081526020019060010190610594565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156106565783829060005260206000200180546106a290610e7a565b80601f01602080910402602001604051908101604052809291908181526020018280546106ce90610e7a565b801561071b5780601f106106f05761010080835404028352916020019161071b565b820191906000526020600020905b8154815290600101906020018083116106fe57829003601f168201915b505050505081526020019060010190610683565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156106565760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156107fd57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107bf5790505b50505050508152505081526020019060010190610753565b600060405161082390610c7d565b604051809103906000f08015801561083f573d6000803e3d6000fd5b50604051630972932760e21b81526001600160a01b038216600482015290915073__$e800e3908cdbb6b1b5bd452383a17b18f7$__906325ca4c9c90602401602060405180830381865af415801561089b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf9190610e58565b156108c957600080fd5b50565b604051635d3f8a6960e01b815260ff60981b600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__90635d3f8a6990602401610332565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561065657838290600052602060002001805461094a90610e7a565b80601f016020809104026020016040519081016040528092919081815260200182805461097690610e7a565b80156109c35780601f10610998576101008083540402835291602001916109c3565b820191906000526020600020905b8154815290600101906020018083116109a657829003601f168201915b50505050508152602001906001019061092b565b60008054610100900460ff16156109f75750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610afd5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610a85917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610eb4565b60408051601f1981840301815290829052610a9f91610ee5565b6000604051808303816000865af19150503d8060008114610adc576040519150601f19603f3d011682016040523d82523d6000602084013e610ae1565b606091505b5091505080806020019051810190610af99190610e58565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156103d9576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103bb575050505050905090565b6000604051610b7090610c7d565b604051809103906000f080158015610b8c573d6000803e3d6000fd5b509050806001600160a01b0316638e2d86f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf19190610e58565b15156001146108c957600080fd5b60405163c88a5e6d60e01b81526001600160a01b0382166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015610c6257600080fd5b505af1158015610c76573d6000803e3d6000fd5b5050505050565b61015480610f0283390190565b6020808252825182820181905260009190848201906040850190845b81811015610ccb5783516001600160a01b031683529284019291840191600101610ca6565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610d7b57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610d665783516001600160e01b0319168252928b019260019290920191908b0190610d3c565b50978a01979550505091870191600101610cff565b50919998505050505050505050565b60005b83811015610da5578181015183820152602001610d8d565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e1b57878503603f1901845281518051808752610dfc818989018a8501610d8a565b601f01601f191695909501860194509285019290850190600101610dd5565b5092979650505050505050565b600060208284031215610e3a57600080fd5b81516001600160a01b0381168114610e5157600080fd5b9392505050565b600060208284031215610e6a57600080fd5b81518015158114610e5157600080fd5b600181811c90821680610e8e57607f821691505b602082108103610eae57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610ed7816004850160208701610d8a565b919091016004019392505050565b60008251610ef7818460208701610d8a565b919091019291505056fe608060405234801561001057600080fd5b50604051630972932760e21b815230600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__906325ca4c9c90602401602060405180830381865af4158015610060573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610084919061009a565b6000805460ff19169115159190911790556100c3565b6000602082840312156100ac57600080fd5b815180151581146100bc57600080fd5b9392505050565b6083806100d16000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638e2d86f514602d575b600080fd5b60005460399060ff1681565b604051901515815260200160405180910390f3fea2646970667358221220404e7f92e3497a1b0c2c9ff7717a41773664df4dcacf1069c740f2284f0a3a6364736f6c63430008130033a26469706673582212205929090d0e0a52e65065a9c99a225faa2363ca8d68a59fc3c4cb908f4d55615564736f6c63430008130033",
    "sourceMap": "350:1431:92:-:0;;;1572:26:2;;;1594:4;-1:-1:-1;;1572:26:2;;;;;;;;3161:44:5;;;;;;;;;;;350:1431:92;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/lib/AccountHelper.sol": {
        "AccountHelper": [
          {
            "start": 710,
            "length": 20
          },
          {
            "start": 849,
            "length": 20
          },
          {
            "start": 1106,
            "length": 20
          },
          {
            "start": 1171,
            "length": 20
          },
          {
            "start": 1419,
            "length": 20
          },
          {
            "start": 2206,
            "length": 20
          },
          {
            "start": 2338,
            "length": 20
          },
          {
            "start": 3941,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c806385226c81116100a2578063b5508aa911610071578063b5508aa9146101b5578063ba414fa6146101bd578063e20c9f71146101d5578063e317fc23146101dd578063fa7626d4146101e557600080fd5b806385226c8114610188578063916a17c61461019d57806395b857f5146101a55780639e1026eb146101ad57600080fd5b806322ff0980116100e957806322ff0980146101535780633e5e3c231461015b5780633f7286f4146101635780634dfb18f81461016b57806366d9a9a01461017357600080fd5b8063084ca9b31461011b5780631cecb26e146101255780631ed7831c1461012d57806322c8b0321461014b575b600080fd5b6101236101f2565b005b6101236102f4565b610135610381565b6040516101429190610c8a565b60405180910390f35b6101236103e3565b610123610437565b610135610478565b6101356104d8565b610123610538565b61017b610570565b6040516101429190610cd7565b61019061065f565b6040516101429190610dae565b61017b61072f565b610123610815565b6101236108cc565b610190610907565b6101c56109d7565b6040519015158152602001610142565b610135610b02565b610123610b62565b6000546101c59060ff1681565b6040516001625e79b760e01b031981526104d26004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015610246573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026a9190610e28565b604051635d3f8a6960e01b81526001600160a01b03909116600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__90635d3f8a69906024015b602060405180830381865af41580156102c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e89190610e58565b156102f257600080fd5b565b6102fe6064610bff565b604051630972932760e21b81526064600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__906325ca4c9c906024015b602060405180830381865af415801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190610e58565b15156001146102f257600080fd5b6060600d8054806020026020016040519081016040528092919081815260200182805480156103d957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103bb575b5050505050905090565b6103f663beefbeef60ff60981b01610bff565b604051630972932760e21b815263beefbeef60ff60981b01600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__906325ca4c9c90602401610332565b604051630972932760e21b815263beefbeef60ff60981b01600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__906325ca4c9c906024016102a7565b6060600f8054806020026020016040519081016040528092919081815260200182805480156103d9576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103bb575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156103d9576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103bb575050505050905090565b604051630972932760e21b81526064600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__906325ca4c9c906024016102a7565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156106565760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561063e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106005790505b50505050508152505081526020019060010190610594565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156106565783829060005260206000200180546106a290610e7a565b80601f01602080910402602001604051908101604052809291908181526020018280546106ce90610e7a565b801561071b5780601f106106f05761010080835404028352916020019161071b565b820191906000526020600020905b8154815290600101906020018083116106fe57829003601f168201915b505050505081526020019060010190610683565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156106565760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156107fd57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107bf5790505b50505050508152505081526020019060010190610753565b600060405161082390610c7d565b604051809103906000f08015801561083f573d6000803e3d6000fd5b50604051630972932760e21b81526001600160a01b038216600482015290915073__$e800e3908cdbb6b1b5bd452383a17b18f7$__906325ca4c9c90602401602060405180830381865af415801561089b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf9190610e58565b156108c957600080fd5b50565b604051635d3f8a6960e01b815260ff60981b600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__90635d3f8a6990602401610332565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561065657838290600052602060002001805461094a90610e7a565b80601f016020809104026020016040519081016040528092919081815260200182805461097690610e7a565b80156109c35780601f10610998576101008083540402835291602001916109c3565b820191906000526020600020905b8154815290600101906020018083116109a657829003601f168201915b50505050508152602001906001019061092b565b60008054610100900460ff16156109f75750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610afd5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610a85917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610eb4565b60408051601f1981840301815290829052610a9f91610ee5565b6000604051808303816000865af19150503d8060008114610adc576040519150601f19603f3d011682016040523d82523d6000602084013e610ae1565b606091505b5091505080806020019051810190610af99190610e58565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156103d9576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103bb575050505050905090565b6000604051610b7090610c7d565b604051809103906000f080158015610b8c573d6000803e3d6000fd5b509050806001600160a01b0316638e2d86f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf19190610e58565b15156001146108c957600080fd5b60405163c88a5e6d60e01b81526001600160a01b0382166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b158015610c6257600080fd5b505af1158015610c76573d6000803e3d6000fd5b5050505050565b61015480610f0283390190565b6020808252825182820181905260009190848201906040850190845b81811015610ccb5783516001600160a01b031683529284019291840191600101610ca6565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610d7b57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610d665783516001600160e01b0319168252928b019260019290920191908b0190610d3c565b50978a01979550505091870191600101610cff565b50919998505050505050505050565b60005b83811015610da5578181015183820152602001610d8d565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e1b57878503603f1901845281518051808752610dfc818989018a8501610d8a565b601f01601f191695909501860194509285019290850190600101610dd5565b5092979650505050505050565b600060208284031215610e3a57600080fd5b81516001600160a01b0381168114610e5157600080fd5b9392505050565b600060208284031215610e6a57600080fd5b81518015158114610e5157600080fd5b600181811c90821680610e8e57607f821691505b602082108103610eae57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610ed7816004850160208701610d8a565b919091016004019392505050565b60008251610ef7818460208701610d8a565b919091019291505056fe608060405234801561001057600080fd5b50604051630972932760e21b815230600482015273__$e800e3908cdbb6b1b5bd452383a17b18f7$__906325ca4c9c90602401602060405180830381865af4158015610060573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610084919061009a565b6000805460ff19169115159190911790556100c3565b6000602082840312156100ac57600080fd5b815180151581146100bc57600080fd5b9392505050565b6083806100d16000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638e2d86f514602d575b600080fd5b60005460399060ff1681565b604051901515815260200160405180910390f3fea2646970667358221220404e7f92e3497a1b0c2c9ff7717a41773664df4dcacf1069c740f2284f0a3a6364736f6c63430008130033a26469706673582212205929090d0e0a52e65065a9c99a225faa2363ca8d68a59fc3c4cb908f4d55615564736f6c63430008130033",
    "sourceMap": "350:1431:92:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:112;;;:::i;:::-;;1136:146;;;:::i;2161:134:8:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1288:148:92;;;:::i;686:114::-;;;:::i;2930:133:8:-;;;:::i;2631:141::-;;;:::i;559:121:92:-;;;:::i;2447:178:8:-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;968:162:92:-;;;:::i;1442:120::-;;;:::i;1866:141:8:-;;;:::i;1819:584:2:-;;;:::i;:::-;;;3688:14:102;;3681:22;3663:41;;3651:2;3636:18;1819:584:2;3523:187:102;2013:142:8;;;:::i;806:156:92:-;;;:::i;1572:26:2:-;;;;;;;;;1568:112:92;1634:13;;-1:-1:-1;;;;;;1634:13:92;;1642:4;1634:13;;;3872:25:102;1634:7:92;;;;3845:18:102;;1634:13:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;;-1:-1:-1;;;1634:29:92;;-1:-1:-1;;;;;1634:27:92;;;:29;;;4357:51:102;1634:27:92;;;;4330:18:102;;1634:29:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;1626:47;;;;;;1568:112::o;1136:146::-;1196:28;468:3;1196:15;:28::i;:::-;1243:23;;-1:-1:-1;;;1243:23:92;;468:3;1243:23;;;4357:51:102;1243:21:92;;;;4330:18:102;;1243:23:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;1270:4;1243:31;1235:40;;;;;2161:134:8;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:8;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;1288:148:92:-;1348:29;-1:-1:-1;;;;;1348:15:92;:29::i;:::-;1396:24;;-1:-1:-1;;;1396:24:92;;-1:-1:-1;;;;;1396:24:92;;;4357:51:102;1396:22:92;;;;4330:18:102;;1396:24:92;4203:211:102;686:114:92;759:24;;-1:-1:-1;;;759:24:92;;-1:-1:-1;;;;;759:24:92;;;4357:51:102;759:22:92;;;;4330:18:102;;759:24:92;4203:211:102;2930:133:8;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:8;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:8;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;559:121:92:-;640:23;;-1:-1:-1;;;640:23:92;;468:3;640:23;;;4357:51:102;640:21:92;;;;4330:18:102;;640:23:92;4203:211:102;2447:178:8;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;968:162:92;1033:16;1052:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1090:23:92;;-1:-1:-1;;;1090:23:92;;-1:-1:-1;;;;;1090:21:92;;:23;;;4357:51:102;1033:38:92;;-1:-1:-1;1090:21:92;;;;4330:18:102;;1090:23:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:32;1082:41;;;;;;1023:107;968:162::o;1442:120::-;1507:39;;-1:-1:-1;;;1507:39:92;;-1:-1:-1;;;1507:39:92;;;4357:51:102;1507:37:92;;;;4330:18:102;;1507:39:92;4203:211:102;1866:141:8;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:2;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:2;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;5260:51:102;;;-1:-1:-1;;;5327:18:102;;;5320:34;2196:43:2;;;;;;;;;5233:18:102;;;2196:43:2;;;-1:-1:-1;;1671:64:2;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:2;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:2:o;2013:142:8:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:8;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;806:156:92:-;875:16;894:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;875:38;;932:2;-1:-1:-1;;;;;932:12:92;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:22;;950:4;932:22;924:31;;;;;1686:93;1747:25;;-1:-1:-1;;;1747:25:92;;-1:-1:-1;;;;;5278:32:102;;1747:25:92;;;5260:51:102;1764:7:92;5327:18:102;;;5320:34;1747:7:92;;;;5233:18:102;;1747:25:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1686:93;:::o;-1:-1:-1:-;;;;;;;;:::o;14:658:102:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:102;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:102;;14:658;-1:-1:-1;;;;;;14:658:102:o;677:1567::-;879:4;908:2;948;937:9;933:18;978:2;967:9;960:21;1001:6;1036;1030:13;1067:6;1059;1052:22;1093:2;1083:12;;1126:2;1115:9;1111:18;1104:25;;1188:2;1178:6;1175:1;1171:14;1160:9;1156:30;1152:39;1226:2;1218:6;1214:15;1247:1;1268;1278:937;1294:6;1289:3;1286:15;1278:937;;;1363:22;;;-1:-1:-1;;1359:36:102;1347:49;;1419:13;;1506:9;;-1:-1:-1;;;;;1502:35:102;1487:51;;1577:11;;1571:18;1609:15;;;1602:27;;;1690:19;;1459:15;;;1722:24;;;1812:21;;;;1857:1;;1780:2;1768:15;;;1871:236;1887:8;1882:3;1879:17;1871:236;;;1968:15;;-1:-1:-1;;;;;;1964:42:102;1950:57;;2076:17;;;;1915:1;1906:11;;;;;2033:14;;;;1871:236;;;-1:-1:-1;2193:12:102;;;;2130:5;-1:-1:-1;;;2158:15:102;;;;1320:1;1311:11;1278:937;;;-1:-1:-1;2232:6:102;;677:1567;-1:-1:-1;;;;;;;;;677:1567:102:o;2249:250::-;2334:1;2344:113;2358:6;2355:1;2352:13;2344:113;;;2434:11;;;2428:18;2415:11;;;2408:39;2380:2;2373:10;2344:113;;;-1:-1:-1;;2491:1:102;2473:16;;2466:27;2249:250::o;2504:1014::-;2666:4;2695:2;2735;2724:9;2720:18;2765:2;2754:9;2747:21;2788:6;2823;2817:13;2854:6;2846;2839:22;2892:2;2881:9;2877:18;2870:25;;2954:2;2944:6;2941:1;2937:14;2926:9;2922:30;2918:39;2904:53;;2992:2;2984:6;2980:15;3013:1;3023:466;3037:6;3034:1;3031:13;3023:466;;;3102:22;;;-1:-1:-1;;3098:36:102;3086:49;;3158:13;;3200:9;;3222:24;;;3259:74;3200:9;3307:15;;;3294:11;;;3259:74;:::i;:::-;3399:2;3376:17;-1:-1:-1;;3372:31:102;3360:44;;;;3356:53;;;-1:-1:-1;3467:12:102;;;;3432:15;;;;3059:1;3052:9;3023:466;;;-1:-1:-1;3506:6:102;;2504:1014;-1:-1:-1;;;;;;;2504:1014:102:o;3908:290::-;3978:6;4031:2;4019:9;4010:7;4006:23;4002:32;3999:52;;;4047:1;4044;4037:12;3999:52;4073:16;;-1:-1:-1;;;;;4118:31:102;;4108:42;;4098:70;;4164:1;4161;4154:12;4098:70;4187:5;3908:290;-1:-1:-1;;;3908:290:102:o;4419:277::-;4486:6;4539:2;4527:9;4518:7;4514:23;4510:32;4507:52;;;4555:1;4552;4545:12;4507:52;4587:9;4581:16;4640:5;4633:13;4626:21;4619:5;4616:32;4606:60;;4662:1;4659;4652:12;4701:380;4780:1;4776:12;;;;4823;;;4844:61;;4898:4;4890:6;4886:17;4876:27;;4844:61;4951:2;4943:6;4940:14;4920:18;4917:38;4914:161;;4997:10;4992:3;4988:20;4985:1;4978:31;5032:4;5029:1;5022:15;5060:4;5057:1;5050:15;4914:161;;4701:380;;;:::o;5365:384::-;-1:-1:-1;;;;;;5550:33:102;;5538:46;;5607:13;;5520:3;;5629:74;5607:13;5692:1;5683:11;;5676:4;5664:17;;5629:74;:::i;:::-;5723:16;;;;5741:1;5719:24;;5365:384;-1:-1:-1;;;5365:384:102:o;5754:287::-;5883:3;5921:6;5915:13;5937:66;5996:6;5991:3;5984:4;5976:6;5972:17;5937:66;:::i;:::-;6019:16;;;;;5754:287;-1:-1:-1;;5754:287:102:o",
    "linkReferences": {
      "src/lib/AccountHelper.sol": {
        "AccountHelper": [
          {
            "start": 649,
            "length": 20
          },
          {
            "start": 788,
            "length": 20
          },
          {
            "start": 1045,
            "length": 20
          },
          {
            "start": 1110,
            "length": 20
          },
          {
            "start": 1358,
            "length": 20
          },
          {
            "start": 2145,
            "length": 20
          },
          {
            "start": 2277,
            "length": 20
          },
          {
            "start": 3880,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_IsAccount_Fails_BlsAccount()": "22ff0980",
    "test_IsAccount_Fails_ContractAccount()": "95b857f5",
    "test_IsAccount_Fails_NonExistingAccount()": "4dfb18f8",
    "test_IsAccount_Works_BlsAccount()": "22c8b032",
    "test_IsAccount_Works_ContractConstructor()": "e317fc23",
    "test_IsAccount_Works_EthAccount()": "1cecb26e",
    "test_IsSystemActor_False()": "084ca9b3",
    "test_IsSystemActor_True()": "9e1026eb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_IsAccount_Fails_BlsAccount\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_IsAccount_Fails_ContractAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_IsAccount_Fails_NonExistingAccount\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_IsAccount_Works_BlsAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_IsAccount_Works_ContractConstructor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_IsAccount_Works_EthAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_IsSystemActor_False\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_IsSystemActor_True\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/unit/AccountHelper.t.sol\":\"AccountHelperTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/fevmate/contracts/utils/FilAddress.sol\":{\"keccak256\":\"0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7\",\"dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d\",\"dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07\",\"dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x06f0761a502a8dc74c06029c603831780ff32f1e85dad2ae0f810b7545fba09b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e940ed53ef0270d1d6f3215fcccf92dd675f8ec4a59e1fbd0535e0d52fb46c\",\"dweb:/ipfs/QmPTkXXzGKFyWBmbQPrL6Yg4ECWmu3LndSH9ex2E3czZuF\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"src/constants/Constants.sol\":{\"keccak256\":\"0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940\",\"dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx\"]},\"src/lib/AccountHelper.sol\":{\"keccak256\":\"0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc\",\"dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z\"]},\"test/unit/AccountHelper.t.sol\":{\"keccak256\":\"0x89b674eb6e77b4119038e3d760a2e8853224faa3ca9aed8e929dd7d311c1e5e8\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e1277934da7043441af37c151c9c5a82c6d972af3736fdc5f3577313ca87c9b1\",\"dweb:/ipfs/Qmb5mqWq4Yt8qQ7tRsh5ZUksRTKe1b7RrJKVmc2SmFRw2b\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_IsAccount_Fails_BlsAccount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_IsAccount_Fails_ContractAccount"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_IsAccount_Fails_NonExistingAccount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_IsAccount_Works_BlsAccount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_IsAccount_Works_ContractConstructor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_IsAccount_Works_EthAccount"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "test_IsSystemActor_False"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "test_IsSystemActor_True"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":fevmate/=lib/fevmate/contracts/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/unit/AccountHelper.t.sol": "AccountHelperTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/fevmate/contracts/utils/FilAddress.sol": {
        "keccak256": "0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31",
        "urls": [
          "bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7",
          "dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534",
        "urls": [
          "bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d",
          "dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017",
        "urls": [
          "bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07",
          "dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x06f0761a502a8dc74c06029c603831780ff32f1e85dad2ae0f810b7545fba09b",
        "urls": [
          "bzz-raw://70e940ed53ef0270d1d6f3215fcccf92dd675f8ec4a59e1fbd0535e0d52fb46c",
          "dweb:/ipfs/QmPTkXXzGKFyWBmbQPrL6Yg4ECWmu3LndSH9ex2E3czZuF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "src/constants/Constants.sol": {
        "keccak256": "0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546",
        "urls": [
          "bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940",
          "dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/AccountHelper.sol": {
        "keccak256": "0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5",
        "urls": [
          "bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc",
          "dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "test/unit/AccountHelper.t.sol": {
        "keccak256": "0x89b674eb6e77b4119038e3d760a2e8853224faa3ca9aed8e929dd7d311c1e5e8",
        "urls": [
          "bzz-raw://e1277934da7043441af37c151c9c5a82c6d972af3736fdc5f3577313ca87c9b1",
          "dweb:/ipfs/Qmb5mqWq4Yt8qQ7tRsh5ZUksRTKe1b7RrJKVmc2SmFRw2b"
        ],
        "license": "MIT OR Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/unit/AccountHelper.t.sol",
    "id": 69766,
    "exportedSymbols": {
      "ADDRESS_CODEHASH": [
        36338
      ],
      "AccountHelper": [
        39768
      ],
      "AccountHelperTest": [
        69765
      ],
      "DSTest": [
        3720
      ],
      "DummyContract": [
        69610
      ],
      "FilAddress": [
        1428
      ],
      "StdAssertions": [
        5210
      ],
      "StdChains": [
        5904
      ],
      "StdCheats": [
        8180
      ],
      "StdInvariant": [
        8470
      ],
      "StdStorage": [
        9220
      ],
      "StdStyle": [
        11864
      ],
      "StdUtils": [
        12691
      ],
      "Test": [
        12740
      ],
      "TestBase": [
        3780
      ],
      "Vm": [
        14222
      ],
      "console": [
        22286
      ],
      "console2": [
        30382
      ],
      "stdError": [
        8246
      ],
      "stdJson": [
        9046
      ],
      "stdMath": [
        9188
      ],
      "stdStorage": [
        10653
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:1736:92",
    "nodes": [
      {
        "id": 69588,
        "nodeType": "PragmaDirective",
        "src": "46:23:92",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 69589,
        "nodeType": "ImportDirective",
        "src": "71:28:92",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69766,
        "sourceUnit": 12741,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 69590,
        "nodeType": "ImportDirective",
        "src": "101:38:92",
        "nodes": [],
        "absolutePath": "lib/fevmate/contracts/utils/FilAddress.sol",
        "file": "fevmate/utils/FilAddress.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69766,
        "sourceUnit": 1429,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 69591,
        "nodeType": "ImportDirective",
        "src": "140:41:92",
        "nodes": [],
        "absolutePath": "src/lib/AccountHelper.sol",
        "file": "../../src/lib/AccountHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69766,
        "sourceUnit": 39769,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 69610,
        "nodeType": "ContractDefinition",
        "src": "183:165:92",
        "nodes": [
          {
            "id": 69594,
            "nodeType": "UsingForDirective",
            "src": "212:32:92",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 69592,
              "name": "AccountHelper",
              "nameLocations": [
                "218:13:92"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39768,
              "src": "218:13:92"
            },
            "typeName": {
              "id": 69593,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "236:7:92",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 69596,
            "nodeType": "VariableDeclaration",
            "src": "250:21:92",
            "nodes": [],
            "constant": false,
            "functionSelector": "8e2d86f5",
            "mutability": "mutable",
            "name": "isAccount",
            "nameLocation": "262:9:92",
            "scope": 69610,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 69595,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "250:4:92",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 69609,
            "nodeType": "FunctionDefinition",
            "src": "278:68:92",
            "nodes": [],
            "body": {
              "id": 69608,
              "nodeType": "Block",
              "src": "292:54:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 69606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69599,
                      "name": "isAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69596,
                      "src": "302:9:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 69602,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "322:4:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DummyContract_$69610",
                                "typeString": "contract DummyContract"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DummyContract_$69610",
                                "typeString": "contract DummyContract"
                              }
                            ],
                            "id": 69601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "314:7:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 69600,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "314:7:92",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 69603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "314:13:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 69604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "328:9:92",
                        "memberName": "isAccount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39754,
                        "src": "314:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 69605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "314:25:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "302:37:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 69607,
                  "nodeType": "ExpressionStatement",
                  "src": "302:37:92"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 69597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "289:2:92"
            },
            "returnParameters": {
              "id": 69598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "292:0:92"
            },
            "scope": 69610,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DummyContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          69610
        ],
        "name": "DummyContract",
        "nameLocation": "192:13:92",
        "scope": 69766,
        "usedErrors": []
      },
      {
        "id": 69765,
        "nodeType": "ContractDefinition",
        "src": "350:1431:92",
        "nodes": [
          {
            "id": 69615,
            "nodeType": "UsingForDirective",
            "src": "391:32:92",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 69613,
              "name": "AccountHelper",
              "nameLocations": [
                "397:13:92"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39768,
              "src": "397:13:92"
            },
            "typeName": {
              "id": 69614,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "415:7:92",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 69621,
            "nodeType": "VariableDeclaration",
            "src": "429:43:92",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ETH_ADDRESS",
            "nameLocation": "446:11:92",
            "scope": 69765,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 69616,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "429:7:92",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "313030",
                  "id": 69619,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "468:3:92",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  },
                  "value": "100"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  }
                ],
                "id": 69618,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "460:7:92",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 69617,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "460:7:92",
                  "typeDescriptions": {}
                }
              },
              "id": 69620,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "460:12:92",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 69624,
            "nodeType": "VariableDeclaration",
            "src": "478:74:92",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "BLS_ADDREESS",
            "nameLocation": "495:12:92",
            "scope": 69765,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 69622,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "478:7:92",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307866463030303030303030303030303030303030303030303030303030303030306245656662454566",
              "id": 69623,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "510:42:92",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xfF000000000000000000000000000000bEefbEEf"
            },
            "visibility": "internal"
          },
          {
            "id": 69636,
            "nodeType": "FunctionDefinition",
            "src": "559:121:92",
            "nodes": [],
            "body": {
              "id": 69635,
              "nodeType": "Block",
              "src": "622:58:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 69632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 69628,
                              "name": "ETH_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69621,
                              "src": "640:11:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 69629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "652:9:92",
                            "memberName": "isAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39754,
                            "src": "640:21:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 69630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "640:23:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 69631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "667:5:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "640:32:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "632:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 69633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "632:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69634,
                  "nodeType": "ExpressionStatement",
                  "src": "632:41:92"
                }
              ]
            },
            "functionSelector": "4dfb18f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_IsAccount_Fails_NonExistingAccount",
            "nameLocation": "568:39:92",
            "parameters": {
              "id": 69625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "607:2:92"
            },
            "returnParameters": {
              "id": 69626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "622:0:92"
            },
            "scope": 69765,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 69648,
            "nodeType": "FunctionDefinition",
            "src": "686:114:92",
            "nodes": [],
            "body": {
              "id": 69647,
              "nodeType": "Block",
              "src": "741:59:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 69644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 69640,
                              "name": "BLS_ADDREESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69624,
                              "src": "759:12:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 69641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "772:9:92",
                            "memberName": "isAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39754,
                            "src": "759:22:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 69642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "759:24:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 69643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "787:5:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "759:33:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69639,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "751:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 69645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "751:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69646,
                  "nodeType": "ExpressionStatement",
                  "src": "751:42:92"
                }
              ]
            },
            "functionSelector": "22ff0980",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_IsAccount_Fails_BlsAccount",
            "nameLocation": "695:31:92",
            "parameters": {
              "id": 69637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "726:2:92"
            },
            "returnParameters": {
              "id": 69638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "741:0:92"
            },
            "scope": 69765,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 69668,
            "nodeType": "FunctionDefinition",
            "src": "806:156:92",
            "nodes": [],
            "body": {
              "id": 69667,
              "nodeType": "Block",
              "src": "865:97:92",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    69653
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69653,
                      "mutability": "mutable",
                      "name": "dc",
                      "nameLocation": "889:2:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 69667,
                      "src": "875:16:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DummyContract_$69610",
                        "typeString": "contract DummyContract"
                      },
                      "typeName": {
                        "id": 69652,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 69651,
                          "name": "DummyContract",
                          "nameLocations": [
                            "875:13:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69610,
                          "src": "875:13:92"
                        },
                        "referencedDeclaration": 69610,
                        "src": "875:13:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DummyContract_$69610",
                          "typeString": "contract DummyContract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69658,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 69656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "894:17:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DummyContract_$69610_$",
                        "typeString": "function () returns (contract DummyContract)"
                      },
                      "typeName": {
                        "id": 69655,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 69654,
                          "name": "DummyContract",
                          "nameLocations": [
                            "898:13:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69610,
                          "src": "898:13:92"
                        },
                        "referencedDeclaration": 69610,
                        "src": "898:13:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DummyContract_$69610",
                          "typeString": "contract DummyContract"
                        }
                      }
                    },
                    "id": 69657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:19:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DummyContract_$69610",
                      "typeString": "contract DummyContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "875:38:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 69664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 69660,
                              "name": "dc",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69653,
                              "src": "932:2:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DummyContract_$69610",
                                "typeString": "contract DummyContract"
                              }
                            },
                            "id": 69661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "935:9:92",
                            "memberName": "isAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69596,
                            "src": "932:12:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 69662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "932:14:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 69663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "950:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "932:22:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69659,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "924:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 69665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "924:31:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69666,
                  "nodeType": "ExpressionStatement",
                  "src": "924:31:92"
                }
              ]
            },
            "functionSelector": "e317fc23",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_IsAccount_Works_ContractConstructor",
            "nameLocation": "815:40:92",
            "parameters": {
              "id": 69649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:2:92"
            },
            "returnParameters": {
              "id": 69650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:0:92"
            },
            "scope": 69765,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 69691,
            "nodeType": "FunctionDefinition",
            "src": "968:162:92",
            "nodes": [],
            "body": {
              "id": 69690,
              "nodeType": "Block",
              "src": "1023:107:92",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    69673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69673,
                      "mutability": "mutable",
                      "name": "dc",
                      "nameLocation": "1047:2:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 69690,
                      "src": "1033:16:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DummyContract_$69610",
                        "typeString": "contract DummyContract"
                      },
                      "typeName": {
                        "id": 69672,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 69671,
                          "name": "DummyContract",
                          "nameLocations": [
                            "1033:13:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69610,
                          "src": "1033:13:92"
                        },
                        "referencedDeclaration": 69610,
                        "src": "1033:13:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DummyContract_$69610",
                          "typeString": "contract DummyContract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69678,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 69676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1052:17:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DummyContract_$69610_$",
                        "typeString": "function () returns (contract DummyContract)"
                      },
                      "typeName": {
                        "id": 69675,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 69674,
                          "name": "DummyContract",
                          "nameLocations": [
                            "1056:13:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69610,
                          "src": "1056:13:92"
                        },
                        "referencedDeclaration": 69610,
                        "src": "1056:13:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DummyContract_$69610",
                          "typeString": "contract DummyContract"
                        }
                      }
                    },
                    "id": 69677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1052:19:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DummyContract_$69610",
                      "typeString": "contract DummyContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1033:38:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 69687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 69682,
                                  "name": "dc",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69673,
                                  "src": "1098:2:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DummyContract_$69610",
                                    "typeString": "contract DummyContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DummyContract_$69610",
                                    "typeString": "contract DummyContract"
                                  }
                                ],
                                "id": 69681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1090:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 69680,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1090:7:92",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 69683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1090:11:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 69684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1102:9:92",
                            "memberName": "isAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39754,
                            "src": "1090:21:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 69685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1090:23:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 69686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1117:5:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1090:32:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69679,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1082:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 69688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1082:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69689,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:41:92"
                }
              ]
            },
            "functionSelector": "95b857f5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_IsAccount_Fails_ContractAccount",
            "nameLocation": "977:36:92",
            "parameters": {
              "id": 69669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1013:2:92"
            },
            "returnParameters": {
              "id": 69670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1023:0:92"
            },
            "scope": 69765,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 69707,
            "nodeType": "FunctionDefinition",
            "src": "1136:146:92",
            "nodes": [],
            "body": {
              "id": 69706,
              "nodeType": "Block",
              "src": "1186:96:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 69695,
                        "name": "ETH_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69621,
                        "src": "1212:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 69694,
                      "name": "activateAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69764,
                      "src": "1196:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 69696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1196:28:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69697,
                  "nodeType": "ExpressionStatement",
                  "src": "1196:28:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 69703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 69699,
                              "name": "ETH_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69621,
                              "src": "1243:11:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 69700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1255:9:92",
                            "memberName": "isAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39754,
                            "src": "1243:21:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 69701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1243:23:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 69702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1270:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1243:31:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69698,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1235:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 69704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1235:40:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69705,
                  "nodeType": "ExpressionStatement",
                  "src": "1235:40:92"
                }
              ]
            },
            "functionSelector": "1cecb26e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_IsAccount_Works_EthAccount",
            "nameLocation": "1145:31:92",
            "parameters": {
              "id": 69692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:2:92"
            },
            "returnParameters": {
              "id": 69693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:92"
            },
            "scope": 69765,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 69723,
            "nodeType": "FunctionDefinition",
            "src": "1288:148:92",
            "nodes": [],
            "body": {
              "id": 69722,
              "nodeType": "Block",
              "src": "1338:98:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 69711,
                        "name": "BLS_ADDREESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69624,
                        "src": "1364:12:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 69710,
                      "name": "activateAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69764,
                      "src": "1348:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 69712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1348:29:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69713,
                  "nodeType": "ExpressionStatement",
                  "src": "1348:29:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 69719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 69715,
                              "name": "BLS_ADDREESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69624,
                              "src": "1396:12:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 69716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1409:9:92",
                            "memberName": "isAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39754,
                            "src": "1396:22:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 69717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1396:24:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 69718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1424:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1396:32:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69714,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1388:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 69720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1388:41:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69721,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:41:92"
                }
              ]
            },
            "functionSelector": "22c8b032",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_IsAccount_Works_BlsAccount",
            "nameLocation": "1297:31:92",
            "parameters": {
              "id": 69708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1328:2:92"
            },
            "returnParameters": {
              "id": 69709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1338:0:92"
            },
            "scope": 69765,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 69736,
            "nodeType": "FunctionDefinition",
            "src": "1442:120:92",
            "nodes": [],
            "body": {
              "id": 69735,
              "nodeType": "Block",
              "src": "1489:73:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 69732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 69727,
                                "name": "FilAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1428,
                                "src": "1507:10:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FilAddress_$1428_$",
                                  "typeString": "type(library FilAddress)"
                                }
                              },
                              "id": 69728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1518:12:92",
                              "memberName": "SYSTEM_ACTOR",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1141,
                              "src": "1507:23:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 69729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1531:13:92",
                            "memberName": "isSystemActor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39767,
                            "src": "1507:37:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_pure$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                              "typeString": "function (address) pure returns (bool)"
                            }
                          },
                          "id": 69730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1507:39:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 69731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1550:4:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1507:47:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1499:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 69733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1499:56:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69734,
                  "nodeType": "ExpressionStatement",
                  "src": "1499:56:92"
                }
              ]
            },
            "functionSelector": "9e1026eb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_IsSystemActor_True",
            "nameLocation": "1451:23:92",
            "parameters": {
              "id": 69724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1474:2:92"
            },
            "returnParameters": {
              "id": 69725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1489:0:92"
            },
            "scope": 69765,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 69751,
            "nodeType": "FunctionDefinition",
            "src": "1568:112:92",
            "nodes": [],
            "body": {
              "id": 69750,
              "nodeType": "Block",
              "src": "1616:64:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 69747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "31323334",
                                  "id": 69742,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1642:4:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1234_by_1",
                                    "typeString": "int_const 1234"
                                  },
                                  "value": "1234"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1234_by_1",
                                    "typeString": "int_const 1234"
                                  }
                                ],
                                "expression": {
                                  "id": 69740,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3773,
                                  "src": "1634:2:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$14222",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 69741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1637:4:92",
                                "memberName": "addr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12811,
                                "src": "1634:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) pure external returns (address)"
                                }
                              },
                              "id": 69743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1634:13:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 69744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1648:13:92",
                            "memberName": "isSystemActor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39767,
                            "src": "1634:27:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_pure$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                              "typeString": "function (address) pure returns (bool)"
                            }
                          },
                          "id": 69745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1634:29:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 69746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1667:5:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1634:38:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1626:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 69748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1626:47:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69749,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:47:92"
                }
              ]
            },
            "functionSelector": "084ca9b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_IsSystemActor_False",
            "nameLocation": "1577:24:92",
            "parameters": {
              "id": 69737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1601:2:92"
            },
            "returnParameters": {
              "id": 69738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1616:0:92"
            },
            "scope": 69765,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 69764,
            "nodeType": "FunctionDefinition",
            "src": "1686:93:92",
            "nodes": [],
            "body": {
              "id": 69763,
              "nodeType": "Block",
              "src": "1737:42:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 69759,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69753,
                        "src": "1755:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 69760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1764:7:92",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 69756,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3773,
                        "src": "1747:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14222",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 69758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1750:4:92",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13864,
                      "src": "1747:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 69761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1747:25:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69762,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:25:92"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "activateAccount",
            "nameLocation": "1695:15:92",
            "parameters": {
              "id": 69754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69753,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1719:7:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 69764,
                  "src": "1711:15:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1710:17:92"
            },
            "returnParameters": {
              "id": 69755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:0:92"
            },
            "scope": 69765,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 69611,
              "name": "Test",
              "nameLocations": [
                "380:4:92"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12740,
              "src": "380:4:92"
            },
            "id": 69612,
            "nodeType": "InheritanceSpecifier",
            "src": "380:4:92"
          }
        ],
        "canonicalName": "AccountHelperTest",
        "contractDependencies": [
          69610
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          69765,
          12740,
          3780,
          3777,
          12691,
          8470,
          8180,
          7501,
          5904,
          5210,
          3720
        ],
        "name": "AccountHelperTest",
        "nameLocation": "359:17:92",
        "scope": 69766,
        "usedErrors": []
      }
    ],
    "license": "MIT OR Apache-2.0"
  },
  "id": 92
}