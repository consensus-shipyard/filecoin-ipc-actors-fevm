{
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "AddressInsufficientBalance",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FailedInnerCall",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "addStake",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "internalType": "uint64",
                                    "name": "root",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "route",
                                    "type": "address[]"
                                }
                            ],
                            "internalType": "struct SubnetID",
                            "name": "subnetID",
                            "type": "tuple"
                        },
                        {
                            "internalType": "uint64",
                            "name": "blockHeight",
                            "type": "uint64"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "blockHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint64",
                            "name": "nextConfigurationNumber",
                            "type": "uint64"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "crossMessagesHash",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct BottomUpCheckpoint",
                    "name": "bottomUpCheckpoint",
                    "type": "tuple"
                },
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint64",
                                                    "name": "root",
                                                    "type": "uint64"
                                                },
                                                {
                                                    "internalType": "address[]",
                                                    "name": "route",
                                                    "type": "address[]"
                                                }
                                            ],
                                            "internalType": "struct SubnetID",
                                            "name": "subnetId",
                                            "type": "tuple"
                                        },
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint8",
                                                    "name": "addrType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "payload",
                                                    "type": "bytes"
                                                }
                                            ],
                                            "internalType": "struct FvmAddress",
                                            "name": "rawAddress",
                                            "type": "tuple"
                                        }
                                    ],
                                    "internalType": "struct IPCAddress",
                                    "name": "from",
                                    "type": "tuple"
                                },
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint64",
                                                    "name": "root",
                                                    "type": "uint64"
                                                },
                                                {
                                                    "internalType": "address[]",
                                                    "name": "route",
                                                    "type": "address[]"
                                                }
                                            ],
                                            "internalType": "struct SubnetID",
                                            "name": "subnetId",
                                            "type": "tuple"
                                        },
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint8",
                                                    "name": "addrType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "payload",
                                                    "type": "bytes"
                                                }
                                            ],
                                            "internalType": "struct FvmAddress",
                                            "name": "rawAddress",
                                            "type": "tuple"
                                        }
                                    ],
                                    "internalType": "struct IPCAddress",
                                    "name": "to",
                                    "type": "tuple"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "nonce",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes4",
                                    "name": "method",
                                    "type": "bytes4"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "params",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "fee",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct StorableMsg",
                            "name": "message",
                            "type": "tuple"
                        },
                        {
                            "internalType": "bool",
                            "name": "wrapped",
                            "type": "bool"
                        }
                    ],
                    "internalType": "struct CrossMsg[]",
                    "name": "messages",
                    "type": "tuple[]"
                }
            ],
            "name": "commitBottomUpCheckpoint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "height",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "blockHash",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct ParentFinality",
                    "name": "finality",
                    "type": "tuple"
                }
            ],
            "name": "commitParentFinality",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "internalType": "uint64",
                                    "name": "root",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "route",
                                    "type": "address[]"
                                }
                            ],
                            "internalType": "struct SubnetID",
                            "name": "subnetID",
                            "type": "tuple"
                        },
                        {
                            "internalType": "uint64",
                            "name": "blockHeight",
                            "type": "uint64"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "blockHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint64",
                            "name": "nextConfigurationNumber",
                            "type": "uint64"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "crossMessagesHash",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct BottomUpCheckpoint",
                    "name": "checkpoint",
                    "type": "tuple"
                },
                {
                    "internalType": "bytes32",
                    "name": "membershipRootHash",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "membershipWeight",
                    "type": "uint256"
                }
            ],
            "name": "createBottomUpCheckpoint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "uint64",
                            "name": "root",
                            "type": "uint64"
                        },
                        {
                            "internalType": "address[]",
                            "name": "route",
                            "type": "address[]"
                        }
                    ],
                    "internalType": "struct SubnetID",
                    "name": "subnetId",
                    "type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "uint8",
                            "name": "addrType",
                            "type": "uint8"
                        },
                        {
                            "internalType": "bytes",
                            "name": "payload",
                            "type": "bytes"
                        }
                    ],
                    "internalType": "struct FvmAddress",
                    "name": "to",
                    "type": "tuple"
                }
            ],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "kill",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "msgCid",
                    "type": "bytes32"
                }
            ],
            "name": "propagate",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_genesisCircSupply",
                    "type": "uint256"
                }
            ],
            "name": "register",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "uint8",
                            "name": "addrType",
                            "type": "uint8"
                        },
                        {
                            "internalType": "bytes",
                            "name": "payload",
                            "type": "bytes"
                        }
                    ],
                    "internalType": "struct FvmAddress",
                    "name": "to",
                    "type": "tuple"
                }
            ],
            "name": "release",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "releaseRewardForRelayer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "releaseStake",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint64",
                                                    "name": "root",
                                                    "type": "uint64"
                                                },
                                                {
                                                    "internalType": "address[]",
                                                    "name": "route",
                                                    "type": "address[]"
                                                }
                                            ],
                                            "internalType": "struct SubnetID",
                                            "name": "subnetId",
                                            "type": "tuple"
                                        },
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint8",
                                                    "name": "addrType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "payload",
                                                    "type": "bytes"
                                                }
                                            ],
                                            "internalType": "struct FvmAddress",
                                            "name": "rawAddress",
                                            "type": "tuple"
                                        }
                                    ],
                                    "internalType": "struct IPCAddress",
                                    "name": "from",
                                    "type": "tuple"
                                },
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint64",
                                                    "name": "root",
                                                    "type": "uint64"
                                                },
                                                {
                                                    "internalType": "address[]",
                                                    "name": "route",
                                                    "type": "address[]"
                                                }
                                            ],
                                            "internalType": "struct SubnetID",
                                            "name": "subnetId",
                                            "type": "tuple"
                                        },
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint8",
                                                    "name": "addrType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "payload",
                                                    "type": "bytes"
                                                }
                                            ],
                                            "internalType": "struct FvmAddress",
                                            "name": "rawAddress",
                                            "type": "tuple"
                                        }
                                    ],
                                    "internalType": "struct IPCAddress",
                                    "name": "to",
                                    "type": "tuple"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "nonce",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes4",
                                    "name": "method",
                                    "type": "bytes4"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "params",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "fee",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct StorableMsg",
                            "name": "message",
                            "type": "tuple"
                        },
                        {
                            "internalType": "bool",
                            "name": "wrapped",
                            "type": "bool"
                        }
                    ],
                    "internalType": "struct CrossMsg",
                    "name": "crossMsg",
                    "type": "tuple"
                }
            ],
            "name": "sendCrossMessage",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        }
    ],
    "bytecode": {
        "object": "0x608060405234801561001057600080fd5b506108f1806100206000396000f3fe6080604052600436106100a75760003560e01c80636b2c1eef116100645780636b2c1eef14610157578063a656ca5b14610165578063c13175ef14610192578063d8e25572146101a0578063f207564e146101bb578063f456b39e146101e757600080fd5b806311196974146100ac57806318f44b70146100d957806325bf0db6146100f857806341c0e1b51461010657806345f54485146101255780635a627dbc14610145575b600080fd5b3480156100b857600080fd5b506100d76100c73660046102e5565b506000805460ff19166001179055565b005b6100d76100e7366004610308565b50506000805460ff19166001179055565b6100d76100c736600461036c565b34801561011257600080fd5b506100d76000805460ff19166001179055565b34801561013157600080fd5b506100d761014036600461036c565b610202565b6100d76000805460ff19166001179055565b6100d76100c7366004610385565b34801561017157600080fd5b506100d76101803660046103d4565b50506000805460ff1916600117905550565b6100d76100c73660046106f7565b3480156101ac57600080fd5b506100d76100c736600461036c565b6100d76101c936600461036c565b506000805433610100026001600160a81b0319909116176001179055565b3480156101f357600080fd5b506100d7610180366004610821565b6000805460ff19166001179081905561022a906001600160a01b03610100909104168261022d565b50565b804710156102545760405163cd78605960e01b815230600482015260240160405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146102a1576040519150601f19603f3d011682016040523d82523d6000602084013e6102a6565b606091505b50509050806102c857604051630a12f52160e11b815260040160405180910390fd5b505050565b6000604082840312156102df57600080fd5b50919050565b6000604082840312156102f757600080fd5b61030183836102cd565b9392505050565b6000806040838503121561031b57600080fd5b823567ffffffffffffffff8082111561033357600080fd5b61033f868387016102cd565b9350602085013591508082111561035557600080fd5b50610362858286016102cd565b9150509250929050565b60006020828403121561037e57600080fd5b5035919050565b60006020828403121561039757600080fd5b813567ffffffffffffffff8111156103ae57600080fd5b6103ba848285016102cd565b949350505050565b600060a082840312156102df57600080fd5b6000806000606084860312156103e957600080fd5b833567ffffffffffffffff81111561040057600080fd5b61040c868287016103c2565b9660208601359650604090950135949350505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561045b5761045b610422565b60405290565b60405160e0810167ffffffffffffffff8111828210171561045b5761045b610422565b604051601f8201601f1916810167ffffffffffffffff811182821017156104ad576104ad610422565b604052919050565b803567ffffffffffffffff811681146104cd57600080fd5b919050565b600082601f8301126104e357600080fd5b813567ffffffffffffffff8111156104fd576104fd610422565b610510601f8201601f1916602001610484565b81815284602083860101111561052557600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561055457600080fd5b61055c610438565b9050813560ff8116811461056f57600080fd5b8152602082013567ffffffffffffffff81111561058b57600080fd5b610597848285016104d2565b60208301525092915050565b6000604082840312156105b557600080fd5b6105bd610438565b9050813567ffffffffffffffff808211156105d757600080fd5b90830190604082860312156105eb57600080fd5b6105f3610438565b6105fc836104b5565b81526020808401358381111561061157600080fd5b80850194505086601f85011261062657600080fd5b83358381111561063857610638610422565b8060051b610647838201610484565b918252858101830191838101908a84111561066157600080fd5b968401965b8388101561069857873592506001600160a01b03831683146106885760008081fd5b8282529684019690840190610666565b85850152505050818552858101359350828411156106b557600080fd5b6106c187858801610542565b818601525050505092915050565b80356001600160e01b0319811681146104cd57600080fd5b803580151581146104cd57600080fd5b60006020828403121561070957600080fd5b813567ffffffffffffffff8082111561072157600080fd5b908301906040828603121561073557600080fd5b61073d610438565b82358281111561074c57600080fd5b830160e0818803121561075e57600080fd5b610766610461565b81358481111561077557600080fd5b610781898285016105a3565b82525060208201358481111561079657600080fd5b6107a2898285016105a3565b602083015250604082013560408201526107be606083016104b5565b60608201526107cf608083016106cf565b608082015260a0820135848111156107e657600080fd5b6107f2898285016104d2565b60a08301525060c082013560c08201528083525050610813602084016106e7565b602082015295945050505050565b60008060006040848603121561083657600080fd5b833567ffffffffffffffff8082111561084e57600080fd5b61085a878388016103c2565b9450602086013591508082111561087057600080fd5b818601915086601f83011261088457600080fd5b81358181111561089357600080fd5b8760208260051b85010111156108a857600080fd5b602083019450809350505050925092509256fea2646970667358221220e249c133163530ad39224ba4f7bd3a8d161b929e9f81d3c37520ca264ae80d0564736f6c63430008130033",
        "sourceMap": "409:2715:96:-:0;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x6080604052600436106100a75760003560e01c80636b2c1eef116100645780636b2c1eef14610157578063a656ca5b14610165578063c13175ef14610192578063d8e25572146101a0578063f207564e146101bb578063f456b39e146101e757600080fd5b806311196974146100ac57806318f44b70146100d957806325bf0db6146100f857806341c0e1b51461010657806345f54485146101255780635a627dbc14610145575b600080fd5b3480156100b857600080fd5b506100d76100c73660046102e5565b506000805460ff19166001179055565b005b6100d76100e7366004610308565b50506000805460ff19166001179055565b6100d76100c736600461036c565b34801561011257600080fd5b506100d76000805460ff19166001179055565b34801561013157600080fd5b506100d761014036600461036c565b610202565b6100d76000805460ff19166001179055565b6100d76100c7366004610385565b34801561017157600080fd5b506100d76101803660046103d4565b50506000805460ff1916600117905550565b6100d76100c73660046106f7565b3480156101ac57600080fd5b506100d76100c736600461036c565b6100d76101c936600461036c565b506000805433610100026001600160a81b0319909116176001179055565b3480156101f357600080fd5b506100d7610180366004610821565b6000805460ff19166001179081905561022a906001600160a01b03610100909104168261022d565b50565b804710156102545760405163cd78605960e01b815230600482015260240160405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146102a1576040519150601f19603f3d011682016040523d82523d6000602084013e6102a6565b606091505b50509050806102c857604051630a12f52160e11b815260040160405180910390fd5b505050565b6000604082840312156102df57600080fd5b50919050565b6000604082840312156102f757600080fd5b61030183836102cd565b9392505050565b6000806040838503121561031b57600080fd5b823567ffffffffffffffff8082111561033357600080fd5b61033f868387016102cd565b9350602085013591508082111561035557600080fd5b50610362858286016102cd565b9150509250929050565b60006020828403121561037e57600080fd5b5035919050565b60006020828403121561039757600080fd5b813567ffffffffffffffff8111156103ae57600080fd5b6103ba848285016102cd565b949350505050565b600060a082840312156102df57600080fd5b6000806000606084860312156103e957600080fd5b833567ffffffffffffffff81111561040057600080fd5b61040c868287016103c2565b9660208601359650604090950135949350505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561045b5761045b610422565b60405290565b60405160e0810167ffffffffffffffff8111828210171561045b5761045b610422565b604051601f8201601f1916810167ffffffffffffffff811182821017156104ad576104ad610422565b604052919050565b803567ffffffffffffffff811681146104cd57600080fd5b919050565b600082601f8301126104e357600080fd5b813567ffffffffffffffff8111156104fd576104fd610422565b610510601f8201601f1916602001610484565b81815284602083860101111561052557600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561055457600080fd5b61055c610438565b9050813560ff8116811461056f57600080fd5b8152602082013567ffffffffffffffff81111561058b57600080fd5b610597848285016104d2565b60208301525092915050565b6000604082840312156105b557600080fd5b6105bd610438565b9050813567ffffffffffffffff808211156105d757600080fd5b90830190604082860312156105eb57600080fd5b6105f3610438565b6105fc836104b5565b81526020808401358381111561061157600080fd5b80850194505086601f85011261062657600080fd5b83358381111561063857610638610422565b8060051b610647838201610484565b918252858101830191838101908a84111561066157600080fd5b968401965b8388101561069857873592506001600160a01b03831683146106885760008081fd5b8282529684019690840190610666565b85850152505050818552858101359350828411156106b557600080fd5b6106c187858801610542565b818601525050505092915050565b80356001600160e01b0319811681146104cd57600080fd5b803580151581146104cd57600080fd5b60006020828403121561070957600080fd5b813567ffffffffffffffff8082111561072157600080fd5b908301906040828603121561073557600080fd5b61073d610438565b82358281111561074c57600080fd5b830160e0818803121561075e57600080fd5b610766610461565b81358481111561077557600080fd5b610781898285016105a3565b82525060208201358481111561079657600080fd5b6107a2898285016105a3565b602083015250604082013560408201526107be606083016104b5565b60608201526107cf608083016106cf565b608082015260a0820135848111156107e657600080fd5b6107f2898285016104d2565b60a08301525060c082013560c08201528083525050610813602084016106e7565b602082015295945050505050565b60008060006040848603121561083657600080fd5b833567ffffffffffffffff8082111561084e57600080fd5b61085a878388016103c2565b9450602086013591508082111561087057600080fd5b818601915086601f83011261088457600080fd5b81358181111561089357600080fd5b8760208260051b85010111156108a857600080fd5b602083019450809350505050925092509256fea2646970667358221220e249c133163530ad39224ba4f7bd3a8d161b929e9f81d3c37520ca264ae80d0564736f6c63430008130033",
        "sourceMap": "409:2715:96:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:178;;;;;;;;;;-1:-1:-1;2610:178:96;;;;;:::i;:::-;-1:-1:-1;2772:5:96;:9;;-1:-1:-1;;2772:9:96;2780:1;2772:9;;;2610:178;;;1900:200;;;;;;:::i;:::-;-1:-1:-1;;2084:5:96;:9;;-1:-1:-1;;2084:9:96;2092:1;2084:9;;;1900:200;2449:155;;;;;;:::i;1333:132::-;;;;;;;;;;;;1449:5;:9;;-1:-1:-1;;1449:9:96;1457:1;1449:9;;;1333:132;961:199;;;;;;;;;;-1:-1:-1;961:199:96;;;;;:::i;:::-;;:::i;812:143::-;;1449:5;:9;;-1:-1:-1;;1449:9:96;1457:1;1449:9;;;1333:132;2106:157;;;;;;:::i;2794:328::-;;;;;;;;;;-1:-1:-1;2794:328:96;;;;;:::i;:::-;-1:-1:-1;;3106:5:96;:9;;-1:-1:-1;;3106:9:96;3114:1;3106:9;;;-1:-1:-1;2794:328:96;2269:174;;;;;;:::i;1166:161::-;;;;;;;;;;-1:-1:-1;1166:161:96;;;;;:::i;546:260::-;;;;;;:::i;:::-;-1:-1:-1;755:5:96;:9;;789:10;755:9;775:24;-1:-1:-1;;;;;;775:24:96;;;;763:1;775:24;;;546:260;1618:276;;;;;;;;;;-1:-1:-1;1618:276:96;;;;;:::i;961:199::-;1095:5;:9;;-1:-1:-1;;1095:9:96;1103:1;1095:9;;;;;1115:38;;-1:-1:-1;;;;;1095:9:96;1123:11;;;;1146:6;1115:30;:38::i;:::-;961:199;:::o;1530:331:26:-;1639:6;1615:21;:30;1611:109;;;1668:41;;-1:-1:-1;;;1668:41:26;;1703:4;1668:41;;;9290:51:98;9263:18;;1668:41:26;;;;;;;1611:109;1731:12;1749:9;-1:-1:-1;;;;;1749:14:26;1771:6;1749:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1730:52;;;1797:7;1792:63;;1827:17;;-1:-1:-1;;;1827:17:26;;;;;;;;;;;1792:63;1601:260;1530:331;;:::o;14:162:98:-;81:5;126:2;117:6;112:3;108:16;104:25;101:45;;;142:1;139;132:12;101:45;-1:-1:-1;164:6:98;14:162;-1:-1:-1;14:162:98:o;181:253::-;275:6;328:2;316:9;307:7;303:23;299:32;296:52;;;344:1;341;334:12;296:52;367:61;420:7;409:9;367:61;:::i;:::-;357:71;181:253;-1:-1:-1;;;181:253:98:o;439:631::-;567:6;575;628:2;616:9;607:7;603:23;599:32;596:52;;;644:1;641;634:12;596:52;684:9;671:23;713:18;754:2;746:6;743:14;740:34;;;770:1;767;760:12;740:34;793:74;859:7;850:6;839:9;835:22;793:74;:::i;:::-;783:84;;920:2;909:9;905:18;892:32;876:48;;949:2;939:8;936:16;933:36;;;965:1;962;955:12;933:36;;988:76;1056:7;1045:8;1034:9;1030:24;988:76;:::i;:::-;978:86;;;439:631;;;;;:::o;1075:180::-;1134:6;1187:2;1175:9;1166:7;1162:23;1158:32;1155:52;;;1203:1;1200;1193:12;1155:52;-1:-1:-1;1226:23:98;;1075:180;-1:-1:-1;1075:180:98:o;1445:367::-;1535:6;1588:2;1576:9;1567:7;1563:23;1559:32;1556:52;;;1604:1;1601;1594:12;1556:52;1644:9;1631:23;1677:18;1669:6;1666:30;1663:50;;;1709:1;1706;1699:12;1663:50;1732:74;1798:7;1789:6;1778:9;1774:22;1732:74;:::i;:::-;1722:84;1445:367;-1:-1:-1;;;;1445:367:98:o;1817:167::-;1888:5;1933:3;1924:6;1919:3;1915:16;1911:26;1908:46;;;1950:1;1947;1940:12;1989:515;2105:6;2113;2121;2174:2;2162:9;2153:7;2149:23;2145:32;2142:52;;;2190:1;2187;2180:12;2142:52;2230:9;2217:23;2263:18;2255:6;2252:30;2249:50;;;2295:1;2292;2285:12;2249:50;2318:78;2388:7;2379:6;2368:9;2364:22;2318:78;:::i;:::-;2308:88;2443:2;2428:18;;2415:32;;-1:-1:-1;2494:2:98;2479:18;;;2466:32;;1989:515;-1:-1:-1;;;;1989:515:98:o;2509:127::-;2570:10;2565:3;2561:20;2558:1;2551:31;2601:4;2598:1;2591:15;2625:4;2622:1;2615:15;2641:257;2713:4;2707:11;;;2745:17;;2792:18;2777:34;;2813:22;;;2774:62;2771:88;;;2839:18;;:::i;:::-;2875:4;2868:24;2641:257;:::o;2903:253::-;2975:2;2969:9;3017:4;3005:17;;3052:18;3037:34;;3073:22;;;3034:62;3031:88;;;3099:18;;:::i;3161:275::-;3232:2;3226:9;3297:2;3278:13;;-1:-1:-1;;3274:27:98;3262:40;;3332:18;3317:34;;3353:22;;;3314:62;3311:88;;;3379:18;;:::i;:::-;3415:2;3408:22;3161:275;;-1:-1:-1;3161:275:98:o;3441:171::-;3508:20;;3568:18;3557:30;;3547:41;;3537:69;;3602:1;3599;3592:12;3537:69;3441:171;;;:::o;3617:530::-;3659:5;3712:3;3705:4;3697:6;3693:17;3689:27;3679:55;;3730:1;3727;3720:12;3679:55;3766:6;3753:20;3792:18;3788:2;3785:26;3782:52;;;3814:18;;:::i;:::-;3858:55;3901:2;3882:13;;-1:-1:-1;;3878:27:98;3907:4;3874:38;3858:55;:::i;:::-;3938:2;3929:7;3922:19;3984:3;3977:4;3972:2;3964:6;3960:15;3956:26;3953:35;3950:55;;;4001:1;3998;3991:12;3950:55;4066:2;4059:4;4051:6;4047:17;4040:4;4031:7;4027:18;4014:55;4114:1;4089:16;;;4107:4;4085:27;4078:38;;;;4093:7;3617:530;-1:-1:-1;;;3617:530:98:o;4152:511::-;4209:5;4257:4;4245:9;4240:3;4236:19;4232:30;4229:50;;;4275:1;4272;4265:12;4229:50;4297:22;;:::i;:::-;4288:31;;4356:9;4343:23;4410:4;4401:7;4397:18;4388:7;4385:31;4375:59;;4430:1;4427;4420:12;4375:59;4443:22;;4516:2;4501:18;;4488:32;4543:18;4532:30;;4529:50;;;4575:1;4572;4565:12;4529:50;4611:45;4652:3;4643:6;4632:9;4628:22;4611:45;:::i;:::-;4606:2;4599:5;4595:14;4588:69;;4152:511;;;;:::o;4668:1657::-;4725:5;4773:4;4761:9;4756:3;4752:19;4748:30;4745:50;;;4791:1;4788;4781:12;4745:50;4813:22;;:::i;:::-;4804:31;;4871:9;4858:23;4900:18;4941:2;4933:6;4930:14;4927:34;;;4957:1;4954;4947:12;4927:34;4980:22;;;;5032:4;5018:12;;;5014:23;5011:43;;;5050:1;5047;5040:12;5011:43;5078:22;;:::i;:::-;5125:21;5143:2;5125:21;:::i;:::-;5116:7;5109:38;5166:2;5214;5210;5206:11;5193:25;5243:2;5233:8;5230:16;5227:36;;;5259:1;5256;5249:12;5227:36;5290:8;5286:2;5282:17;5272:27;;;5337:3;5330:4;5326:2;5322:13;5318:23;5308:51;;5355:1;5352;5345:12;5308:51;5391:2;5378:16;5413:2;5409;5406:10;5403:36;;;5419:18;;:::i;:::-;5465:2;5462:1;5458:10;5488:28;5512:2;5508;5504:11;5488:28;:::i;:::-;5550:15;;;5620:11;;;5616:20;;;5581:12;;;;5648:15;;;5645:35;;;5676:1;5673;5666:12;5645:35;5700:11;;;;5720:334;5736:6;5731:3;5728:15;5720:334;;;5805:17;;;-1:-1:-1;;;;;;5857:33:98;;5845:46;;5835:144;;5933:1;5962:2;5958;5951:14;5835:144;5992:20;;;5753:12;;;;6032;;;;5720:334;;;6070:16;;;6063:31;-1:-1:-1;;;6103:22:98;;;6163:18;;;6150:32;;-1:-1:-1;6194:16:98;;;6191:36;;;6223:1;6220;6213:12;6191:36;6259:59;6314:3;6303:8;6292:9;6288:24;6259:59;:::i;:::-;6254:2;6247:5;6243:14;6236:83;;;;;4668:1657;;;;:::o;6330:173::-;6397:20;;-1:-1:-1;;;;;;6446:32:98;;6436:43;;6426:71;;6493:1;6490;6483:12;6508:160;6573:20;;6629:13;;6622:21;6612:32;;6602:60;;6658:1;6655;6648:12;6673:1560;6759:6;6812:2;6800:9;6791:7;6787:23;6783:32;6780:52;;;6828:1;6825;6818:12;6780:52;6868:9;6855:23;6897:18;6938:2;6930:6;6927:14;6924:34;;;6954:1;6951;6944:12;6924:34;6977:22;;;;7033:4;7015:16;;;7011:27;7008:47;;;7051:1;7048;7041:12;7008:47;7077:22;;:::i;:::-;7137:2;7124:16;7165:2;7155:8;7152:16;7149:36;;;7181:1;7178;7171:12;7149:36;7204:17;;7255:4;7237:16;;;7233:27;7230:47;;;7273:1;7270;7263:12;7230:47;7301:22;;:::i;:::-;7361:2;7348:16;7389:2;7379:8;7376:16;7373:36;;;7405:1;7402;7395:12;7373:36;7434:56;7482:7;7471:8;7467:2;7463:17;7434:56;:::i;:::-;7425:7;7418:73;;7537:2;7533;7529:11;7516:25;7566:2;7556:8;7553:16;7550:36;;;7582:1;7579;7572:12;7550:36;7620:56;7668:7;7657:8;7653:2;7649:17;7620:56;:::i;:::-;7615:2;7606:7;7602:16;7595:82;;7734:4;7730:2;7726:13;7713:27;7706:4;7697:7;7693:18;7686:55;7775:30;7801:2;7797;7793:11;7775:30;:::i;:::-;7770:2;7761:7;7757:16;7750:56;7841:31;7867:3;7863:2;7859:12;7841:31;:::i;:::-;7835:3;7826:7;7822:17;7815:58;7919:3;7915:2;7911:12;7898:26;7949:2;7939:8;7936:16;7933:36;;;7965:1;7962;7955:12;7933:36;8004:44;8040:7;8029:8;8025:2;8021:17;8004:44;:::i;:::-;7998:3;7989:7;7985:17;7978:71;;8105:3;8101:2;8097:12;8084:26;8078:3;8069:7;8065:17;8058:53;8134:7;8127:5;8120:22;;;8174:28;8198:2;8194;8190:11;8174:28;:::i;:::-;8169:2;8158:14;;8151:52;8162:5;6673:1560;-1:-1:-1;;;;;6673:1560:98:o;8238:901::-;8401:6;8409;8417;8470:2;8458:9;8449:7;8445:23;8441:32;8438:52;;;8486:1;8483;8476:12;8438:52;8526:9;8513:23;8555:18;8596:2;8588:6;8585:14;8582:34;;;8612:1;8609;8602:12;8582:34;8635:78;8705:7;8696:6;8685:9;8681:22;8635:78;:::i;:::-;8625:88;;8766:2;8755:9;8751:18;8738:32;8722:48;;8795:2;8785:8;8782:16;8779:36;;;8811:1;8808;8801:12;8779:36;8849:8;8838:9;8834:24;8824:34;;8896:7;8889:4;8885:2;8881:13;8877:27;8867:55;;8918:1;8915;8908:12;8867:55;8958:2;8945:16;8984:2;8976:6;8973:14;8970:34;;;9000:1;8997;8990:12;8970:34;9053:7;9048:2;9038:6;9035:1;9031:14;9027:2;9023:23;9019:32;9016:45;9013:65;;;9074:1;9071;9064:12;9013:65;9105:2;9101;9097:11;9087:21;;9127:6;9117:16;;;;;8238:901;;;;;:::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "addStake()": "5a627dbc",
        "commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])": "f456b39e",
        "commitParentFinality((uint256,bytes32))": "11196974",
        "createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)": "a656ca5b",
        "fund((uint64,address[]),(uint8,bytes))": "18f44b70",
        "kill()": "41c0e1b5",
        "propagate(bytes32)": "25bf0db6",
        "register(uint256)": "f207564e",
        "release((uint8,bytes))": "6b2c1eef",
        "releaseRewardForRelayer(uint256)": "d8e25572",
        "releaseStake(uint256)": "45f54485",
        "sendCrossMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))": "c13175ef"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"crossMessagesHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"bottomUpCheckpoint\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes4\",\"name\":\"method\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct StorableMsg\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"}],\"internalType\":\"struct CrossMsg[]\",\"name\":\"messages\",\"type\":\"tuple[]\"}],\"name\":\"commitBottomUpCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ParentFinality\",\"name\":\"finality\",\"type\":\"tuple\"}],\"name\":\"commitParentFinality\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"crossMessagesHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"membershipRootHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"membershipWeight\",\"type\":\"uint256\"}],\"name\":\"createBottomUpCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"to\",\"type\":\"tuple\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgCid\",\"type\":\"bytes32\"}],\"name\":\"propagate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_genesisCircSupply\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"to\",\"type\":\"tuple\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseRewardForRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes4\",\"name\":\"method\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct StorableMsg\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"}],\"internalType\":\"struct CrossMsg\",\"name\":\"crossMsg\",\"type\":\"tuple\"}],\"name\":\"sendCrossMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake()\":{\"notice\":\"AddStake adds stake to the collateral of a subnet.\"},\"commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])\":{\"notice\":\"CommitChildCheck propagates the commitment of a checkpoint from a child subnet, process the cross-messages directed to the subnet.\"},\"commitParentFinality((uint256,bytes32))\":{\"notice\":\"commit the ipc parent finality into storage\"},\"createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)\":{\"notice\":\"creates a new bottom-up checkpoint\"},\"fund((uint64,address[]),(uint8,bytes))\":{\"notice\":\"Fund injects new funds from an account of the parent chain to a subnet. This functions receives a transaction with the FILs that want to be injected in the subnet. - Funds injected are frozen. - A new fund cross-message is created and stored to propagate it to the subnet. It will be picked up by miners to include it in the next possible block. - The cross-message nonce is updated\"},\"kill()\":{\"notice\":\"Kill propagates the kill signal from a subnet actor to unregister it from th hierarchy.\"},\"propagate(bytes32)\":{\"notice\":\"Propagates the stored postbox item for the given cid\"},\"release((uint8,bytes))\":{\"notice\":\"Release creates a new check message to release funds in parent chain This function burns the funds that will be released in the current subnet and propagates a new checkpoint message to the parent chain to signal the amount of funds that can be released for a specific address.\"},\"releaseRewardForRelayer(uint256)\":{\"notice\":\"Release reward for relayer\"},\"releaseStake(uint256)\":{\"notice\":\"Release stake recovers some collateral of the subnet\"},\"sendCrossMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))\":{\"notice\":\"SendCrossMessage sends an arbitrary cross-message to other subnet in the hierarchy. If the message includes any funds they need to be burnt (like in Release) before being propagated to the corresponding subnet. The circulating supply in each subnet needs to be updated as the message passes through them. Params expect a raw message without any subnet context (the IPC address is included in the message by the actor). Only actors are allowed to send arbitrary cross-messages as a side-effect of their execution. For plain token exchanges fund and release have to be used.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/subnetActorMock/DefaultGatewayMock.sol\":\"DefaultGatewayMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/fevmate/contracts/utils/FilAddress.sol\":{\"keccak256\":\"0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7\",\"dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5\",\"dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593\",\"dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT\"]},\"src/constants/Constants.sol\":{\"keccak256\":\"0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940\",\"dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx\"]},\"src/enums/ConsensusType.sol\":{\"keccak256\":\"0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0\",\"dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ\"]},\"src/enums/Status.sol\":{\"keccak256\":\"0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33\",\"dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R\"]},\"src/errors/IPCErrors.sol\":{\"keccak256\":\"0x89ee65643858f78c51c49457f6cd127c773f794bf1b70ea50bd5e59f1b48e467\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a4e9c19f69ab5bcd7ec8ac2b058a84bff7125ebc42eb195c7d8c7094c2049dec\",\"dweb:/ipfs/QmeN67eDEQefw5PS8iXk9TDzULVqK1QNA9ajzD3Z2jqxwK\"]},\"src/interfaces/IGateway.sol\":{\"keccak256\":\"0xb4209b44c3965fd233387ece78149461bd64a47788c3af24edb7c99ea1ef8868\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4db7a4573100063387e170c55a69772b20e403444e9d97b24cc220a71a52fbbb\",\"dweb:/ipfs/QmTYsSjmFsTwuNTXBByZKueJZLpe7RwNzLRWNPxXGA3YKB\"]},\"src/lib/AccountHelper.sol\":{\"keccak256\":\"0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc\",\"dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z\"]},\"src/lib/LibGatewayActorStorage.sol\":{\"keccak256\":\"0x4731b1de63c99bfccfa12c1c59481f27630994c8d04c0a555c6f6845f3873157\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://641337e8c2d3876ccefdb1f181c9cfeb9568f7c015f51da668d0c2dc582773d3\",\"dweb:/ipfs/QmNzgGXzXjULKJE6iYN6ioZLJvh3ykLdwt6gTjVp7gX9f6\"]},\"src/lib/LibStaking.sol\":{\"keccak256\":\"0xb6ca249f7087f420c81d6405b122d7c8386fe3815169c01d338435f534a941f2\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://57203af0442e93b342cbf6dc0cb72d7b25c57d2c520c49221268806ac1171dff\",\"dweb:/ipfs/QmaCcc95fKYZsKkghaNfNdC8U9x7SBWd8ob1BLL1PvYiUs\"]},\"src/lib/LibStakingChangeLog.sol\":{\"keccak256\":\"0x1ec44b7c417dae8bec87da6f1f48eb10a1eacdfb4935144dd9094dc1bbe9aa9b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d6fcbd14fe0743c0ea0a8a8d2ea851b4864559c3553773f07d6ae708bcc83318\",\"dweb:/ipfs/QmYb6v6U27FAY4ut6gCZy6oK1MjN165RTxUGhrY6zxtg93\"]},\"src/lib/LibSubnetActorStorage.sol\":{\"keccak256\":\"0xe11ae56d18ef43fd9ebdf9350977f9a26da4ee9a3288b46b04c5b973aa231f28\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f616b61fde1528a8666d09c962d7f23a82b200229691794933f39c4d3781fc1c\",\"dweb:/ipfs/QmXQsNGv6R34wAx1fRoyMiwdtGgQVn1qDXGCr7cED92vvJ\"]},\"src/lib/priority/LibMaxPQ.sol\":{\"keccak256\":\"0x57844d18d78e8e555b2de3581a5e2908403e75252018b9c85d0274799e12a131\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://9125638cad4d136be39501e18307484f7b072ab0a882dc83da0b3a3569337014\",\"dweb:/ipfs/QmZ7Ho1edVXaPn2EwZwvrrwyHfqvZL1WUbt6ionX5GNX7V\"]},\"src/lib/priority/LibMinPQ.sol\":{\"keccak256\":\"0x7ca7b9c2c57102005714da3bdb1684050afd3f3d1e90c9dd5929a005eb17efa3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e958a3990a39a77b71b84c241ac3342262349fa38fcbb68fb7f50ddab6d3ba97\",\"dweb:/ipfs/QmQggiqv5n3xPW2dChtqDw2yiRjPsukLWuM58jqcsVo9M4\"]},\"src/lib/priority/LibPQ.sol\":{\"keccak256\":\"0x4d4290087995d669e80f8fdd405bfaae545323393c0c54689b84965ffb87303e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://c21b563f6bf23afacb38fc97ab94d1afe12e4ad3dfde96d4484068bf26b13a2c\",\"dweb:/ipfs/Qmd5d3EnZwaSRnjG4ZFH2X8HKgymzd6vQgus8A6oEoh5pJ\"]},\"src/structs/Checkpoint.sol\":{\"keccak256\":\"0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a\",\"dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww\"]},\"src/structs/FvmAddress.sol\":{\"keccak256\":\"0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac\",\"dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu\"]},\"src/structs/Subnet.sol\":{\"keccak256\":\"0x1ddb626039baf4a4411f06b5340aaa80dcd65e9980da7673b73ab16633d871ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://af017eef4cb46262ac29b4cf47faa1fc5d2b61970ec7d6d021eae4cf45b5577b\",\"dweb:/ipfs/QmZJiA2t934fbe62513neQYzxSNswnCRTJybp7d6X2RyWR\"]},\"test/subnetActorMock/DefaultGatewayMock.sol\":{\"keccak256\":\"0x3d327f93c14e1abf05c6d54e40c1319c27d9f84fcdb92781b825367b4b30dd77\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://3f662f463c498ca3c52b7619951647f0925dc1382283d788484973e44a7dbb51\",\"dweb:/ipfs/QmXeDp5ujEtV1RYUNaQDtNkcPxi91z4JRP2sEspUkefhFv\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.19+commit.7dd6d404"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "AddressInsufficientBalance"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "FailedInnerCall"
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "addStake"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct BottomUpCheckpoint",
                            "name": "bottomUpCheckpoint",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct SubnetID",
                                    "name": "subnetID",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "uint64",
                                            "name": "root",
                                            "type": "uint64"
                                        },
                                        {
                                            "internalType": "address[]",
                                            "name": "route",
                                            "type": "address[]"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "blockHeight",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "blockHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "nextConfigurationNumber",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "crossMessagesHash",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "struct CrossMsg[]",
                            "name": "messages",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "struct StorableMsg",
                                    "name": "message",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IPCAddress",
                                            "name": "from",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "struct SubnetID",
                                                    "name": "subnetId",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint64",
                                                            "name": "root",
                                                            "type": "uint64"
                                                        },
                                                        {
                                                            "internalType": "address[]",
                                                            "name": "route",
                                                            "type": "address[]"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct FvmAddress",
                                                    "name": "rawAddress",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint8",
                                                            "name": "addrType",
                                                            "type": "uint8"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "payload",
                                                            "type": "bytes"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IPCAddress",
                                            "name": "to",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "struct SubnetID",
                                                    "name": "subnetId",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint64",
                                                            "name": "root",
                                                            "type": "uint64"
                                                        },
                                                        {
                                                            "internalType": "address[]",
                                                            "name": "route",
                                                            "type": "address[]"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct FvmAddress",
                                                    "name": "rawAddress",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint8",
                                                            "name": "addrType",
                                                            "type": "uint8"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "payload",
                                                            "type": "bytes"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "value",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint64",
                                            "name": "nonce",
                                            "type": "uint64"
                                        },
                                        {
                                            "internalType": "bytes4",
                                            "name": "method",
                                            "type": "bytes4"
                                        },
                                        {
                                            "internalType": "bytes",
                                            "name": "params",
                                            "type": "bytes"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "fee",
                                            "type": "uint256"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "bool",
                                    "name": "wrapped",
                                    "type": "bool"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "commitBottomUpCheckpoint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ParentFinality",
                            "name": "finality",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "height",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "blockHash",
                                    "type": "bytes32"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "commitParentFinality"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct BottomUpCheckpoint",
                            "name": "checkpoint",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct SubnetID",
                                    "name": "subnetID",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "uint64",
                                            "name": "root",
                                            "type": "uint64"
                                        },
                                        {
                                            "internalType": "address[]",
                                            "name": "route",
                                            "type": "address[]"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "blockHeight",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "blockHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "nextConfigurationNumber",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "crossMessagesHash",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes32",
                            "name": "membershipRootHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "membershipWeight",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "createBottomUpCheckpoint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct SubnetID",
                            "name": "subnetId",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint64",
                                    "name": "root",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "route",
                                    "type": "address[]"
                                }
                            ]
                        },
                        {
                            "internalType": "struct FvmAddress",
                            "name": "to",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint8",
                                    "name": "addrType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "payload",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "fund"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "kill"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "msgCid",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "propagate"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_genesisCircSupply",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "register"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct FvmAddress",
                            "name": "to",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint8",
                                    "name": "addrType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "payload",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "release"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "releaseRewardForRelayer"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "releaseStake"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct CrossMsg",
                            "name": "crossMsg",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct StorableMsg",
                                    "name": "message",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IPCAddress",
                                            "name": "from",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "struct SubnetID",
                                                    "name": "subnetId",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint64",
                                                            "name": "root",
                                                            "type": "uint64"
                                                        },
                                                        {
                                                            "internalType": "address[]",
                                                            "name": "route",
                                                            "type": "address[]"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct FvmAddress",
                                                    "name": "rawAddress",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint8",
                                                            "name": "addrType",
                                                            "type": "uint8"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "payload",
                                                            "type": "bytes"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IPCAddress",
                                            "name": "to",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "struct SubnetID",
                                                    "name": "subnetId",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint64",
                                                            "name": "root",
                                                            "type": "uint64"
                                                        },
                                                        {
                                                            "internalType": "address[]",
                                                            "name": "route",
                                                            "type": "address[]"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct FvmAddress",
                                                    "name": "rawAddress",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint8",
                                                            "name": "addrType",
                                                            "type": "uint8"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "payload",
                                                            "type": "bytes"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "value",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint64",
                                            "name": "nonce",
                                            "type": "uint64"
                                        },
                                        {
                                            "internalType": "bytes4",
                                            "name": "method",
                                            "type": "bytes4"
                                        },
                                        {
                                            "internalType": "bytes",
                                            "name": "params",
                                            "type": "bytes"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "fee",
                                            "type": "uint256"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "bool",
                                    "name": "wrapped",
                                    "type": "bool"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "sendCrossMessage"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {},
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "addStake()": {
                        "notice": "AddStake adds stake to the collateral of a subnet."
                    },
                    "commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])": {
                        "notice": "CommitChildCheck propagates the commitment of a checkpoint from a child subnet, process the cross-messages directed to the subnet."
                    },
                    "commitParentFinality((uint256,bytes32))": {
                        "notice": "commit the ipc parent finality into storage"
                    },
                    "createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)": {
                        "notice": "creates a new bottom-up checkpoint"
                    },
                    "fund((uint64,address[]),(uint8,bytes))": {
                        "notice": "Fund injects new funds from an account of the parent chain to a subnet. This functions receives a transaction with the FILs that want to be injected in the subnet. - Funds injected are frozen. - A new fund cross-message is created and stored to propagate it to the subnet. It will be picked up by miners to include it in the next possible block. - The cross-message nonce is updated"
                    },
                    "kill()": {
                        "notice": "Kill propagates the kill signal from a subnet actor to unregister it from th hierarchy."
                    },
                    "propagate(bytes32)": {
                        "notice": "Propagates the stored postbox item for the given cid"
                    },
                    "release((uint8,bytes))": {
                        "notice": "Release creates a new check message to release funds in parent chain This function burns the funds that will be released in the current subnet and propagates a new checkpoint message to the parent chain to signal the amount of funds that can be released for a specific address."
                    },
                    "releaseRewardForRelayer(uint256)": {
                        "notice": "Release reward for relayer"
                    },
                    "releaseStake(uint256)": {
                        "notice": "Release stake recovers some collateral of the subnet"
                    },
                    "sendCrossMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))": {
                        "notice": "SendCrossMessage sends an arbitrary cross-message to other subnet in the hierarchy. If the message includes any funds they need to be burnt (like in Release) before being propagated to the corresponding subnet. The circulating supply in each subnet needs to be updated as the message passes through them. Params expect a raw message without any subnet context (the IPC address is included in the message by the actor). Only actors are allowed to send arbitrary cross-messages as a side-effect of their execution. For plain token exchanges fund and release have to be used."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@openzeppelin/=node_modules/@openzeppelin/",
                "ds-test/=lib/forge-std/lib/ds-test/src/",
                "elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "fevmate/=lib/fevmate/contracts/",
                "forge-std/=lib/forge-std/src/",
                "hardhat-deploy/=node_modules/hardhat-deploy/",
                "hardhat/=node_modules/hardhat/",
                "murky/=lib/murky/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
                "openzeppelin/=lib/openzeppelin-contracts/contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "test/subnetActorMock/DefaultGatewayMock.sol": "DefaultGatewayMock"
            },
            "libraries": {}
        },
        "sources": {
            "lib/fevmate/contracts/utils/FilAddress.sol": {
                "keccak256": "0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31",
                "urls": [
                    "bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7",
                    "dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                "keccak256": "0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1",
                "urls": [
                    "bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5",
                    "dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
                "keccak256": "0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892",
                "urls": [
                    "bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593",
                    "dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT"
                ],
                "license": "MIT"
            },
            "src/constants/Constants.sol": {
                "keccak256": "0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546",
                "urls": [
                    "bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940",
                    "dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/enums/ConsensusType.sol": {
                "keccak256": "0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d",
                "urls": [
                    "bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0",
                    "dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/enums/Status.sol": {
                "keccak256": "0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c",
                "urls": [
                    "bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33",
                    "dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/errors/IPCErrors.sol": {
                "keccak256": "0x89ee65643858f78c51c49457f6cd127c773f794bf1b70ea50bd5e59f1b48e467",
                "urls": [
                    "bzz-raw://a4e9c19f69ab5bcd7ec8ac2b058a84bff7125ebc42eb195c7d8c7094c2049dec",
                    "dweb:/ipfs/QmeN67eDEQefw5PS8iXk9TDzULVqK1QNA9ajzD3Z2jqxwK"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/interfaces/IGateway.sol": {
                "keccak256": "0xb4209b44c3965fd233387ece78149461bd64a47788c3af24edb7c99ea1ef8868",
                "urls": [
                    "bzz-raw://4db7a4573100063387e170c55a69772b20e403444e9d97b24cc220a71a52fbbb",
                    "dweb:/ipfs/QmTYsSjmFsTwuNTXBByZKueJZLpe7RwNzLRWNPxXGA3YKB"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/AccountHelper.sol": {
                "keccak256": "0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5",
                "urls": [
                    "bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc",
                    "dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/LibGatewayActorStorage.sol": {
                "keccak256": "0x4731b1de63c99bfccfa12c1c59481f27630994c8d04c0a555c6f6845f3873157",
                "urls": [
                    "bzz-raw://641337e8c2d3876ccefdb1f181c9cfeb9568f7c015f51da668d0c2dc582773d3",
                    "dweb:/ipfs/QmNzgGXzXjULKJE6iYN6ioZLJvh3ykLdwt6gTjVp7gX9f6"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/LibStaking.sol": {
                "keccak256": "0xb6ca249f7087f420c81d6405b122d7c8386fe3815169c01d338435f534a941f2",
                "urls": [
                    "bzz-raw://57203af0442e93b342cbf6dc0cb72d7b25c57d2c520c49221268806ac1171dff",
                    "dweb:/ipfs/QmaCcc95fKYZsKkghaNfNdC8U9x7SBWd8ob1BLL1PvYiUs"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/LibStakingChangeLog.sol": {
                "keccak256": "0x1ec44b7c417dae8bec87da6f1f48eb10a1eacdfb4935144dd9094dc1bbe9aa9b",
                "urls": [
                    "bzz-raw://d6fcbd14fe0743c0ea0a8a8d2ea851b4864559c3553773f07d6ae708bcc83318",
                    "dweb:/ipfs/QmYb6v6U27FAY4ut6gCZy6oK1MjN165RTxUGhrY6zxtg93"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/LibSubnetActorStorage.sol": {
                "keccak256": "0xe11ae56d18ef43fd9ebdf9350977f9a26da4ee9a3288b46b04c5b973aa231f28",
                "urls": [
                    "bzz-raw://f616b61fde1528a8666d09c962d7f23a82b200229691794933f39c4d3781fc1c",
                    "dweb:/ipfs/QmXQsNGv6R34wAx1fRoyMiwdtGgQVn1qDXGCr7cED92vvJ"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/priority/LibMaxPQ.sol": {
                "keccak256": "0x57844d18d78e8e555b2de3581a5e2908403e75252018b9c85d0274799e12a131",
                "urls": [
                    "bzz-raw://9125638cad4d136be39501e18307484f7b072ab0a882dc83da0b3a3569337014",
                    "dweb:/ipfs/QmZ7Ho1edVXaPn2EwZwvrrwyHfqvZL1WUbt6ionX5GNX7V"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/priority/LibMinPQ.sol": {
                "keccak256": "0x7ca7b9c2c57102005714da3bdb1684050afd3f3d1e90c9dd5929a005eb17efa3",
                "urls": [
                    "bzz-raw://e958a3990a39a77b71b84c241ac3342262349fa38fcbb68fb7f50ddab6d3ba97",
                    "dweb:/ipfs/QmQggiqv5n3xPW2dChtqDw2yiRjPsukLWuM58jqcsVo9M4"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/priority/LibPQ.sol": {
                "keccak256": "0x4d4290087995d669e80f8fdd405bfaae545323393c0c54689b84965ffb87303e",
                "urls": [
                    "bzz-raw://c21b563f6bf23afacb38fc97ab94d1afe12e4ad3dfde96d4484068bf26b13a2c",
                    "dweb:/ipfs/Qmd5d3EnZwaSRnjG4ZFH2X8HKgymzd6vQgus8A6oEoh5pJ"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/structs/Checkpoint.sol": {
                "keccak256": "0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746",
                "urls": [
                    "bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a",
                    "dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/structs/FvmAddress.sol": {
                "keccak256": "0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069",
                "urls": [
                    "bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac",
                    "dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/structs/Subnet.sol": {
                "keccak256": "0x1ddb626039baf4a4411f06b5340aaa80dcd65e9980da7673b73ab16633d871ce",
                "urls": [
                    "bzz-raw://af017eef4cb46262ac29b4cf47faa1fc5d2b61970ec7d6d021eae4cf45b5577b",
                    "dweb:/ipfs/QmZJiA2t934fbe62513neQYzxSNswnCRTJybp7d6X2RyWR"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "test/subnetActorMock/DefaultGatewayMock.sol": {
                "keccak256": "0x3d327f93c14e1abf05c6d54e40c1319c27d9f84fcdb92781b825367b4b30dd77",
                "urls": [
                    "bzz-raw://3f662f463c498ca3c52b7619951647f0925dc1382283d788484973e44a7dbb51",
                    "dweb:/ipfs/QmXeDp5ujEtV1RYUNaQDtNkcPxi91z4JRP2sEspUkefhFv"
                ],
                "license": "MIT OR Apache-2.0"
            }
        },
        "version": 1
    },
    "ast": {
        "absolutePath": "test/subnetActorMock/DefaultGatewayMock.sol",
        "id": 74771,
        "exportedSymbols": {
            "Address": [32409],
            "BottomUpCheckpoint": [46891],
            "CrossMsg": [46913],
            "DefaultGatewayMock": [74770],
            "FvmAddress": [46937],
            "IGateway": [39597],
            "ParentFinality": [46874],
            "SubnetID": [46967]
        },
        "nodeType": "SourceUnit",
        "src": "46:3079:96",
        "nodes": [
            {
                "id": 74561,
                "nodeType": "PragmaDirective",
                "src": "46:23:96",
                "nodes": [],
                "literals": ["solidity", "0.8", ".19"]
            },
            {
                "id": 74563,
                "nodeType": "ImportDirective",
                "src": "71:59:96",
                "nodes": [],
                "absolutePath": "src/interfaces/IGateway.sol",
                "file": "../../src/interfaces/IGateway.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 74771,
                "sourceUnit": 39598,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 74562,
                            "name": "IGateway",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39597,
                            "src": "79:8:96",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 74567,
                "nodeType": "ImportDirective",
                "src": "131:94:96",
                "nodes": [],
                "absolutePath": "src/structs/Checkpoint.sol",
                "file": "../../src/structs/Checkpoint.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 74771,
                "sourceUnit": 46931,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 74564,
                            "name": "BottomUpCheckpoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46891,
                            "src": "139:18:96",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 74565,
                            "name": "CrossMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46913,
                            "src": "159:8:96",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 74566,
                            "name": "ParentFinality",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46874,
                            "src": "169:14:96",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 74569,
                "nodeType": "ImportDirective",
                "src": "226:54:96",
                "nodes": [],
                "absolutePath": "src/structs/Subnet.sol",
                "file": "../../src/structs/Subnet.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 74771,
                "sourceUnit": 47100,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 74568,
                            "name": "SubnetID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46967,
                            "src": "234:8:96",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 74571,
                "nodeType": "ImportDirective",
                "src": "281:60:96",
                "nodes": [],
                "absolutePath": "src/structs/FvmAddress.sol",
                "file": "../../src/structs/FvmAddress.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 74771,
                "sourceUnit": 46945,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 74570,
                            "name": "FvmAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46937,
                            "src": "289:10:96",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 74573,
                "nodeType": "ImportDirective",
                "src": "342:65:96",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
                "file": "openzeppelin-contracts/utils/Address.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 74771,
                "sourceUnit": 32410,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 74572,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32409,
                            "src": "350:7:96",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 74770,
                "nodeType": "ContractDefinition",
                "src": "409:2715:96",
                "nodes": [
                    {
                        "id": 74578,
                        "nodeType": "UsingForDirective",
                        "src": "455:34:96",
                        "nodes": [],
                        "global": false,
                        "libraryName": {
                            "id": 74576,
                            "name": "Address",
                            "nameLocations": ["461:7:96"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 32409,
                            "src": "461:7:96"
                        },
                        "typeName": {
                            "id": 74577,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "473:15:96",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                            }
                        }
                    },
                    {
                        "id": 74580,
                        "nodeType": "VariableDeclaration",
                        "src": "495:19:96",
                        "nodes": [],
                        "constant": false,
                        "mutability": "mutable",
                        "name": "dummy",
                        "nameLocation": "509:5:96",
                        "scope": 74770,
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                        },
                        "typeName": {
                            "id": 74579,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "495:5:96",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "id": 74582,
                        "nodeType": "VariableDeclaration",
                        "src": "520:19:96",
                        "nodes": [],
                        "constant": false,
                        "mutability": "mutable",
                        "name": "subnetActor",
                        "nameLocation": "528:11:96",
                        "scope": 74770,
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 74581,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "520:7:96",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "id": 74603,
                        "nodeType": "FunctionDefinition",
                        "src": "546:260:96",
                        "nodes": [],
                        "body": {
                            "id": 74602,
                            "nodeType": "Block",
                            "src": "609:197:96",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "expression": {
                                            "id": 74587,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "645:3:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 74589,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "649:5:96",
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "src": "645:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 74590,
                                    "nodeType": "ExpressionStatement",
                                    "src": "645:9:96"
                                },
                                {
                                    "expression": {
                                        "id": 74591,
                                        "name": "_genesisCircSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74584,
                                        "src": "691:18:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 74592,
                                    "nodeType": "ExpressionStatement",
                                    "src": "691:18:96"
                                },
                                {
                                    "expression": {
                                        "id": 74595,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 74593,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74580,
                                            "src": "755:5:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 74594,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "763:1:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "755:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 74596,
                                    "nodeType": "ExpressionStatement",
                                    "src": "755:9:96"
                                },
                                {
                                    "expression": {
                                        "id": 74600,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 74597,
                                            "name": "subnetActor",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74582,
                                            "src": "775:11:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 74598,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "789:3:96",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 74599,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "793:6:96",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "789:10:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "775:24:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 74601,
                                    "nodeType": "ExpressionStatement",
                                    "src": "775:24:96"
                                }
                            ]
                        },
                        "baseFunctions": [39517],
                        "functionSelector": "f207564e",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "register",
                        "nameLocation": "555:8:96",
                        "parameters": {
                            "id": 74585,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 74584,
                                    "mutability": "mutable",
                                    "name": "_genesisCircSupply",
                                    "nameLocation": "572:18:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74603,
                                    "src": "564:26:96",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 74583,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "564:7:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "563:28:96"
                        },
                        "returnParameters": {
                            "id": 74586,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "609:0:96"
                        },
                        "scope": 74770,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 74615,
                        "nodeType": "FunctionDefinition",
                        "src": "812:143:96",
                        "nodes": [],
                        "body": {
                            "id": 74614,
                            "nodeType": "Block",
                            "src": "849:106:96",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "expression": {
                                            "id": 74606,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "885:3:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 74608,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "889:5:96",
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "src": "885:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 74609,
                                    "nodeType": "ExpressionStatement",
                                    "src": "885:9:96"
                                },
                                {
                                    "expression": {
                                        "id": 74612,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 74610,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74580,
                                            "src": "939:5:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 74611,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "947:1:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "939:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 74613,
                                    "nodeType": "ExpressionStatement",
                                    "src": "939:9:96"
                                }
                            ]
                        },
                        "baseFunctions": [39521],
                        "functionSelector": "5a627dbc",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "addStake",
                        "nameLocation": "821:8:96",
                        "parameters": {
                            "id": 74604,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "829:2:96"
                        },
                        "returnParameters": {
                            "id": 74605,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "849:0:96"
                        },
                        "scope": 74770,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 74635,
                        "nodeType": "FunctionDefinition",
                        "src": "961:199:96",
                        "nodes": [],
                        "body": {
                            "id": 74634,
                            "nodeType": "Block",
                            "src": "1008:152:96",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 74620,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74617,
                                        "src": "1044:6:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 74621,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1044:6:96"
                                },
                                {
                                    "expression": {
                                        "id": 74624,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 74622,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74580,
                                            "src": "1095:5:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 74623,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1103:1:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "1095:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 74625,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1095:9:96"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 74631,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 74617,
                                                "src": "1146:6:96",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 74628,
                                                        "name": "subnetActor",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 74582,
                                                        "src": "1123:11:96",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 74627,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1115:8:96",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 74626,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1115:8:96",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 74629,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1115:20:96",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 74630,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1136:9:96",
                                            "memberName": "sendValue",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 32081,
                                            "src": "1115:30:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
                                                "typeString": "function (address payable,uint256)"
                                            }
                                        },
                                        "id": 74632,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1115:38:96",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 74633,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1115:38:96"
                                }
                            ]
                        },
                        "baseFunctions": [39527],
                        "functionSelector": "45f54485",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "releaseStake",
                        "nameLocation": "970:12:96",
                        "parameters": {
                            "id": 74618,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 74617,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "991:6:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74635,
                                    "src": "983:14:96",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 74616,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "983:7:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "982:16:96"
                        },
                        "returnParameters": {
                            "id": 74619,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1008:0:96"
                        },
                        "scope": 74770,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 74647,
                        "nodeType": "FunctionDefinition",
                        "src": "1166:161:96",
                        "nodes": [],
                        "body": {
                            "id": 74646,
                            "nodeType": "Block",
                            "src": "1224:103:96",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 74640,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74637,
                                        "src": "1260:6:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 74641,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1260:6:96"
                                },
                                {
                                    "expression": {
                                        "id": 74644,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 74642,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74580,
                                            "src": "1311:5:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 74643,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1319:1:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "1311:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 74645,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1311:9:96"
                                }
                            ]
                        },
                        "baseFunctions": [39533],
                        "functionSelector": "d8e25572",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "releaseRewardForRelayer",
                        "nameLocation": "1175:23:96",
                        "parameters": {
                            "id": 74638,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 74637,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "1207:6:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74647,
                                    "src": "1199:14:96",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 74636,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1199:7:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1198:16:96"
                        },
                        "returnParameters": {
                            "id": 74639,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1224:0:96"
                        },
                        "scope": 74770,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 74659,
                        "nodeType": "FunctionDefinition",
                        "src": "1333:132:96",
                        "nodes": [],
                        "body": {
                            "id": 74658,
                            "nodeType": "Block",
                            "src": "1358:107:96",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "expression": {
                                            "id": 74650,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "1394:3:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 74652,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1398:6:96",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "1394:10:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 74653,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1394:10:96"
                                },
                                {
                                    "expression": {
                                        "id": 74656,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 74654,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74580,
                                            "src": "1449:5:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 74655,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1457:1:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "1449:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 74657,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1449:9:96"
                                }
                            ]
                        },
                        "baseFunctions": [39537],
                        "functionSelector": "41c0e1b5",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "kill",
                        "nameLocation": "1342:4:96",
                        "parameters": {
                            "id": 74648,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1346:2:96"
                        },
                        "returnParameters": {
                            "id": 74649,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1358:0:96"
                        },
                        "scope": 74770,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 74679,
                        "nodeType": "FunctionDefinition",
                        "src": "1618:276:96",
                        "nodes": [],
                        "body": {
                            "id": 74678,
                            "nodeType": "Block",
                            "src": "1761:133:96",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 74670,
                                        "name": "bottomUpCheckpoint",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74663,
                                        "src": "1797:18:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BottomUpCheckpoint_$46891_calldata_ptr",
                                            "typeString": "struct BottomUpCheckpoint calldata"
                                        }
                                    },
                                    "id": 74671,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1797:18:96"
                                },
                                {
                                    "expression": {
                                        "id": 74672,
                                        "name": "messages",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74667,
                                        "src": "1825:8:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_CrossMsg_$46913_calldata_ptr_$dyn_calldata_ptr",
                                            "typeString": "struct CrossMsg calldata[] calldata"
                                        }
                                    },
                                    "id": 74673,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1825:8:96"
                                },
                                {
                                    "expression": {
                                        "id": 74676,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 74674,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74580,
                                            "src": "1878:5:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 74675,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1886:1:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "1878:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 74677,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1878:9:96"
                                }
                            ]
                        },
                        "baseFunctions": [39548],
                        "documentation": {
                            "id": 74660,
                            "nodeType": "StructuredDocumentation",
                            "src": "1471:142:96",
                            "text": "CommitChildCheck propagates the commitment of a checkpoint from a child subnet,\n process the cross-messages directed to the subnet."
                        },
                        "functionSelector": "f456b39e",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "commitBottomUpCheckpoint",
                        "nameLocation": "1627:24:96",
                        "parameters": {
                            "id": 74668,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 74663,
                                    "mutability": "mutable",
                                    "name": "bottomUpCheckpoint",
                                    "nameLocation": "1689:18:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74679,
                                    "src": "1661:46:96",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BottomUpCheckpoint_$46891_calldata_ptr",
                                        "typeString": "struct BottomUpCheckpoint"
                                    },
                                    "typeName": {
                                        "id": 74662,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 74661,
                                            "name": "BottomUpCheckpoint",
                                            "nameLocations": ["1661:18:96"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46891,
                                            "src": "1661:18:96"
                                        },
                                        "referencedDeclaration": 46891,
                                        "src": "1661:18:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BottomUpCheckpoint_$46891_storage_ptr",
                                            "typeString": "struct BottomUpCheckpoint"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 74667,
                                    "mutability": "mutable",
                                    "name": "messages",
                                    "nameLocation": "1737:8:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74679,
                                    "src": "1717:28:96",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_CrossMsg_$46913_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct CrossMsg[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 74665,
                                            "nodeType": "UserDefinedTypeName",
                                            "pathNode": {
                                                "id": 74664,
                                                "name": "CrossMsg",
                                                "nameLocations": ["1717:8:96"],
                                                "nodeType": "IdentifierPath",
                                                "referencedDeclaration": 46913,
                                                "src": "1717:8:96"
                                            },
                                            "referencedDeclaration": 46913,
                                            "src": "1717:8:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_CrossMsg_$46913_storage_ptr",
                                                "typeString": "struct CrossMsg"
                                            }
                                        },
                                        "id": 74666,
                                        "nodeType": "ArrayTypeName",
                                        "src": "1717:10:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_CrossMsg_$46913_storage_$dyn_storage_ptr",
                                            "typeString": "struct CrossMsg[]"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1651:100:96"
                        },
                        "returnParameters": {
                            "id": 74669,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1761:0:96"
                        },
                        "scope": 74770,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 74697,
                        "nodeType": "FunctionDefinition",
                        "src": "1900:200:96",
                        "nodes": [],
                        "body": {
                            "id": 74696,
                            "nodeType": "Block",
                            "src": "1983:117:96",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 74688,
                                        "name": "subnetId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74682,
                                        "src": "2019:8:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_SubnetID_$46967_calldata_ptr",
                                            "typeString": "struct SubnetID calldata"
                                        }
                                    },
                                    "id": 74689,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2019:8:96"
                                },
                                {
                                    "expression": {
                                        "id": 74690,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74685,
                                        "src": "2037:2:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FvmAddress_$46937_calldata_ptr",
                                            "typeString": "struct FvmAddress calldata"
                                        }
                                    },
                                    "id": 74691,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2037:2:96"
                                },
                                {
                                    "expression": {
                                        "id": 74694,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 74692,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74580,
                                            "src": "2084:5:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 74693,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2092:1:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2084:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 74695,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2084:9:96"
                                }
                            ]
                        },
                        "baseFunctions": [39558],
                        "functionSelector": "18f44b70",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "fund",
                        "nameLocation": "1909:4:96",
                        "parameters": {
                            "id": 74686,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 74682,
                                    "mutability": "mutable",
                                    "name": "subnetId",
                                    "nameLocation": "1932:8:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74697,
                                    "src": "1914:26:96",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SubnetID_$46967_calldata_ptr",
                                        "typeString": "struct SubnetID"
                                    },
                                    "typeName": {
                                        "id": 74681,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 74680,
                                            "name": "SubnetID",
                                            "nameLocations": ["1914:8:96"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46967,
                                            "src": "1914:8:96"
                                        },
                                        "referencedDeclaration": 46967,
                                        "src": "1914:8:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_SubnetID_$46967_storage_ptr",
                                            "typeString": "struct SubnetID"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 74685,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1962:2:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74697,
                                    "src": "1942:22:96",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FvmAddress_$46937_calldata_ptr",
                                        "typeString": "struct FvmAddress"
                                    },
                                    "typeName": {
                                        "id": 74684,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 74683,
                                            "name": "FvmAddress",
                                            "nameLocations": ["1942:10:96"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46937,
                                            "src": "1942:10:96"
                                        },
                                        "referencedDeclaration": 46937,
                                        "src": "1942:10:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FvmAddress_$46937_storage_ptr",
                                            "typeString": "struct FvmAddress"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1913:52:96"
                        },
                        "returnParameters": {
                            "id": 74687,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1983:0:96"
                        },
                        "scope": 74770,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 74710,
                        "nodeType": "FunctionDefinition",
                        "src": "2106:157:96",
                        "nodes": [],
                        "body": {
                            "id": 74709,
                            "nodeType": "Block",
                            "src": "2164:99:96",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 74703,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74700,
                                        "src": "2200:2:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FvmAddress_$46937_calldata_ptr",
                                            "typeString": "struct FvmAddress calldata"
                                        }
                                    },
                                    "id": 74704,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2200:2:96"
                                },
                                {
                                    "expression": {
                                        "id": 74707,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 74705,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74580,
                                            "src": "2247:5:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 74706,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2255:1:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2247:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 74708,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2247:9:96"
                                }
                            ]
                        },
                        "baseFunctions": [39565],
                        "functionSelector": "6b2c1eef",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "release",
                        "nameLocation": "2115:7:96",
                        "parameters": {
                            "id": 74701,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 74700,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "2143:2:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74710,
                                    "src": "2123:22:96",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FvmAddress_$46937_calldata_ptr",
                                        "typeString": "struct FvmAddress"
                                    },
                                    "typeName": {
                                        "id": 74699,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 74698,
                                            "name": "FvmAddress",
                                            "nameLocations": ["2123:10:96"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46937,
                                            "src": "2123:10:96"
                                        },
                                        "referencedDeclaration": 46937,
                                        "src": "2123:10:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FvmAddress_$46937_storage_ptr",
                                            "typeString": "struct FvmAddress"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2122:24:96"
                        },
                        "returnParameters": {
                            "id": 74702,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2164:0:96"
                        },
                        "scope": 74770,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 74723,
                        "nodeType": "FunctionDefinition",
                        "src": "2269:174:96",
                        "nodes": [],
                        "body": {
                            "id": 74722,
                            "nodeType": "Block",
                            "src": "2338:105:96",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 74716,
                                        "name": "crossMsg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74713,
                                        "src": "2374:8:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CrossMsg_$46913_memory_ptr",
                                            "typeString": "struct CrossMsg memory"
                                        }
                                    },
                                    "id": 74717,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2374:8:96"
                                },
                                {
                                    "expression": {
                                        "id": 74720,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 74718,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74580,
                                            "src": "2427:5:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 74719,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2435:1:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2427:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 74721,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2427:9:96"
                                }
                            ]
                        },
                        "baseFunctions": [39572],
                        "functionSelector": "c13175ef",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "sendCrossMessage",
                        "nameLocation": "2278:16:96",
                        "parameters": {
                            "id": 74714,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 74713,
                                    "mutability": "mutable",
                                    "name": "crossMsg",
                                    "nameLocation": "2311:8:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74723,
                                    "src": "2295:24:96",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CrossMsg_$46913_memory_ptr",
                                        "typeString": "struct CrossMsg"
                                    },
                                    "typeName": {
                                        "id": 74712,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 74711,
                                            "name": "CrossMsg",
                                            "nameLocations": ["2295:8:96"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46913,
                                            "src": "2295:8:96"
                                        },
                                        "referencedDeclaration": 46913,
                                        "src": "2295:8:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CrossMsg_$46913_storage_ptr",
                                            "typeString": "struct CrossMsg"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2294:26:96"
                        },
                        "returnParameters": {
                            "id": 74715,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2338:0:96"
                        },
                        "scope": 74770,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 74735,
                        "nodeType": "FunctionDefinition",
                        "src": "2449:155:96",
                        "nodes": [],
                        "body": {
                            "id": 74734,
                            "nodeType": "Block",
                            "src": "2501:103:96",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 74728,
                                        "name": "msgCid",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74725,
                                        "src": "2537:6:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "id": 74729,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2537:6:96"
                                },
                                {
                                    "expression": {
                                        "id": 74732,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 74730,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74580,
                                            "src": "2588:5:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 74731,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2596:1:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2588:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 74733,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2588:9:96"
                                }
                            ]
                        },
                        "baseFunctions": [39578],
                        "functionSelector": "25bf0db6",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "propagate",
                        "nameLocation": "2458:9:96",
                        "parameters": {
                            "id": 74726,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 74725,
                                    "mutability": "mutable",
                                    "name": "msgCid",
                                    "nameLocation": "2476:6:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74735,
                                    "src": "2468:14:96",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 74724,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2468:7:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2467:16:96"
                        },
                        "returnParameters": {
                            "id": 74727,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2501:0:96"
                        },
                        "scope": 74770,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 74748,
                        "nodeType": "FunctionDefinition",
                        "src": "2610:178:96",
                        "nodes": [],
                        "body": {
                            "id": 74747,
                            "nodeType": "Block",
                            "src": "2683:105:96",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 74741,
                                        "name": "finality",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74738,
                                        "src": "2719:8:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ParentFinality_$46874_calldata_ptr",
                                            "typeString": "struct ParentFinality calldata"
                                        }
                                    },
                                    "id": 74742,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2719:8:96"
                                },
                                {
                                    "expression": {
                                        "id": 74745,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 74743,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74580,
                                            "src": "2772:5:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 74744,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2780:1:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2772:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 74746,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2772:9:96"
                                }
                            ]
                        },
                        "baseFunctions": [39585],
                        "functionSelector": "11196974",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "commitParentFinality",
                        "nameLocation": "2619:20:96",
                        "parameters": {
                            "id": 74739,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 74738,
                                    "mutability": "mutable",
                                    "name": "finality",
                                    "nameLocation": "2664:8:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74748,
                                    "src": "2640:32:96",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ParentFinality_$46874_calldata_ptr",
                                        "typeString": "struct ParentFinality"
                                    },
                                    "typeName": {
                                        "id": 74737,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 74736,
                                            "name": "ParentFinality",
                                            "nameLocations": ["2640:14:96"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46874,
                                            "src": "2640:14:96"
                                        },
                                        "referencedDeclaration": 46874,
                                        "src": "2640:14:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ParentFinality_$46874_storage_ptr",
                                            "typeString": "struct ParentFinality"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2639:34:96"
                        },
                        "returnParameters": {
                            "id": 74740,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2683:0:96"
                        },
                        "scope": 74770,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 74769,
                        "nodeType": "FunctionDefinition",
                        "src": "2794:328:96",
                        "nodes": [],
                        "body": {
                            "id": 74768,
                            "nodeType": "Block",
                            "src": "2961:161:96",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 74758,
                                        "name": "checkpoint",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74751,
                                        "src": "2997:10:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BottomUpCheckpoint_$46891_calldata_ptr",
                                            "typeString": "struct BottomUpCheckpoint calldata"
                                        }
                                    },
                                    "id": 74759,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2997:10:96"
                                },
                                {
                                    "expression": {
                                        "id": 74760,
                                        "name": "membershipRootHash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74753,
                                        "src": "3017:18:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "id": 74761,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3017:18:96"
                                },
                                {
                                    "expression": {
                                        "id": 74762,
                                        "name": "membershipWeight",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 74755,
                                        "src": "3045:16:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 74763,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3045:16:96"
                                },
                                {
                                    "expression": {
                                        "id": 74766,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 74764,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 74580,
                                            "src": "3106:5:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 74765,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3114:1:96",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "3106:9:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 74767,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3106:9:96"
                                }
                            ]
                        },
                        "baseFunctions": [39596],
                        "functionSelector": "a656ca5b",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "createBottomUpCheckpoint",
                        "nameLocation": "2803:24:96",
                        "parameters": {
                            "id": 74756,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 74751,
                                    "mutability": "mutable",
                                    "name": "checkpoint",
                                    "nameLocation": "2865:10:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74769,
                                    "src": "2837:38:96",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BottomUpCheckpoint_$46891_calldata_ptr",
                                        "typeString": "struct BottomUpCheckpoint"
                                    },
                                    "typeName": {
                                        "id": 74750,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 74749,
                                            "name": "BottomUpCheckpoint",
                                            "nameLocations": ["2837:18:96"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46891,
                                            "src": "2837:18:96"
                                        },
                                        "referencedDeclaration": 46891,
                                        "src": "2837:18:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BottomUpCheckpoint_$46891_storage_ptr",
                                            "typeString": "struct BottomUpCheckpoint"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 74753,
                                    "mutability": "mutable",
                                    "name": "membershipRootHash",
                                    "nameLocation": "2893:18:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74769,
                                    "src": "2885:26:96",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 74752,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2885:7:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 74755,
                                    "mutability": "mutable",
                                    "name": "membershipWeight",
                                    "nameLocation": "2929:16:96",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 74769,
                                    "src": "2921:24:96",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 74754,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2921:7:96",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2827:124:96"
                        },
                        "returnParameters": {
                            "id": 74757,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2961:0:96"
                        },
                        "scope": 74770,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 74574,
                            "name": "IGateway",
                            "nameLocations": ["440:8:96"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39597,
                            "src": "440:8:96"
                        },
                        "id": 74575,
                        "nodeType": "InheritanceSpecifier",
                        "src": "440:8:96"
                    }
                ],
                "canonicalName": "DefaultGatewayMock",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "linearizedBaseContracts": [74770, 39597],
                "name": "DefaultGatewayMock",
                "nameLocation": "418:18:96",
                "scope": 74771,
                "usedErrors": [32032, 32040]
            }
        ],
        "license": "MIT OR Apache-2.0"
    },
    "id": 96
}
