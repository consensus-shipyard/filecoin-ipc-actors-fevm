{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "root",
                  "type": "uint64"
                },
                {
                  "internalType": "address[]",
                  "name": "route",
                  "type": "address[]"
                }
              ],
              "internalType": "struct SubnetID",
              "name": "subnetID",
              "type": "tuple"
            },
            {
              "internalType": "uint64",
              "name": "blockHeight",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nextConfigurationNumber",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "crossMessagesHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BottomUpCheckpoint",
          "name": "bottomUpCheckpoint",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint64",
                          "name": "root",
                          "type": "uint64"
                        },
                        {
                          "internalType": "address[]",
                          "name": "route",
                          "type": "address[]"
                        }
                      ],
                      "internalType": "struct SubnetID",
                      "name": "subnetId",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "addrType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes",
                          "name": "payload",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct FvmAddress",
                      "name": "rawAddress",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct IPCAddress",
                  "name": "from",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint64",
                          "name": "root",
                          "type": "uint64"
                        },
                        {
                          "internalType": "address[]",
                          "name": "route",
                          "type": "address[]"
                        }
                      ],
                      "internalType": "struct SubnetID",
                      "name": "subnetId",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "addrType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes",
                          "name": "payload",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct FvmAddress",
                      "name": "rawAddress",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct IPCAddress",
                  "name": "to",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "nonce",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes4",
                  "name": "method",
                  "type": "bytes4"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StorableMsg",
              "name": "message",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "wrapped",
              "type": "bool"
            }
          ],
          "internalType": "struct CrossMsg[]",
          "name": "messages",
          "type": "tuple[]"
        }
      ],
      "name": "commitBottomUpCheckpoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "height",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ParentFinality",
          "name": "finality",
          "type": "tuple"
        }
      ],
      "name": "commitParentFinality",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "root",
                  "type": "uint64"
                },
                {
                  "internalType": "address[]",
                  "name": "route",
                  "type": "address[]"
                }
              ],
              "internalType": "struct SubnetID",
              "name": "subnetID",
              "type": "tuple"
            },
            {
              "internalType": "uint64",
              "name": "blockHeight",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nextConfigurationNumber",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "crossMessagesHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BottomUpCheckpoint",
          "name": "checkpoint",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "membershipRootHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "membershipWeight",
          "type": "uint256"
        }
      ],
      "name": "createBottomUpCheckpoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "root",
              "type": "uint64"
            },
            {
              "internalType": "address[]",
              "name": "route",
              "type": "address[]"
            }
          ],
          "internalType": "struct SubnetID",
          "name": "subnetId",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "addrType",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "internalType": "struct FvmAddress",
          "name": "to",
          "type": "tuple"
        }
      ],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "msgCid",
          "type": "bytes32"
        }
      ],
      "name": "propagate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_genesisCircSupply",
          "type": "uint256"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "addrType",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "internalType": "struct FvmAddress",
          "name": "to",
          "type": "tuple"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "releaseRewardForRelayer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "releaseStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint64",
                          "name": "root",
                          "type": "uint64"
                        },
                        {
                          "internalType": "address[]",
                          "name": "route",
                          "type": "address[]"
                        }
                      ],
                      "internalType": "struct SubnetID",
                      "name": "subnetId",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "addrType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes",
                          "name": "payload",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct FvmAddress",
                      "name": "rawAddress",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct IPCAddress",
                  "name": "from",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint64",
                          "name": "root",
                          "type": "uint64"
                        },
                        {
                          "internalType": "address[]",
                          "name": "route",
                          "type": "address[]"
                        }
                      ],
                      "internalType": "struct SubnetID",
                      "name": "subnetId",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "addrType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bytes",
                          "name": "payload",
                          "type": "bytes"
                        }
                      ],
                      "internalType": "struct FvmAddress",
                      "name": "rawAddress",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct IPCAddress",
                  "name": "to",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "nonce",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes4",
                  "name": "method",
                  "type": "bytes4"
                },
                {
                  "internalType": "bytes",
                  "name": "params",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StorableMsg",
              "name": "message",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "wrapped",
              "type": "bool"
            }
          ],
          "internalType": "struct CrossMsg",
          "name": "crossMsg",
          "type": "tuple"
        }
      ],
      "name": "sendCrossMessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608080604052346100165761067d908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163111969741461044957816318f44b70146103fd57816325bf0db6146103e257816341c0e1b5146103c357816345f544851461032f575080635a627dbc146103155780636b2c1eef146102e0578063a656ca5b1461029d578063c13175ef14610172578063d8e2557214610152578063f207564e146101225763f456b39e146100a757600080fd5b3461011657600319913683011261011657803567ffffffffffffffff9283821161011e5760a09136030112610116576024359082821161011a573660238301121561011a5781013591821161011657602490369260051b01011161011357805460ff1916600117815580f35b80fd5b8280fd5b8380fd5b8480fd5b8360203660031901126101135780546001600160a81b0319163360081b610100600160a81b031617600117815580f35b833461011357602036600319011261011357805460ff1916600117815580f35b50906003199060203683011261011a5782359167ffffffffffffffff918284116102995780828536030112610299576101a9610469565b508385013583811161027e5760e09085019283360301126102995780519060e082018281108582111761028657815285830135848111610282576101f290873691860101610538565b825260248301358481116102825761020f90873691860101610538565b6020830152604483013590820152610229606483016104c5565b60608201526084820135906001600160e01b03198216820361027e576080015260a481013591821161011e5760249361026592369201016104fb565b5001358015150361011357805460ff1916600117815580f35b8680fd5b8780fd5b634e487b7160e01b885260418752602488fd5b8580fd5b8382346102dc576003199060603683011261011657359067ffffffffffffffff82116101165760a0913603011261011357805460ff1916600117815580f35b5080fd5b506003199060203683011261011a573567ffffffffffffffff811161011a573603011261011357805460ff1916600117815580f35b838060031936011261011357805460ff1916600117815580f35b849391503461011a57602036600319011261011a57835460ff19166001178085558335914783116103af5750849182918291829160081c6001600160a01b03165af13d156103aa573d610389610384826104df565b61049f565b9081528460203d92013e5b1561039d578280f35b51630a12f52160e11b8152fd5b610394565b63cd78605960e01b81523085820152602490fd5b8434610113578060031936011261011357805460ff1916600117815580f35b84602036600319011261011357805460ff1916600117815580f35b505060031990828236011261011a573567ffffffffffffffff9081811161011e578284913603011261011a5760243590811161011a573603011261011357805460ff1916600117815580f35b505050346102dc5736600319011261011357805460ff1916600117815580f35b604051906040820182811067ffffffffffffffff82111761048957604052565b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff81118382101761048957604052565b359067ffffffffffffffff821682036104da57565b600080fd5b67ffffffffffffffff811161048957601f01601f191660200190565b81601f820112156104da57803590610515610384836104df565b92828452602083830101116104da57816000926020809301838601378301015290565b91906040838203126104da5761054c610469565b9267ffffffffffffffff9181358381116104da578201916040838303126104da57610575610469565b61057e846104c5565b815260209384810135908682116104da570183601f820112156104da57803590868211610489578160051b86806105b681840161049f565b809581520191830101918683116104da578701905b8282106106285750505084820152865282810135908482116104da5701906040828203126104da576105fb610469565b93823560ff811681036104da578552838301359081116104da5761061f92016104fb565b81830152830152565b81356001600160a01b03811681036104da5781529087019087016105cb56fea264697066735822122095aaaffacc9ebb649098a8d26c214aae1733e02900e132a1b7910f87efb0f45864736f6c63430008130033",
    "sourceMap": "409:2707:81:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604081815260048036101561001557600080fd5b600092833560e01c908163111969741461044957816318f44b70146103fd57816325bf0db6146103e257816341c0e1b5146103c357816345f544851461032f575080635a627dbc146103155780636b2c1eef146102e0578063a656ca5b1461029d578063c13175ef14610172578063d8e2557214610152578063f207564e146101225763f456b39e146100a757600080fd5b3461011657600319913683011261011657803567ffffffffffffffff9283821161011e5760a09136030112610116576024359082821161011a573660238301121561011a5781013591821161011657602490369260051b01011161011357805460ff1916600117815580f35b80fd5b8280fd5b8380fd5b8480fd5b8360203660031901126101135780546001600160a81b0319163360081b610100600160a81b031617600117815580f35b833461011357602036600319011261011357805460ff1916600117815580f35b50906003199060203683011261011a5782359167ffffffffffffffff918284116102995780828536030112610299576101a9610469565b508385013583811161027e5760e09085019283360301126102995780519060e082018281108582111761028657815285830135848111610282576101f290873691860101610538565b825260248301358481116102825761020f90873691860101610538565b6020830152604483013590820152610229606483016104c5565b60608201526084820135906001600160e01b03198216820361027e576080015260a481013591821161011e5760249361026592369201016104fb565b5001358015150361011357805460ff1916600117815580f35b8680fd5b8780fd5b634e487b7160e01b885260418752602488fd5b8580fd5b8382346102dc576003199060603683011261011657359067ffffffffffffffff82116101165760a0913603011261011357805460ff1916600117815580f35b5080fd5b506003199060203683011261011a573567ffffffffffffffff811161011a573603011261011357805460ff1916600117815580f35b838060031936011261011357805460ff1916600117815580f35b849391503461011a57602036600319011261011a57835460ff19166001178085558335914783116103af5750849182918291829160081c6001600160a01b03165af13d156103aa573d610389610384826104df565b61049f565b9081528460203d92013e5b1561039d578280f35b51630a12f52160e11b8152fd5b610394565b63cd78605960e01b81523085820152602490fd5b8434610113578060031936011261011357805460ff1916600117815580f35b84602036600319011261011357805460ff1916600117815580f35b505060031990828236011261011a573567ffffffffffffffff9081811161011e578284913603011261011a5760243590811161011a573603011261011357805460ff1916600117815580f35b505050346102dc5736600319011261011357805460ff1916600117815580f35b604051906040820182811067ffffffffffffffff82111761048957604052565b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff81118382101761048957604052565b359067ffffffffffffffff821682036104da57565b600080fd5b67ffffffffffffffff811161048957601f01601f191660200190565b81601f820112156104da57803590610515610384836104df565b92828452602083830101116104da57816000926020809301838601378301015290565b91906040838203126104da5761054c610469565b9267ffffffffffffffff9181358381116104da578201916040838303126104da57610575610469565b61057e846104c5565b815260209384810135908682116104da570183601f820112156104da57803590868211610489578160051b86806105b681840161049f565b809581520191830101918683116104da578701905b8282106106285750505084820152865282810135908482116104da5701906040828203126104da576105fb610469565b93823560ff811681036104da578552838301359081116104da5761061f92016104fb565b81830152830152565b81356001600160a01b03811681036104da5781529087019087016105cb56fea264697066735822122095aaaffacc9ebb649098a8d26c214aae1733e02900e132a1b7910f87efb0f45864736f6c63430008130033",
    "sourceMap": "409:2707:81:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:81;947:1;409:2707;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:81;;;;;;-1:-1:-1;;;;;;409:2707:81;789:10;409:2707;;-1:-1:-1;;;;;409:2707:81;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:81;;;;;;-1:-1:-1;;409:2707:81;947:1;409:2707;;;;;;-1:-1:-1;409:2707:81;-1:-1:-1;;409:2707:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;;409:2707:81;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;409:2707:81;947:1;409:2707;;;;;;;;;;;;;;-1:-1:-1;;;409:2707:81;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:81;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:81;947:1;409:2707;;;;;;;;;;-1:-1:-1;;;409:2707:81;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:81;947:1;409:2707;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:81;947:1;409:2707;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:81;;;;;;-1:-1:-1;;409:2707:81;;;;;;;;;1615:21:27;:30;-1:-1:-1;1611:109:27;;-1:-1:-1;409:2707:81;;;;;;;;;;-1:-1:-1;;;;;409:2707:81;1749:33:27;;409:2707:81;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;1796:8:27;1792:63;;409:2707:81;;;1792:63:27;409:2707:81;-1:-1:-1;;;1827:17:27;;;409:2707:81;;;1611:109:27;-1:-1:-1;;;1668:41:27;;1623:4;1668:41;;;409:2707:81;;;1668:41:27;409:2707:81;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:81;947:1;409:2707;;;;;;;;;-1:-1:-1;;409:2707:81;;;;;;-1:-1:-1;;409:2707:81;947:1;409:2707;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:81;947:1;409:2707;;;;;;;;;;;;;-1:-1:-1;;409:2707:81;;;;;;-1:-1:-1;;409:2707:81;947:1;409:2707;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:81;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;409:2707:81;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;409:2707:81;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;409:2707:81;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addStake()": "5a627dbc",
    "commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])": "f456b39e",
    "commitParentFinality((uint256,bytes32))": "11196974",
    "createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)": "a656ca5b",
    "fund((uint64,address[]),(uint8,bytes))": "18f44b70",
    "kill()": "41c0e1b5",
    "propagate(bytes32)": "25bf0db6",
    "register(uint256)": "f207564e",
    "release((uint8,bytes))": "6b2c1eef",
    "releaseRewardForRelayer(uint256)": "d8e25572",
    "releaseStake(uint256)": "45f54485",
    "sendCrossMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))": "c13175ef"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"crossMessagesHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"bottomUpCheckpoint\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes4\",\"name\":\"method\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct StorableMsg\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"}],\"internalType\":\"struct CrossMsg[]\",\"name\":\"messages\",\"type\":\"tuple[]\"}],\"name\":\"commitBottomUpCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ParentFinality\",\"name\":\"finality\",\"type\":\"tuple\"}],\"name\":\"commitParentFinality\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"crossMessagesHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"membershipRootHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"membershipWeight\",\"type\":\"uint256\"}],\"name\":\"createBottomUpCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"to\",\"type\":\"tuple\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgCid\",\"type\":\"bytes32\"}],\"name\":\"propagate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_genesisCircSupply\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"to\",\"type\":\"tuple\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseRewardForRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes4\",\"name\":\"method\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct StorableMsg\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"}],\"internalType\":\"struct CrossMsg\",\"name\":\"crossMsg\",\"type\":\"tuple\"}],\"name\":\"sendCrossMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake()\":{\"notice\":\"AddStake adds stake to the collateral of a subnet.\"},\"commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])\":{\"notice\":\"CommitChildCheck propagates the commitment of a checkpoint from a child subnet, process the cross-messages directed to the subnet.\"},\"commitParentFinality((uint256,bytes32))\":{\"notice\":\"commit the ipc parent finality into storage\"},\"createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)\":{\"notice\":\"creates a new bottom-up checkpoint\"},\"fund((uint64,address[]),(uint8,bytes))\":{\"notice\":\"Fund injects new funds from an account of the parent chain to a subnet. This functions receives a transaction with the FILs that want to be injected in the subnet. - Funds injected are frozen. - A new fund cross-message is created and stored to propagate it to the subnet. It will be picked up by miners to include it in the next possible block. - The cross-message nonce is updated\"},\"kill()\":{\"notice\":\"Kill propagates the kill signal from a subnet actor to unregister it from th hierarchy.\"},\"propagate(bytes32)\":{\"notice\":\"Propagates the stored postbox item for the given cid\"},\"release((uint8,bytes))\":{\"notice\":\"Release creates a new check message to release funds in parent chain This function burns the funds that will be released in the current subnet and propagates a new checkpoint message to the parent chain to signal the amount of funds that can be released for a specific address.\"},\"releaseRewardForRelayer(uint256)\":{\"notice\":\"Release reward for relayer\"},\"releaseStake(uint256)\":{\"notice\":\"Release stake recovers some collateral of the subnet\"},\"sendCrossMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))\":{\"notice\":\"SendCrossMessage sends an arbitrary cross-message to other subnet in the hierarchy. If the message includes any funds they need to be burnt (like in Release) before being propagated to the corresponding subnet. The circulating supply in each subnet needs to be updated as the message passes through them. Params expect a raw message without any subnet context (the IPC address is included in the message by the actor). Only actors are allowed to send arbitrary cross-messages as a side-effect of their execution. For plain token exchanges fund and release have to be used.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/subnetActorMock/DefaultGatewayMock.sol\":\"DefaultGatewayMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/fevmate/contracts/utils/FilAddress.sol\":{\"keccak256\":\"0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7\",\"dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5\",\"dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593\",\"dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT\"]},\"src/constants/Constants.sol\":{\"keccak256\":\"0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940\",\"dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx\"]},\"src/enums/ConsensusType.sol\":{\"keccak256\":\"0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0\",\"dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ\"]},\"src/enums/Status.sol\":{\"keccak256\":\"0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33\",\"dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R\"]},\"src/errors/IPCErrors.sol\":{\"keccak256\":\"0x3c5eef277d0386c1edbb7f55f454c81f23b3a86c0c113c1ce474da04348575de\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5bddc2487c518086fde2542564cf0eda4bfdd5cc4c7a2b892474b85cc48b9d4b\",\"dweb:/ipfs/QmZz3F1FU4Efq7s4TSdGEGimhKrvVRi8ngPmUdvEq4AL8r\"]},\"src/interfaces/IGateway.sol\":{\"keccak256\":\"0xb4209b44c3965fd233387ece78149461bd64a47788c3af24edb7c99ea1ef8868\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4db7a4573100063387e170c55a69772b20e403444e9d97b24cc220a71a52fbbb\",\"dweb:/ipfs/QmTYsSjmFsTwuNTXBByZKueJZLpe7RwNzLRWNPxXGA3YKB\"]},\"src/lib/AccountHelper.sol\":{\"keccak256\":\"0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc\",\"dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z\"]},\"src/lib/LibGatewayActorStorage.sol\":{\"keccak256\":\"0x88f2124aa3843fefae87d50af505872389399fd75223f14bf1f5d6350cf25af7\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://228a4dfe0514a271f08967cdeb09435bcce23becc3e195526e8cc51291334f31\",\"dweb:/ipfs/QmQX7KGm38gjfH2tP5gGAYQFT1RpMUpnMA47y3WaXvzMLq\"]},\"src/lib/LibStaking.sol\":{\"keccak256\":\"0x3ad98b426ca82cc98fd795a166c4a599c71e9f400e3b23bda58666e2febdf3b2\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://1e501014ed974118161282e81821aa05810da989a3b2091624e73327d45cab67\",\"dweb:/ipfs/QmSi2Ed42uhNoxuvdyigyhNpujEkrzc9Goe4gTbhgVuE3o\"]},\"src/lib/LibStakingChangeLog.sol\":{\"keccak256\":\"0x1ec44b7c417dae8bec87da6f1f48eb10a1eacdfb4935144dd9094dc1bbe9aa9b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d6fcbd14fe0743c0ea0a8a8d2ea851b4864559c3553773f07d6ae708bcc83318\",\"dweb:/ipfs/QmYb6v6U27FAY4ut6gCZy6oK1MjN165RTxUGhrY6zxtg93\"]},\"src/lib/LibSubnetActorStorage.sol\":{\"keccak256\":\"0xe11ae56d18ef43fd9ebdf9350977f9a26da4ee9a3288b46b04c5b973aa231f28\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f616b61fde1528a8666d09c962d7f23a82b200229691794933f39c4d3781fc1c\",\"dweb:/ipfs/QmXQsNGv6R34wAx1fRoyMiwdtGgQVn1qDXGCr7cED92vvJ\"]},\"src/lib/priority/LibMaxPQ.sol\":{\"keccak256\":\"0xf98fae415e764e627134ae440dea84d6879eaaa6950868cb56382324f84ae8db\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f290b5d20ac65c22eddbadeae1b49bbe78cb9e8e0cd187c2b93f98d13f9300a2\",\"dweb:/ipfs/QmXShiVpDzD8CLn8MeWSa4fQSeiTzyBHSA1VNZtLhJgTgW\"]},\"src/lib/priority/LibMinPQ.sol\":{\"keccak256\":\"0xc8c27239c0e82b489d9cb61f64be28d4fde6af8d6c8b2d27180ad9c42d602110\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://ed53f96d383f74c06a118ad3c8758df07b91f48dcd81769dac637d2289644796\",\"dweb:/ipfs/Qmaf4HdjTnuQZ44PRmqmWXCF3h616rhNA7uKEksPPtmxXK\"]},\"src/lib/priority/LibPQ.sol\":{\"keccak256\":\"0x4d4290087995d669e80f8fdd405bfaae545323393c0c54689b84965ffb87303e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://c21b563f6bf23afacb38fc97ab94d1afe12e4ad3dfde96d4484068bf26b13a2c\",\"dweb:/ipfs/Qmd5d3EnZwaSRnjG4ZFH2X8HKgymzd6vQgus8A6oEoh5pJ\"]},\"src/structs/Checkpoint.sol\":{\"keccak256\":\"0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a\",\"dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww\"]},\"src/structs/FvmAddress.sol\":{\"keccak256\":\"0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac\",\"dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu\"]},\"src/structs/Subnet.sol\":{\"keccak256\":\"0x1ddb626039baf4a4411f06b5340aaa80dcd65e9980da7673b73ab16633d871ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://af017eef4cb46262ac29b4cf47faa1fc5d2b61970ec7d6d021eae4cf45b5577b\",\"dweb:/ipfs/QmZJiA2t934fbe62513neQYzxSNswnCRTJybp7d6X2RyWR\"]},\"test/subnetActorMock/DefaultGatewayMock.sol\":{\"keccak256\":\"0x5b7bd85d2619091c3eb5fc743569fe4bd9b2449d6482fe21dde477832bad9b8d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://59aeb802eff48d8fdf083c0b1df58c44cbddf5d2ba2277001c70ad391c2d015f\",\"dweb:/ipfs/Qme1Bzsi79CUVAPYXKRhCB1XFFRmeNxhud8mPspRWUZMxV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct BottomUpCheckpoint",
              "name": "bottomUpCheckpoint",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SubnetID",
                  "name": "subnetID",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "root",
                      "type": "uint64"
                    },
                    {
                      "internalType": "address[]",
                      "name": "route",
                      "type": "address[]"
                    }
                  ]
                },
                {
                  "internalType": "uint64",
                  "name": "blockHeight",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "blockHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "nextConfigurationNumber",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "crossMessagesHash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "struct CrossMsg[]",
              "name": "messages",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct StorableMsg",
                  "name": "message",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct IPCAddress",
                      "name": "from",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "struct SubnetID",
                          "name": "subnetId",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint64",
                              "name": "root",
                              "type": "uint64"
                            },
                            {
                              "internalType": "address[]",
                              "name": "route",
                              "type": "address[]"
                            }
                          ]
                        },
                        {
                          "internalType": "struct FvmAddress",
                          "name": "rawAddress",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint8",
                              "name": "addrType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "bytes",
                              "name": "payload",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct IPCAddress",
                      "name": "to",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "struct SubnetID",
                          "name": "subnetId",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint64",
                              "name": "root",
                              "type": "uint64"
                            },
                            {
                              "internalType": "address[]",
                              "name": "route",
                              "type": "address[]"
                            }
                          ]
                        },
                        {
                          "internalType": "struct FvmAddress",
                          "name": "rawAddress",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint8",
                              "name": "addrType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "bytes",
                              "name": "payload",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint64",
                      "name": "nonce",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes4",
                      "name": "method",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "wrapped",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitBottomUpCheckpoint"
        },
        {
          "inputs": [
            {
              "internalType": "struct ParentFinality",
              "name": "finality",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "height",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "blockHash",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitParentFinality"
        },
        {
          "inputs": [
            {
              "internalType": "struct BottomUpCheckpoint",
              "name": "checkpoint",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SubnetID",
                  "name": "subnetID",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "root",
                      "type": "uint64"
                    },
                    {
                      "internalType": "address[]",
                      "name": "route",
                      "type": "address[]"
                    }
                  ]
                },
                {
                  "internalType": "uint64",
                  "name": "blockHeight",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "blockHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "nextConfigurationNumber",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "crossMessagesHash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "membershipRootHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "membershipWeight",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createBottomUpCheckpoint"
        },
        {
          "inputs": [
            {
              "internalType": "struct SubnetID",
              "name": "subnetId",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "root",
                  "type": "uint64"
                },
                {
                  "internalType": "address[]",
                  "name": "route",
                  "type": "address[]"
                }
              ]
            },
            {
              "internalType": "struct FvmAddress",
              "name": "to",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "addrType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "payload",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "fund"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "kill"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgCid",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "propagate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_genesisCircSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "register"
        },
        {
          "inputs": [
            {
              "internalType": "struct FvmAddress",
              "name": "to",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "addrType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "payload",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "release"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "releaseRewardForRelayer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "releaseStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct CrossMsg",
              "name": "crossMsg",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct StorableMsg",
                  "name": "message",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct IPCAddress",
                      "name": "from",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "struct SubnetID",
                          "name": "subnetId",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint64",
                              "name": "root",
                              "type": "uint64"
                            },
                            {
                              "internalType": "address[]",
                              "name": "route",
                              "type": "address[]"
                            }
                          ]
                        },
                        {
                          "internalType": "struct FvmAddress",
                          "name": "rawAddress",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint8",
                              "name": "addrType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "bytes",
                              "name": "payload",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct IPCAddress",
                      "name": "to",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "struct SubnetID",
                          "name": "subnetId",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint64",
                              "name": "root",
                              "type": "uint64"
                            },
                            {
                              "internalType": "address[]",
                              "name": "route",
                              "type": "address[]"
                            }
                          ]
                        },
                        {
                          "internalType": "struct FvmAddress",
                          "name": "rawAddress",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint8",
                              "name": "addrType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "bytes",
                              "name": "payload",
                              "type": "bytes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint64",
                      "name": "nonce",
                      "type": "uint64"
                    },
                    {
                      "internalType": "bytes4",
                      "name": "method",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "bytes",
                      "name": "params",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "wrapped",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sendCrossMessage"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake()": {
            "notice": "AddStake adds stake to the collateral of a subnet."
          },
          "commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])": {
            "notice": "CommitChildCheck propagates the commitment of a checkpoint from a child subnet, process the cross-messages directed to the subnet."
          },
          "commitParentFinality((uint256,bytes32))": {
            "notice": "commit the ipc parent finality into storage"
          },
          "createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)": {
            "notice": "creates a new bottom-up checkpoint"
          },
          "fund((uint64,address[]),(uint8,bytes))": {
            "notice": "Fund injects new funds from an account of the parent chain to a subnet. This functions receives a transaction with the FILs that want to be injected in the subnet. - Funds injected are frozen. - A new fund cross-message is created and stored to propagate it to the subnet. It will be picked up by miners to include it in the next possible block. - The cross-message nonce is updated"
          },
          "kill()": {
            "notice": "Kill propagates the kill signal from a subnet actor to unregister it from th hierarchy."
          },
          "propagate(bytes32)": {
            "notice": "Propagates the stored postbox item for the given cid"
          },
          "release((uint8,bytes))": {
            "notice": "Release creates a new check message to release funds in parent chain This function burns the funds that will be released in the current subnet and propagates a new checkpoint message to the parent chain to signal the amount of funds that can be released for a specific address."
          },
          "releaseRewardForRelayer(uint256)": {
            "notice": "Release reward for relayer"
          },
          "releaseStake(uint256)": {
            "notice": "Release stake recovers some collateral of the subnet"
          },
          "sendCrossMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))": {
            "notice": "SendCrossMessage sends an arbitrary cross-message to other subnet in the hierarchy. If the message includes any funds they need to be burnt (like in Release) before being propagated to the corresponding subnet. The circulating supply in each subnet needs to be updated as the message passes through them. Params expect a raw message without any subnet context (the IPC address is included in the message by the actor). Only actors are allowed to send arbitrary cross-messages as a side-effect of their execution. For plain token exchanges fund and release have to be used."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "fevmate/=lib/fevmate/contracts/",
        "forge-std/=lib/forge-std/src/",
        "murky/=lib/murky/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/subnetActorMock/DefaultGatewayMock.sol": "DefaultGatewayMock"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/fevmate/contracts/utils/FilAddress.sol": {
        "keccak256": "0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31",
        "urls": [
          "bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7",
          "dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1",
        "urls": [
          "bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5",
          "dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892",
        "urls": [
          "bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593",
          "dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT"
        ],
        "license": "MIT"
      },
      "src/constants/Constants.sol": {
        "keccak256": "0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546",
        "urls": [
          "bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940",
          "dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/enums/ConsensusType.sol": {
        "keccak256": "0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d",
        "urls": [
          "bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0",
          "dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/enums/Status.sol": {
        "keccak256": "0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c",
        "urls": [
          "bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33",
          "dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/errors/IPCErrors.sol": {
        "keccak256": "0x3c5eef277d0386c1edbb7f55f454c81f23b3a86c0c113c1ce474da04348575de",
        "urls": [
          "bzz-raw://5bddc2487c518086fde2542564cf0eda4bfdd5cc4c7a2b892474b85cc48b9d4b",
          "dweb:/ipfs/QmZz3F1FU4Efq7s4TSdGEGimhKrvVRi8ngPmUdvEq4AL8r"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/interfaces/IGateway.sol": {
        "keccak256": "0xb4209b44c3965fd233387ece78149461bd64a47788c3af24edb7c99ea1ef8868",
        "urls": [
          "bzz-raw://4db7a4573100063387e170c55a69772b20e403444e9d97b24cc220a71a52fbbb",
          "dweb:/ipfs/QmTYsSjmFsTwuNTXBByZKueJZLpe7RwNzLRWNPxXGA3YKB"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/AccountHelper.sol": {
        "keccak256": "0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5",
        "urls": [
          "bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc",
          "dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibGatewayActorStorage.sol": {
        "keccak256": "0x88f2124aa3843fefae87d50af505872389399fd75223f14bf1f5d6350cf25af7",
        "urls": [
          "bzz-raw://228a4dfe0514a271f08967cdeb09435bcce23becc3e195526e8cc51291334f31",
          "dweb:/ipfs/QmQX7KGm38gjfH2tP5gGAYQFT1RpMUpnMA47y3WaXvzMLq"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibStaking.sol": {
        "keccak256": "0x3ad98b426ca82cc98fd795a166c4a599c71e9f400e3b23bda58666e2febdf3b2",
        "urls": [
          "bzz-raw://1e501014ed974118161282e81821aa05810da989a3b2091624e73327d45cab67",
          "dweb:/ipfs/QmSi2Ed42uhNoxuvdyigyhNpujEkrzc9Goe4gTbhgVuE3o"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibStakingChangeLog.sol": {
        "keccak256": "0x1ec44b7c417dae8bec87da6f1f48eb10a1eacdfb4935144dd9094dc1bbe9aa9b",
        "urls": [
          "bzz-raw://d6fcbd14fe0743c0ea0a8a8d2ea851b4864559c3553773f07d6ae708bcc83318",
          "dweb:/ipfs/QmYb6v6U27FAY4ut6gCZy6oK1MjN165RTxUGhrY6zxtg93"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibSubnetActorStorage.sol": {
        "keccak256": "0xe11ae56d18ef43fd9ebdf9350977f9a26da4ee9a3288b46b04c5b973aa231f28",
        "urls": [
          "bzz-raw://f616b61fde1528a8666d09c962d7f23a82b200229691794933f39c4d3781fc1c",
          "dweb:/ipfs/QmXQsNGv6R34wAx1fRoyMiwdtGgQVn1qDXGCr7cED92vvJ"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/priority/LibMaxPQ.sol": {
        "keccak256": "0xf98fae415e764e627134ae440dea84d6879eaaa6950868cb56382324f84ae8db",
        "urls": [
          "bzz-raw://f290b5d20ac65c22eddbadeae1b49bbe78cb9e8e0cd187c2b93f98d13f9300a2",
          "dweb:/ipfs/QmXShiVpDzD8CLn8MeWSa4fQSeiTzyBHSA1VNZtLhJgTgW"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/priority/LibMinPQ.sol": {
        "keccak256": "0xc8c27239c0e82b489d9cb61f64be28d4fde6af8d6c8b2d27180ad9c42d602110",
        "urls": [
          "bzz-raw://ed53f96d383f74c06a118ad3c8758df07b91f48dcd81769dac637d2289644796",
          "dweb:/ipfs/Qmaf4HdjTnuQZ44PRmqmWXCF3h616rhNA7uKEksPPtmxXK"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/priority/LibPQ.sol": {
        "keccak256": "0x4d4290087995d669e80f8fdd405bfaae545323393c0c54689b84965ffb87303e",
        "urls": [
          "bzz-raw://c21b563f6bf23afacb38fc97ab94d1afe12e4ad3dfde96d4484068bf26b13a2c",
          "dweb:/ipfs/Qmd5d3EnZwaSRnjG4ZFH2X8HKgymzd6vQgus8A6oEoh5pJ"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/structs/Checkpoint.sol": {
        "keccak256": "0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746",
        "urls": [
          "bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a",
          "dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/structs/FvmAddress.sol": {
        "keccak256": "0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069",
        "urls": [
          "bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac",
          "dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/structs/Subnet.sol": {
        "keccak256": "0x1ddb626039baf4a4411f06b5340aaa80dcd65e9980da7673b73ab16633d871ce",
        "urls": [
          "bzz-raw://af017eef4cb46262ac29b4cf47faa1fc5d2b61970ec7d6d021eae4cf45b5577b",
          "dweb:/ipfs/QmZJiA2t934fbe62513neQYzxSNswnCRTJybp7d6X2RyWR"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "test/subnetActorMock/DefaultGatewayMock.sol": {
        "keccak256": "0x5b7bd85d2619091c3eb5fc743569fe4bd9b2449d6482fe21dde477832bad9b8d",
        "urls": [
          "bzz-raw://59aeb802eff48d8fdf083c0b1df58c44cbddf5d2ba2277001c70ad391c2d015f",
          "dweb:/ipfs/Qme1Bzsi79CUVAPYXKRhCB1XFFRmeNxhud8mPspRWUZMxV"
        ],
        "license": "MIT OR Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/subnetActorMock/DefaultGatewayMock.sol",
    "id": 49985,
    "exportedSymbols": {
      "Address": [
        32478
      ],
      "BottomUpCheckpoint": [
        47087
      ],
      "CrossMsg": [
        47109
      ],
      "DefaultGatewayMock": [
        49984
      ],
      "FvmAddress": [
        47133
      ],
      "IGateway": [
        39617
      ],
      "ParentFinality": [
        47070
      ],
      "SubnetID": [
        47163
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:3070:81",
    "nodes": [
      {
        "id": 49775,
        "nodeType": "PragmaDirective",
        "src": "46:23:81",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 49777,
        "nodeType": "ImportDirective",
        "src": "71:59:81",
        "nodes": [],
        "absolutePath": "src/interfaces/IGateway.sol",
        "file": "../../src/interfaces/IGateway.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49985,
        "sourceUnit": 39618,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49776,
              "name": "IGateway",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39617,
              "src": "79:8:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49781,
        "nodeType": "ImportDirective",
        "src": "131:94:81",
        "nodes": [],
        "absolutePath": "src/structs/Checkpoint.sol",
        "file": "../../src/structs/Checkpoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49985,
        "sourceUnit": 47127,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49778,
              "name": "BottomUpCheckpoint",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47087,
              "src": "139:18:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 49779,
              "name": "CrossMsg",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47109,
              "src": "159:8:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 49780,
              "name": "ParentFinality",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47070,
              "src": "169:14:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49783,
        "nodeType": "ImportDirective",
        "src": "226:54:81",
        "nodes": [],
        "absolutePath": "src/structs/Subnet.sol",
        "file": "../../src/structs/Subnet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49985,
        "sourceUnit": 47296,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49782,
              "name": "SubnetID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47163,
              "src": "234:8:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49785,
        "nodeType": "ImportDirective",
        "src": "281:60:81",
        "nodes": [],
        "absolutePath": "src/structs/FvmAddress.sol",
        "file": "../../src/structs/FvmAddress.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49985,
        "sourceUnit": 47141,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49784,
              "name": "FvmAddress",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47133,
              "src": "289:10:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49787,
        "nodeType": "ImportDirective",
        "src": "342:65:81",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "openzeppelin-contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49985,
        "sourceUnit": 32479,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49786,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32478,
              "src": "350:7:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49984,
        "nodeType": "ContractDefinition",
        "src": "409:2707:81",
        "nodes": [
          {
            "id": 49792,
            "nodeType": "UsingForDirective",
            "src": "455:34:81",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 49790,
              "name": "Address",
              "nameLocations": [
                "461:7:81"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32478,
              "src": "461:7:81"
            },
            "typeName": {
              "id": 49791,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "473:15:81",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "id": 49794,
            "nodeType": "VariableDeclaration",
            "src": "495:19:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dummy",
            "nameLocation": "509:5:81",
            "scope": 49984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 49793,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "495:5:81",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "private"
          },
          {
            "id": 49796,
            "nodeType": "VariableDeclaration",
            "src": "520:19:81",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "subnetActor",
            "nameLocation": "528:11:81",
            "scope": 49984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49795,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "520:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 49817,
            "nodeType": "FunctionDefinition",
            "src": "546:260:81",
            "nodes": [],
            "body": {
              "id": 49816,
              "nodeType": "Block",
              "src": "609:197:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 49801,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "645:3:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 49803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "649:5:81",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "645:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49804,
                  "nodeType": "ExpressionStatement",
                  "src": "645:9:81"
                },
                {
                  "expression": {
                    "id": 49805,
                    "name": "_genesisCircSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49798,
                    "src": "691:18:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49806,
                  "nodeType": "ExpressionStatement",
                  "src": "691:18:81"
                },
                {
                  "expression": {
                    "id": 49809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49807,
                      "name": "dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49794,
                      "src": "755:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 49808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "763:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "755:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 49810,
                  "nodeType": "ExpressionStatement",
                  "src": "755:9:81"
                },
                {
                  "expression": {
                    "id": 49814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49811,
                      "name": "subnetActor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49796,
                      "src": "775:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 49812,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "789:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 49813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "793:6:81",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "789:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "775:24:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 49815,
                  "nodeType": "ExpressionStatement",
                  "src": "775:24:81"
                }
              ]
            },
            "baseFunctions": [
              39537
            ],
            "functionSelector": "f207564e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "555:8:81",
            "parameters": {
              "id": 49799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49798,
                  "mutability": "mutable",
                  "name": "_genesisCircSupply",
                  "nameLocation": "572:18:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49817,
                  "src": "564:26:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "563:28:81"
            },
            "returnParameters": {
              "id": 49800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "609:0:81"
            },
            "scope": 49984,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49829,
            "nodeType": "FunctionDefinition",
            "src": "812:143:81",
            "nodes": [],
            "body": {
              "id": 49828,
              "nodeType": "Block",
              "src": "849:106:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 49820,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "885:3:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 49822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "889:5:81",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "885:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49823,
                  "nodeType": "ExpressionStatement",
                  "src": "885:9:81"
                },
                {
                  "expression": {
                    "id": 49826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49824,
                      "name": "dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49794,
                      "src": "939:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 49825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "947:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "939:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 49827,
                  "nodeType": "ExpressionStatement",
                  "src": "939:9:81"
                }
              ]
            },
            "baseFunctions": [
              39541
            ],
            "functionSelector": "5a627dbc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addStake",
            "nameLocation": "821:8:81",
            "parameters": {
              "id": 49818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "829:2:81"
            },
            "returnParameters": {
              "id": 49819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "849:0:81"
            },
            "scope": 49984,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49849,
            "nodeType": "FunctionDefinition",
            "src": "961:199:81",
            "nodes": [],
            "body": {
              "id": 49848,
              "nodeType": "Block",
              "src": "1008:152:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49834,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49831,
                    "src": "1044:6:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49835,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:6:81"
                },
                {
                  "expression": {
                    "id": 49838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49836,
                      "name": "dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49794,
                      "src": "1095:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 49837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1103:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1095:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 49839,
                  "nodeType": "ExpressionStatement",
                  "src": "1095:9:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49845,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49831,
                        "src": "1146:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49842,
                            "name": "subnetActor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49796,
                            "src": "1123:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1115:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 49840,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1115:8:81",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1115:20:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 49844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1136:9:81",
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32150,
                      "src": "1115:30:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 49846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1115:38:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49847,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:38:81"
                }
              ]
            },
            "baseFunctions": [
              39547
            ],
            "functionSelector": "45f54485",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseStake",
            "nameLocation": "970:12:81",
            "parameters": {
              "id": 49832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49831,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "991:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49849,
                  "src": "983:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "983:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "982:16:81"
            },
            "returnParameters": {
              "id": 49833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1008:0:81"
            },
            "scope": 49984,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49861,
            "nodeType": "FunctionDefinition",
            "src": "1166:161:81",
            "nodes": [],
            "body": {
              "id": 49860,
              "nodeType": "Block",
              "src": "1224:103:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49854,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49851,
                    "src": "1260:6:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49855,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:6:81"
                },
                {
                  "expression": {
                    "id": 49858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49856,
                      "name": "dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49794,
                      "src": "1311:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 49857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1319:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1311:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 49859,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:9:81"
                }
              ]
            },
            "baseFunctions": [
              39553
            ],
            "functionSelector": "d8e25572",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseRewardForRelayer",
            "nameLocation": "1175:23:81",
            "parameters": {
              "id": 49852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49851,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1207:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49861,
                  "src": "1199:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1198:16:81"
            },
            "returnParameters": {
              "id": 49853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1224:0:81"
            },
            "scope": 49984,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49873,
            "nodeType": "FunctionDefinition",
            "src": "1333:132:81",
            "nodes": [],
            "body": {
              "id": 49872,
              "nodeType": "Block",
              "src": "1358:107:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 49864,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1394:3:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 49866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1398:6:81",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1394:10:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 49867,
                  "nodeType": "ExpressionStatement",
                  "src": "1394:10:81"
                },
                {
                  "expression": {
                    "id": 49870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49868,
                      "name": "dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49794,
                      "src": "1449:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 49869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1457:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1449:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 49871,
                  "nodeType": "ExpressionStatement",
                  "src": "1449:9:81"
                }
              ]
            },
            "baseFunctions": [
              39557
            ],
            "functionSelector": "41c0e1b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nameLocation": "1342:4:81",
            "parameters": {
              "id": 49862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1346:2:81"
            },
            "returnParameters": {
              "id": 49863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1358:0:81"
            },
            "scope": 49984,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49893,
            "nodeType": "FunctionDefinition",
            "src": "1618:254:81",
            "nodes": [],
            "body": {
              "id": 49892,
              "nodeType": "Block",
              "src": "1739:133:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49884,
                    "name": "bottomUpCheckpoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49877,
                    "src": "1775:18:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47087_calldata_ptr",
                      "typeString": "struct BottomUpCheckpoint calldata"
                    }
                  },
                  "id": 49885,
                  "nodeType": "ExpressionStatement",
                  "src": "1775:18:81"
                },
                {
                  "expression": {
                    "id": 49886,
                    "name": "messages",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49881,
                    "src": "1803:8:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CrossMsg_$47109_calldata_ptr_$dyn_calldata_ptr",
                      "typeString": "struct CrossMsg calldata[] calldata"
                    }
                  },
                  "id": 49887,
                  "nodeType": "ExpressionStatement",
                  "src": "1803:8:81"
                },
                {
                  "expression": {
                    "id": 49890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49888,
                      "name": "dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49794,
                      "src": "1856:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 49889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1864:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1856:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 49891,
                  "nodeType": "ExpressionStatement",
                  "src": "1856:9:81"
                }
              ]
            },
            "baseFunctions": [
              39568
            ],
            "documentation": {
              "id": 49874,
              "nodeType": "StructuredDocumentation",
              "src": "1471:142:81",
              "text": "CommitChildCheck propagates the commitment of a checkpoint from a child subnet,\n process the cross-messages directed to the subnet."
            },
            "functionSelector": "f456b39e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "commitBottomUpCheckpoint",
            "nameLocation": "1627:24:81",
            "parameters": {
              "id": 49882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49877,
                  "mutability": "mutable",
                  "name": "bottomUpCheckpoint",
                  "nameLocation": "1680:18:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49893,
                  "src": "1652:46:81",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47087_calldata_ptr",
                    "typeString": "struct BottomUpCheckpoint"
                  },
                  "typeName": {
                    "id": 49876,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49875,
                      "name": "BottomUpCheckpoint",
                      "nameLocations": [
                        "1652:18:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47087,
                      "src": "1652:18:81"
                    },
                    "referencedDeclaration": 47087,
                    "src": "1652:18:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47087_storage_ptr",
                      "typeString": "struct BottomUpCheckpoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49881,
                  "mutability": "mutable",
                  "name": "messages",
                  "nameLocation": "1720:8:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49893,
                  "src": "1700:28:81",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CrossMsg_$47109_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CrossMsg[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49879,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 49878,
                        "name": "CrossMsg",
                        "nameLocations": [
                          "1700:8:81"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 47109,
                        "src": "1700:8:81"
                      },
                      "referencedDeclaration": 47109,
                      "src": "1700:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CrossMsg_$47109_storage_ptr",
                        "typeString": "struct CrossMsg"
                      }
                    },
                    "id": 49880,
                    "nodeType": "ArrayTypeName",
                    "src": "1700:10:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CrossMsg_$47109_storage_$dyn_storage_ptr",
                      "typeString": "struct CrossMsg[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1651:78:81"
            },
            "returnParameters": {
              "id": 49883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1739:0:81"
            },
            "scope": 49984,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49911,
            "nodeType": "FunctionDefinition",
            "src": "1878:200:81",
            "nodes": [],
            "body": {
              "id": 49910,
              "nodeType": "Block",
              "src": "1961:117:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49902,
                    "name": "subnetId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49896,
                    "src": "1997:8:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SubnetID_$47163_calldata_ptr",
                      "typeString": "struct SubnetID calldata"
                    }
                  },
                  "id": 49903,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:8:81"
                },
                {
                  "expression": {
                    "id": 49904,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49899,
                    "src": "2015:2:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FvmAddress_$47133_calldata_ptr",
                      "typeString": "struct FvmAddress calldata"
                    }
                  },
                  "id": 49905,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:2:81"
                },
                {
                  "expression": {
                    "id": 49908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49906,
                      "name": "dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49794,
                      "src": "2062:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 49907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2070:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2062:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 49909,
                  "nodeType": "ExpressionStatement",
                  "src": "2062:9:81"
                }
              ]
            },
            "baseFunctions": [
              39578
            ],
            "functionSelector": "18f44b70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nameLocation": "1887:4:81",
            "parameters": {
              "id": 49900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49896,
                  "mutability": "mutable",
                  "name": "subnetId",
                  "nameLocation": "1910:8:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49911,
                  "src": "1892:26:81",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SubnetID_$47163_calldata_ptr",
                    "typeString": "struct SubnetID"
                  },
                  "typeName": {
                    "id": 49895,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49894,
                      "name": "SubnetID",
                      "nameLocations": [
                        "1892:8:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47163,
                      "src": "1892:8:81"
                    },
                    "referencedDeclaration": 47163,
                    "src": "1892:8:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SubnetID_$47163_storage_ptr",
                      "typeString": "struct SubnetID"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49899,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1940:2:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49911,
                  "src": "1920:22:81",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FvmAddress_$47133_calldata_ptr",
                    "typeString": "struct FvmAddress"
                  },
                  "typeName": {
                    "id": 49898,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49897,
                      "name": "FvmAddress",
                      "nameLocations": [
                        "1920:10:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47133,
                      "src": "1920:10:81"
                    },
                    "referencedDeclaration": 47133,
                    "src": "1920:10:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FvmAddress_$47133_storage_ptr",
                      "typeString": "struct FvmAddress"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1891:52:81"
            },
            "returnParameters": {
              "id": 49901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1961:0:81"
            },
            "scope": 49984,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49924,
            "nodeType": "FunctionDefinition",
            "src": "2084:157:81",
            "nodes": [],
            "body": {
              "id": 49923,
              "nodeType": "Block",
              "src": "2142:99:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49917,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49914,
                    "src": "2178:2:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FvmAddress_$47133_calldata_ptr",
                      "typeString": "struct FvmAddress calldata"
                    }
                  },
                  "id": 49918,
                  "nodeType": "ExpressionStatement",
                  "src": "2178:2:81"
                },
                {
                  "expression": {
                    "id": 49921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49919,
                      "name": "dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49794,
                      "src": "2225:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 49920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2233:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2225:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 49922,
                  "nodeType": "ExpressionStatement",
                  "src": "2225:9:81"
                }
              ]
            },
            "baseFunctions": [
              39585
            ],
            "functionSelector": "6b2c1eef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nameLocation": "2093:7:81",
            "parameters": {
              "id": 49915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49914,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2121:2:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49924,
                  "src": "2101:22:81",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FvmAddress_$47133_calldata_ptr",
                    "typeString": "struct FvmAddress"
                  },
                  "typeName": {
                    "id": 49913,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49912,
                      "name": "FvmAddress",
                      "nameLocations": [
                        "2101:10:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47133,
                      "src": "2101:10:81"
                    },
                    "referencedDeclaration": 47133,
                    "src": "2101:10:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FvmAddress_$47133_storage_ptr",
                      "typeString": "struct FvmAddress"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2100:24:81"
            },
            "returnParameters": {
              "id": 49916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2142:0:81"
            },
            "scope": 49984,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49937,
            "nodeType": "FunctionDefinition",
            "src": "2247:174:81",
            "nodes": [],
            "body": {
              "id": 49936,
              "nodeType": "Block",
              "src": "2316:105:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49930,
                    "name": "crossMsg",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49927,
                    "src": "2352:8:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CrossMsg_$47109_memory_ptr",
                      "typeString": "struct CrossMsg memory"
                    }
                  },
                  "id": 49931,
                  "nodeType": "ExpressionStatement",
                  "src": "2352:8:81"
                },
                {
                  "expression": {
                    "id": 49934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49932,
                      "name": "dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49794,
                      "src": "2405:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 49933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2413:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2405:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 49935,
                  "nodeType": "ExpressionStatement",
                  "src": "2405:9:81"
                }
              ]
            },
            "baseFunctions": [
              39592
            ],
            "functionSelector": "c13175ef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendCrossMessage",
            "nameLocation": "2256:16:81",
            "parameters": {
              "id": 49928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49927,
                  "mutability": "mutable",
                  "name": "crossMsg",
                  "nameLocation": "2289:8:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49937,
                  "src": "2273:24:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CrossMsg_$47109_memory_ptr",
                    "typeString": "struct CrossMsg"
                  },
                  "typeName": {
                    "id": 49926,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49925,
                      "name": "CrossMsg",
                      "nameLocations": [
                        "2273:8:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47109,
                      "src": "2273:8:81"
                    },
                    "referencedDeclaration": 47109,
                    "src": "2273:8:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CrossMsg_$47109_storage_ptr",
                      "typeString": "struct CrossMsg"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2272:26:81"
            },
            "returnParameters": {
              "id": 49929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2316:0:81"
            },
            "scope": 49984,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49949,
            "nodeType": "FunctionDefinition",
            "src": "2427:155:81",
            "nodes": [],
            "body": {
              "id": 49948,
              "nodeType": "Block",
              "src": "2479:103:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49942,
                    "name": "msgCid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49939,
                    "src": "2515:6:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 49943,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:6:81"
                },
                {
                  "expression": {
                    "id": 49946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49944,
                      "name": "dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49794,
                      "src": "2566:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 49945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2574:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2566:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 49947,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:9:81"
                }
              ]
            },
            "baseFunctions": [
              39598
            ],
            "functionSelector": "25bf0db6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "propagate",
            "nameLocation": "2436:9:81",
            "parameters": {
              "id": 49940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49939,
                  "mutability": "mutable",
                  "name": "msgCid",
                  "nameLocation": "2454:6:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49949,
                  "src": "2446:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49938,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2446:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2445:16:81"
            },
            "returnParameters": {
              "id": 49941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2479:0:81"
            },
            "scope": 49984,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49962,
            "nodeType": "FunctionDefinition",
            "src": "2588:192:81",
            "nodes": [],
            "body": {
              "id": 49961,
              "nodeType": "Block",
              "src": "2675:105:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49955,
                    "name": "finality",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49952,
                    "src": "2711:8:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ParentFinality_$47070_calldata_ptr",
                      "typeString": "struct ParentFinality calldata"
                    }
                  },
                  "id": 49956,
                  "nodeType": "ExpressionStatement",
                  "src": "2711:8:81"
                },
                {
                  "expression": {
                    "id": 49959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49957,
                      "name": "dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49794,
                      "src": "2764:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 49958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2772:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2764:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 49960,
                  "nodeType": "ExpressionStatement",
                  "src": "2764:9:81"
                }
              ]
            },
            "baseFunctions": [
              39605
            ],
            "functionSelector": "11196974",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "commitParentFinality",
            "nameLocation": "2597:20:81",
            "parameters": {
              "id": 49953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49952,
                  "mutability": "mutable",
                  "name": "finality",
                  "nameLocation": "2651:8:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49962,
                  "src": "2627:32:81",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ParentFinality_$47070_calldata_ptr",
                    "typeString": "struct ParentFinality"
                  },
                  "typeName": {
                    "id": 49951,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49950,
                      "name": "ParentFinality",
                      "nameLocations": [
                        "2627:14:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47070,
                      "src": "2627:14:81"
                    },
                    "referencedDeclaration": 47070,
                    "src": "2627:14:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ParentFinality_$47070_storage_ptr",
                      "typeString": "struct ParentFinality"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2617:48:81"
            },
            "returnParameters": {
              "id": 49954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2675:0:81"
            },
            "scope": 49984,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49983,
            "nodeType": "FunctionDefinition",
            "src": "2786:328:81",
            "nodes": [],
            "body": {
              "id": 49982,
              "nodeType": "Block",
              "src": "2953:161:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49972,
                    "name": "checkpoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49965,
                    "src": "2989:10:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47087_calldata_ptr",
                      "typeString": "struct BottomUpCheckpoint calldata"
                    }
                  },
                  "id": 49973,
                  "nodeType": "ExpressionStatement",
                  "src": "2989:10:81"
                },
                {
                  "expression": {
                    "id": 49974,
                    "name": "membershipRootHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49967,
                    "src": "3009:18:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 49975,
                  "nodeType": "ExpressionStatement",
                  "src": "3009:18:81"
                },
                {
                  "expression": {
                    "id": 49976,
                    "name": "membershipWeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49969,
                    "src": "3037:16:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 49977,
                  "nodeType": "ExpressionStatement",
                  "src": "3037:16:81"
                },
                {
                  "expression": {
                    "id": 49980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49978,
                      "name": "dummy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49794,
                      "src": "3098:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 49979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3106:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3098:9:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 49981,
                  "nodeType": "ExpressionStatement",
                  "src": "3098:9:81"
                }
              ]
            },
            "baseFunctions": [
              39616
            ],
            "functionSelector": "a656ca5b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createBottomUpCheckpoint",
            "nameLocation": "2795:24:81",
            "parameters": {
              "id": 49970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49965,
                  "mutability": "mutable",
                  "name": "checkpoint",
                  "nameLocation": "2857:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49983,
                  "src": "2829:38:81",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47087_calldata_ptr",
                    "typeString": "struct BottomUpCheckpoint"
                  },
                  "typeName": {
                    "id": 49964,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49963,
                      "name": "BottomUpCheckpoint",
                      "nameLocations": [
                        "2829:18:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47087,
                      "src": "2829:18:81"
                    },
                    "referencedDeclaration": 47087,
                    "src": "2829:18:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47087_storage_ptr",
                      "typeString": "struct BottomUpCheckpoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49967,
                  "mutability": "mutable",
                  "name": "membershipRootHash",
                  "nameLocation": "2885:18:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49983,
                  "src": "2877:26:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49966,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2877:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49969,
                  "mutability": "mutable",
                  "name": "membershipWeight",
                  "nameLocation": "2921:16:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 49983,
                  "src": "2913:24:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2913:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2819:124:81"
            },
            "returnParameters": {
              "id": 49971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2953:0:81"
            },
            "scope": 49984,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49788,
              "name": "IGateway",
              "nameLocations": [
                "440:8:81"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39617,
              "src": "440:8:81"
            },
            "id": 49789,
            "nodeType": "InheritanceSpecifier",
            "src": "440:8:81"
          }
        ],
        "canonicalName": "DefaultGatewayMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49984,
          39617
        ],
        "name": "DefaultGatewayMock",
        "nameLocation": "418:18:81",
        "scope": 49985,
        "usedErrors": [
          32101,
          32109
        ]
      }
    ],
    "license": "MIT OR Apache-2.0"
  },
  "id": 81
}