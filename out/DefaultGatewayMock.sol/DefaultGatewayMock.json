{
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "AddressInsufficientBalance",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FailedInnerCall",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "addStake",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "internalType": "uint64",
                                    "name": "root",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "route",
                                    "type": "address[]"
                                }
                            ],
                            "internalType": "struct SubnetID",
                            "name": "subnetID",
                            "type": "tuple"
                        },
                        {
                            "internalType": "uint64",
                            "name": "blockHeight",
                            "type": "uint64"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "blockHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint64",
                            "name": "nextConfigurationNumber",
                            "type": "uint64"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "crossMessagesHash",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct BottomUpCheckpoint",
                    "name": "bottomUpCheckpoint",
                    "type": "tuple"
                },
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint64",
                                                    "name": "root",
                                                    "type": "uint64"
                                                },
                                                {
                                                    "internalType": "address[]",
                                                    "name": "route",
                                                    "type": "address[]"
                                                }
                                            ],
                                            "internalType": "struct SubnetID",
                                            "name": "subnetId",
                                            "type": "tuple"
                                        },
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint8",
                                                    "name": "addrType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "payload",
                                                    "type": "bytes"
                                                }
                                            ],
                                            "internalType": "struct FvmAddress",
                                            "name": "rawAddress",
                                            "type": "tuple"
                                        }
                                    ],
                                    "internalType": "struct IPCAddress",
                                    "name": "from",
                                    "type": "tuple"
                                },
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint64",
                                                    "name": "root",
                                                    "type": "uint64"
                                                },
                                                {
                                                    "internalType": "address[]",
                                                    "name": "route",
                                                    "type": "address[]"
                                                }
                                            ],
                                            "internalType": "struct SubnetID",
                                            "name": "subnetId",
                                            "type": "tuple"
                                        },
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint8",
                                                    "name": "addrType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "payload",
                                                    "type": "bytes"
                                                }
                                            ],
                                            "internalType": "struct FvmAddress",
                                            "name": "rawAddress",
                                            "type": "tuple"
                                        }
                                    ],
                                    "internalType": "struct IPCAddress",
                                    "name": "to",
                                    "type": "tuple"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "nonce",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes4",
                                    "name": "method",
                                    "type": "bytes4"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "params",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "fee",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct StorableMsg",
                            "name": "message",
                            "type": "tuple"
                        },
                        {
                            "internalType": "bool",
                            "name": "wrapped",
                            "type": "bool"
                        }
                    ],
                    "internalType": "struct CrossMsg[]",
                    "name": "messages",
                    "type": "tuple[]"
                }
            ],
            "name": "commitBottomUpCheckpoint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "height",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "blockHash",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct ParentFinality",
                    "name": "finality",
                    "type": "tuple"
                }
            ],
            "name": "commitParentFinality",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "internalType": "uint64",
                                    "name": "root",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "route",
                                    "type": "address[]"
                                }
                            ],
                            "internalType": "struct SubnetID",
                            "name": "subnetID",
                            "type": "tuple"
                        },
                        {
                            "internalType": "uint64",
                            "name": "blockHeight",
                            "type": "uint64"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "blockHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint64",
                            "name": "nextConfigurationNumber",
                            "type": "uint64"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "crossMessagesHash",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct BottomUpCheckpoint",
                    "name": "checkpoint",
                    "type": "tuple"
                },
                {
                    "internalType": "bytes32",
                    "name": "membershipRootHash",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "membershipWeight",
                    "type": "uint256"
                }
            ],
            "name": "createBottomUpCheckpoint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "uint64",
                            "name": "root",
                            "type": "uint64"
                        },
                        {
                            "internalType": "address[]",
                            "name": "route",
                            "type": "address[]"
                        }
                    ],
                    "internalType": "struct SubnetID",
                    "name": "subnetId",
                    "type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "uint8",
                            "name": "addrType",
                            "type": "uint8"
                        },
                        {
                            "internalType": "bytes",
                            "name": "payload",
                            "type": "bytes"
                        }
                    ],
                    "internalType": "struct FvmAddress",
                    "name": "to",
                    "type": "tuple"
                }
            ],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "kill",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "msgCid",
                    "type": "bytes32"
                }
            ],
            "name": "propagate",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_genesisCircSupply",
                    "type": "uint256"
                }
            ],
            "name": "register",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "uint8",
                            "name": "addrType",
                            "type": "uint8"
                        },
                        {
                            "internalType": "bytes",
                            "name": "payload",
                            "type": "bytes"
                        }
                    ],
                    "internalType": "struct FvmAddress",
                    "name": "to",
                    "type": "tuple"
                }
            ],
            "name": "release",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "releaseRewardForRelayer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "releaseStake",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint64",
                                                    "name": "root",
                                                    "type": "uint64"
                                                },
                                                {
                                                    "internalType": "address[]",
                                                    "name": "route",
                                                    "type": "address[]"
                                                }
                                            ],
                                            "internalType": "struct SubnetID",
                                            "name": "subnetId",
                                            "type": "tuple"
                                        },
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint8",
                                                    "name": "addrType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "payload",
                                                    "type": "bytes"
                                                }
                                            ],
                                            "internalType": "struct FvmAddress",
                                            "name": "rawAddress",
                                            "type": "tuple"
                                        }
                                    ],
                                    "internalType": "struct IPCAddress",
                                    "name": "from",
                                    "type": "tuple"
                                },
                                {
                                    "components": [
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint64",
                                                    "name": "root",
                                                    "type": "uint64"
                                                },
                                                {
                                                    "internalType": "address[]",
                                                    "name": "route",
                                                    "type": "address[]"
                                                }
                                            ],
                                            "internalType": "struct SubnetID",
                                            "name": "subnetId",
                                            "type": "tuple"
                                        },
                                        {
                                            "components": [
                                                {
                                                    "internalType": "uint8",
                                                    "name": "addrType",
                                                    "type": "uint8"
                                                },
                                                {
                                                    "internalType": "bytes",
                                                    "name": "payload",
                                                    "type": "bytes"
                                                }
                                            ],
                                            "internalType": "struct FvmAddress",
                                            "name": "rawAddress",
                                            "type": "tuple"
                                        }
                                    ],
                                    "internalType": "struct IPCAddress",
                                    "name": "to",
                                    "type": "tuple"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "value",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "nonce",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes4",
                                    "name": "method",
                                    "type": "bytes4"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "params",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "fee",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct StorableMsg",
                            "name": "message",
                            "type": "tuple"
                        },
                        {
                            "internalType": "bool",
                            "name": "wrapped",
                            "type": "bool"
                        }
                    ],
                    "internalType": "struct CrossMsg",
                    "name": "crossMsg",
                    "type": "tuple"
                }
            ],
            "name": "sendCrossMessage",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        }
    ],
    "bytecode": {
        "object": "0x608080604052346100165761067d908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163111969741461044957816318f44b70146103fd57816325bf0db6146103e257816341c0e1b5146103c357816345f544851461032f575080635a627dbc146103155780636b2c1eef146102e0578063a656ca5b1461029d578063c13175ef14610172578063d8e2557214610152578063f207564e146101225763f456b39e146100a757600080fd5b3461011657600319913683011261011657803567ffffffffffffffff9283821161011e5760a09136030112610116576024359082821161011a573660238301121561011a5781013591821161011657602490369260051b01011161011357805460ff1916600117815580f35b80fd5b8280fd5b8380fd5b8480fd5b8360203660031901126101135780546001600160a81b0319163360081b610100600160a81b031617600117815580f35b833461011357602036600319011261011357805460ff1916600117815580f35b50906003199060203683011261011a5782359167ffffffffffffffff918284116102995780828536030112610299576101a9610469565b508385013583811161027e5760e09085019283360301126102995780519060e082018281108582111761028657815285830135848111610282576101f290873691860101610538565b825260248301358481116102825761020f90873691860101610538565b6020830152604483013590820152610229606483016104c5565b60608201526084820135906001600160e01b03198216820361027e576080015260a481013591821161011e5760249361026592369201016104fb565b5001358015150361011357805460ff1916600117815580f35b8680fd5b8780fd5b634e487b7160e01b885260418752602488fd5b8580fd5b8382346102dc576003199060603683011261011657359067ffffffffffffffff82116101165760a0913603011261011357805460ff1916600117815580f35b5080fd5b506003199060203683011261011a573567ffffffffffffffff811161011a573603011261011357805460ff1916600117815580f35b838060031936011261011357805460ff1916600117815580f35b849391503461011a57602036600319011261011a57835460ff19166001178085558335914783116103af5750849182918291829160081c6001600160a01b03165af13d156103aa573d610389610384826104df565b61049f565b9081528460203d92013e5b1561039d578280f35b51630a12f52160e11b8152fd5b610394565b63cd78605960e01b81523085820152602490fd5b8434610113578060031936011261011357805460ff1916600117815580f35b84602036600319011261011357805460ff1916600117815580f35b505060031990828236011261011a573567ffffffffffffffff9081811161011e578284913603011261011a5760243590811161011a573603011261011357805460ff1916600117815580f35b505050346102dc5736600319011261011357805460ff1916600117815580f35b604051906040820182811067ffffffffffffffff82111761048957604052565b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff81118382101761048957604052565b359067ffffffffffffffff821682036104da57565b600080fd5b67ffffffffffffffff811161048957601f01601f191660200190565b81601f820112156104da57803590610515610384836104df565b92828452602083830101116104da57816000926020809301838601378301015290565b91906040838203126104da5761054c610469565b9267ffffffffffffffff9181358381116104da578201916040838303126104da57610575610469565b61057e846104c5565b815260209384810135908682116104da570183601f820112156104da57803590868211610489578160051b86806105b681840161049f565b809581520191830101918683116104da578701905b8282106106285750505084820152865282810135908482116104da5701906040828203126104da576105fb610469565b93823560ff811681036104da578552838301359081116104da5761061f92016104fb565b81830152830152565b81356001600160a01b03811681036104da5781529087019087016105cb56fea26469706673582212204be5dc0854d63f7558c8359cefa42e7bc63cfafc16e1b0d6e7a4af3c769c581e64736f6c63430008130033",
        "sourceMap": "409:2707:83:-:0;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x6080604081815260048036101561001557600080fd5b600092833560e01c908163111969741461044957816318f44b70146103fd57816325bf0db6146103e257816341c0e1b5146103c357816345f544851461032f575080635a627dbc146103155780636b2c1eef146102e0578063a656ca5b1461029d578063c13175ef14610172578063d8e2557214610152578063f207564e146101225763f456b39e146100a757600080fd5b3461011657600319913683011261011657803567ffffffffffffffff9283821161011e5760a09136030112610116576024359082821161011a573660238301121561011a5781013591821161011657602490369260051b01011161011357805460ff1916600117815580f35b80fd5b8280fd5b8380fd5b8480fd5b8360203660031901126101135780546001600160a81b0319163360081b610100600160a81b031617600117815580f35b833461011357602036600319011261011357805460ff1916600117815580f35b50906003199060203683011261011a5782359167ffffffffffffffff918284116102995780828536030112610299576101a9610469565b508385013583811161027e5760e09085019283360301126102995780519060e082018281108582111761028657815285830135848111610282576101f290873691860101610538565b825260248301358481116102825761020f90873691860101610538565b6020830152604483013590820152610229606483016104c5565b60608201526084820135906001600160e01b03198216820361027e576080015260a481013591821161011e5760249361026592369201016104fb565b5001358015150361011357805460ff1916600117815580f35b8680fd5b8780fd5b634e487b7160e01b885260418752602488fd5b8580fd5b8382346102dc576003199060603683011261011657359067ffffffffffffffff82116101165760a0913603011261011357805460ff1916600117815580f35b5080fd5b506003199060203683011261011a573567ffffffffffffffff811161011a573603011261011357805460ff1916600117815580f35b838060031936011261011357805460ff1916600117815580f35b849391503461011a57602036600319011261011a57835460ff19166001178085558335914783116103af5750849182918291829160081c6001600160a01b03165af13d156103aa573d610389610384826104df565b61049f565b9081528460203d92013e5b1561039d578280f35b51630a12f52160e11b8152fd5b610394565b63cd78605960e01b81523085820152602490fd5b8434610113578060031936011261011357805460ff1916600117815580f35b84602036600319011261011357805460ff1916600117815580f35b505060031990828236011261011a573567ffffffffffffffff9081811161011e578284913603011261011a5760243590811161011a573603011261011357805460ff1916600117815580f35b505050346102dc5736600319011261011357805460ff1916600117815580f35b604051906040820182811067ffffffffffffffff82111761048957604052565b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff81118382101761048957604052565b359067ffffffffffffffff821682036104da57565b600080fd5b67ffffffffffffffff811161048957601f01601f191660200190565b81601f820112156104da57803590610515610384836104df565b92828452602083830101116104da57816000926020809301838601378301015290565b91906040838203126104da5761054c610469565b9267ffffffffffffffff9181358381116104da578201916040838303126104da57610575610469565b61057e846104c5565b815260209384810135908682116104da570183601f820112156104da57803590868211610489578160051b86806105b681840161049f565b809581520191830101918683116104da578701905b8282106106285750505084820152865282810135908482116104da5701906040828203126104da576105fb610469565b93823560ff811681036104da578552838301359081116104da5761061f92016104fb565b81830152830152565b81356001600160a01b03811681036104da5781529087019087016105cb56fea26469706673582212204be5dc0854d63f7558c8359cefa42e7bc63cfafc16e1b0d6e7a4af3c769c581e64736f6c63430008130033",
        "sourceMap": "409:2707:83:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:83;947:1;409:2707;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:83;;;;;;-1:-1:-1;;;;;;409:2707:83;789:10;409:2707;;-1:-1:-1;;;;;409:2707:83;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:83;;;;;;-1:-1:-1;;409:2707:83;947:1;409:2707;;;;;;-1:-1:-1;409:2707:83;-1:-1:-1;;409:2707:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;;409:2707:83;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;409:2707:83;947:1;409:2707;;;;;;;;;;;;;;-1:-1:-1;;;409:2707:83;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:83;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:83;947:1;409:2707;;;;;;;;;;-1:-1:-1;;;409:2707:83;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:83;947:1;409:2707;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:83;947:1;409:2707;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:83;;;;;;-1:-1:-1;;409:2707:83;;;;;;;;;1615:21:26;:30;-1:-1:-1;1611:109:26;;-1:-1:-1;409:2707:83;;;;;;;;;;-1:-1:-1;;;;;409:2707:83;1749:33:26;;409:2707:83;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;1796:8:26;1792:63;;409:2707:83;;;1792:63:26;409:2707:83;-1:-1:-1;;;1827:17:26;;;409:2707:83;;;1611:109:26;-1:-1:-1;;;1668:41:26;;1623:4;1668:41;;;409:2707:83;;;1668:41:26;409:2707:83;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:83;947:1;409:2707;;;;;;;;;-1:-1:-1;;409:2707:83;;;;;;-1:-1:-1;;409:2707:83;947:1;409:2707;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:83;947:1;409:2707;;;;;;;;;;;;;-1:-1:-1;;409:2707:83;;;;;;-1:-1:-1;;409:2707:83;947:1;409:2707;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;409:2707:83;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;409:2707:83;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;409:2707:83;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;409:2707:83;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "addStake()": "5a627dbc",
        "commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])": "f456b39e",
        "commitParentFinality((uint256,bytes32))": "11196974",
        "createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)": "a656ca5b",
        "fund((uint64,address[]),(uint8,bytes))": "18f44b70",
        "kill()": "41c0e1b5",
        "propagate(bytes32)": "25bf0db6",
        "register(uint256)": "f207564e",
        "release((uint8,bytes))": "6b2c1eef",
        "releaseRewardForRelayer(uint256)": "d8e25572",
        "releaseStake(uint256)": "45f54485",
        "sendCrossMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))": "c13175ef"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"crossMessagesHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"bottomUpCheckpoint\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes4\",\"name\":\"method\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct StorableMsg\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"}],\"internalType\":\"struct CrossMsg[]\",\"name\":\"messages\",\"type\":\"tuple[]\"}],\"name\":\"commitBottomUpCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ParentFinality\",\"name\":\"finality\",\"type\":\"tuple\"}],\"name\":\"commitParentFinality\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"crossMessagesHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"membershipRootHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"membershipWeight\",\"type\":\"uint256\"}],\"name\":\"createBottomUpCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"to\",\"type\":\"tuple\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgCid\",\"type\":\"bytes32\"}],\"name\":\"propagate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_genesisCircSupply\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"to\",\"type\":\"tuple\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseRewardForRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes4\",\"name\":\"method\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct StorableMsg\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"}],\"internalType\":\"struct CrossMsg\",\"name\":\"crossMsg\",\"type\":\"tuple\"}],\"name\":\"sendCrossMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake()\":{\"notice\":\"AddStake adds stake to the collateral of a subnet.\"},\"commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])\":{\"notice\":\"CommitChildCheck propagates the commitment of a checkpoint from a child subnet, process the cross-messages directed to the subnet.\"},\"commitParentFinality((uint256,bytes32))\":{\"notice\":\"commit the ipc parent finality into storage\"},\"createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)\":{\"notice\":\"creates a new bottom-up checkpoint\"},\"fund((uint64,address[]),(uint8,bytes))\":{\"notice\":\"Fund injects new funds from an account of the parent chain to a subnet. This functions receives a transaction with the FILs that want to be injected in the subnet. - Funds injected are frozen. - A new fund cross-message is created and stored to propagate it to the subnet. It will be picked up by miners to include it in the next possible block. - The cross-message nonce is updated\"},\"kill()\":{\"notice\":\"Kill propagates the kill signal from a subnet actor to unregister it from th hierarchy.\"},\"propagate(bytes32)\":{\"notice\":\"Propagates the stored postbox item for the given cid\"},\"release((uint8,bytes))\":{\"notice\":\"Release creates a new check message to release funds in parent chain This function burns the funds that will be released in the current subnet and propagates a new checkpoint message to the parent chain to signal the amount of funds that can be released for a specific address.\"},\"releaseRewardForRelayer(uint256)\":{\"notice\":\"Release reward for relayer\"},\"releaseStake(uint256)\":{\"notice\":\"Release stake recovers some collateral of the subnet\"},\"sendCrossMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))\":{\"notice\":\"SendCrossMessage sends an arbitrary cross-message to other subnet in the hierarchy. If the message includes any funds they need to be burnt (like in Release) before being propagated to the corresponding subnet. The circulating supply in each subnet needs to be updated as the message passes through them. Params expect a raw message without any subnet context (the IPC address is included in the message by the actor). Only actors are allowed to send arbitrary cross-messages as a side-effect of their execution. For plain token exchanges fund and release have to be used.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/subnetActorMock/DefaultGatewayMock.sol\":\"DefaultGatewayMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/fevmate/contracts/utils/FilAddress.sol\":{\"keccak256\":\"0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7\",\"dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5\",\"dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593\",\"dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT\"]},\"src/constants/Constants.sol\":{\"keccak256\":\"0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940\",\"dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx\"]},\"src/enums/ConsensusType.sol\":{\"keccak256\":\"0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0\",\"dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ\"]},\"src/enums/Status.sol\":{\"keccak256\":\"0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33\",\"dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R\"]},\"src/errors/IPCErrors.sol\":{\"keccak256\":\"0x89ee65643858f78c51c49457f6cd127c773f794bf1b70ea50bd5e59f1b48e467\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a4e9c19f69ab5bcd7ec8ac2b058a84bff7125ebc42eb195c7d8c7094c2049dec\",\"dweb:/ipfs/QmeN67eDEQefw5PS8iXk9TDzULVqK1QNA9ajzD3Z2jqxwK\"]},\"src/interfaces/IGateway.sol\":{\"keccak256\":\"0xb4209b44c3965fd233387ece78149461bd64a47788c3af24edb7c99ea1ef8868\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4db7a4573100063387e170c55a69772b20e403444e9d97b24cc220a71a52fbbb\",\"dweb:/ipfs/QmTYsSjmFsTwuNTXBByZKueJZLpe7RwNzLRWNPxXGA3YKB\"]},\"src/lib/AccountHelper.sol\":{\"keccak256\":\"0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc\",\"dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z\"]},\"src/lib/LibGatewayActorStorage.sol\":{\"keccak256\":\"0x4731b1de63c99bfccfa12c1c59481f27630994c8d04c0a555c6f6845f3873157\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://641337e8c2d3876ccefdb1f181c9cfeb9568f7c015f51da668d0c2dc582773d3\",\"dweb:/ipfs/QmNzgGXzXjULKJE6iYN6ioZLJvh3ykLdwt6gTjVp7gX9f6\"]},\"src/lib/LibStaking.sol\":{\"keccak256\":\"0x3ad98b426ca82cc98fd795a166c4a599c71e9f400e3b23bda58666e2febdf3b2\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://1e501014ed974118161282e81821aa05810da989a3b2091624e73327d45cab67\",\"dweb:/ipfs/QmSi2Ed42uhNoxuvdyigyhNpujEkrzc9Goe4gTbhgVuE3o\"]},\"src/lib/LibStakingChangeLog.sol\":{\"keccak256\":\"0x1ec44b7c417dae8bec87da6f1f48eb10a1eacdfb4935144dd9094dc1bbe9aa9b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d6fcbd14fe0743c0ea0a8a8d2ea851b4864559c3553773f07d6ae708bcc83318\",\"dweb:/ipfs/QmYb6v6U27FAY4ut6gCZy6oK1MjN165RTxUGhrY6zxtg93\"]},\"src/lib/LibSubnetActorStorage.sol\":{\"keccak256\":\"0xe11ae56d18ef43fd9ebdf9350977f9a26da4ee9a3288b46b04c5b973aa231f28\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f616b61fde1528a8666d09c962d7f23a82b200229691794933f39c4d3781fc1c\",\"dweb:/ipfs/QmXQsNGv6R34wAx1fRoyMiwdtGgQVn1qDXGCr7cED92vvJ\"]},\"src/lib/priority/LibMaxPQ.sol\":{\"keccak256\":\"0xf98fae415e764e627134ae440dea84d6879eaaa6950868cb56382324f84ae8db\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f290b5d20ac65c22eddbadeae1b49bbe78cb9e8e0cd187c2b93f98d13f9300a2\",\"dweb:/ipfs/QmXShiVpDzD8CLn8MeWSa4fQSeiTzyBHSA1VNZtLhJgTgW\"]},\"src/lib/priority/LibMinPQ.sol\":{\"keccak256\":\"0xc8c27239c0e82b489d9cb61f64be28d4fde6af8d6c8b2d27180ad9c42d602110\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://ed53f96d383f74c06a118ad3c8758df07b91f48dcd81769dac637d2289644796\",\"dweb:/ipfs/Qmaf4HdjTnuQZ44PRmqmWXCF3h616rhNA7uKEksPPtmxXK\"]},\"src/lib/priority/LibPQ.sol\":{\"keccak256\":\"0x4d4290087995d669e80f8fdd405bfaae545323393c0c54689b84965ffb87303e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://c21b563f6bf23afacb38fc97ab94d1afe12e4ad3dfde96d4484068bf26b13a2c\",\"dweb:/ipfs/Qmd5d3EnZwaSRnjG4ZFH2X8HKgymzd6vQgus8A6oEoh5pJ\"]},\"src/structs/Checkpoint.sol\":{\"keccak256\":\"0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a\",\"dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww\"]},\"src/structs/FvmAddress.sol\":{\"keccak256\":\"0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac\",\"dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu\"]},\"src/structs/Subnet.sol\":{\"keccak256\":\"0x1ddb626039baf4a4411f06b5340aaa80dcd65e9980da7673b73ab16633d871ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://af017eef4cb46262ac29b4cf47faa1fc5d2b61970ec7d6d021eae4cf45b5577b\",\"dweb:/ipfs/QmZJiA2t934fbe62513neQYzxSNswnCRTJybp7d6X2RyWR\"]},\"test/subnetActorMock/DefaultGatewayMock.sol\":{\"keccak256\":\"0x5b7bd85d2619091c3eb5fc743569fe4bd9b2449d6482fe21dde477832bad9b8d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://59aeb802eff48d8fdf083c0b1df58c44cbddf5d2ba2277001c70ad391c2d015f\",\"dweb:/ipfs/Qme1Bzsi79CUVAPYXKRhCB1XFFRmeNxhud8mPspRWUZMxV\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.19+commit.7dd6d404"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "AddressInsufficientBalance"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "FailedInnerCall"
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "addStake"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct BottomUpCheckpoint",
                            "name": "bottomUpCheckpoint",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct SubnetID",
                                    "name": "subnetID",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "uint64",
                                            "name": "root",
                                            "type": "uint64"
                                        },
                                        {
                                            "internalType": "address[]",
                                            "name": "route",
                                            "type": "address[]"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "blockHeight",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "blockHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "nextConfigurationNumber",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "crossMessagesHash",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "struct CrossMsg[]",
                            "name": "messages",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "struct StorableMsg",
                                    "name": "message",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IPCAddress",
                                            "name": "from",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "struct SubnetID",
                                                    "name": "subnetId",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint64",
                                                            "name": "root",
                                                            "type": "uint64"
                                                        },
                                                        {
                                                            "internalType": "address[]",
                                                            "name": "route",
                                                            "type": "address[]"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct FvmAddress",
                                                    "name": "rawAddress",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint8",
                                                            "name": "addrType",
                                                            "type": "uint8"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "payload",
                                                            "type": "bytes"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IPCAddress",
                                            "name": "to",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "struct SubnetID",
                                                    "name": "subnetId",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint64",
                                                            "name": "root",
                                                            "type": "uint64"
                                                        },
                                                        {
                                                            "internalType": "address[]",
                                                            "name": "route",
                                                            "type": "address[]"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct FvmAddress",
                                                    "name": "rawAddress",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint8",
                                                            "name": "addrType",
                                                            "type": "uint8"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "payload",
                                                            "type": "bytes"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "value",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint64",
                                            "name": "nonce",
                                            "type": "uint64"
                                        },
                                        {
                                            "internalType": "bytes4",
                                            "name": "method",
                                            "type": "bytes4"
                                        },
                                        {
                                            "internalType": "bytes",
                                            "name": "params",
                                            "type": "bytes"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "fee",
                                            "type": "uint256"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "bool",
                                    "name": "wrapped",
                                    "type": "bool"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "commitBottomUpCheckpoint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ParentFinality",
                            "name": "finality",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "height",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "blockHash",
                                    "type": "bytes32"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "commitParentFinality"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct BottomUpCheckpoint",
                            "name": "checkpoint",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct SubnetID",
                                    "name": "subnetID",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "uint64",
                                            "name": "root",
                                            "type": "uint64"
                                        },
                                        {
                                            "internalType": "address[]",
                                            "name": "route",
                                            "type": "address[]"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "blockHeight",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "blockHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "nextConfigurationNumber",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "crossMessagesHash",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes32",
                            "name": "membershipRootHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "membershipWeight",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "createBottomUpCheckpoint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct SubnetID",
                            "name": "subnetId",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint64",
                                    "name": "root",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "route",
                                    "type": "address[]"
                                }
                            ]
                        },
                        {
                            "internalType": "struct FvmAddress",
                            "name": "to",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint8",
                                    "name": "addrType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "payload",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "fund"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "kill"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "msgCid",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "propagate"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_genesisCircSupply",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "register"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct FvmAddress",
                            "name": "to",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint8",
                                    "name": "addrType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "payload",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "release"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "releaseRewardForRelayer"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "releaseStake"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct CrossMsg",
                            "name": "crossMsg",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct StorableMsg",
                                    "name": "message",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IPCAddress",
                                            "name": "from",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "struct SubnetID",
                                                    "name": "subnetId",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint64",
                                                            "name": "root",
                                                            "type": "uint64"
                                                        },
                                                        {
                                                            "internalType": "address[]",
                                                            "name": "route",
                                                            "type": "address[]"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct FvmAddress",
                                                    "name": "rawAddress",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint8",
                                                            "name": "addrType",
                                                            "type": "uint8"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "payload",
                                                            "type": "bytes"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IPCAddress",
                                            "name": "to",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "struct SubnetID",
                                                    "name": "subnetId",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint64",
                                                            "name": "root",
                                                            "type": "uint64"
                                                        },
                                                        {
                                                            "internalType": "address[]",
                                                            "name": "route",
                                                            "type": "address[]"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct FvmAddress",
                                                    "name": "rawAddress",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint8",
                                                            "name": "addrType",
                                                            "type": "uint8"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "payload",
                                                            "type": "bytes"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "value",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint64",
                                            "name": "nonce",
                                            "type": "uint64"
                                        },
                                        {
                                            "internalType": "bytes4",
                                            "name": "method",
                                            "type": "bytes4"
                                        },
                                        {
                                            "internalType": "bytes",
                                            "name": "params",
                                            "type": "bytes"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "fee",
                                            "type": "uint256"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "bool",
                                    "name": "wrapped",
                                    "type": "bool"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "sendCrossMessage"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {},
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "addStake()": {
                        "notice": "AddStake adds stake to the collateral of a subnet."
                    },
                    "commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])": {
                        "notice": "CommitChildCheck propagates the commitment of a checkpoint from a child subnet, process the cross-messages directed to the subnet."
                    },
                    "commitParentFinality((uint256,bytes32))": {
                        "notice": "commit the ipc parent finality into storage"
                    },
                    "createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)": {
                        "notice": "creates a new bottom-up checkpoint"
                    },
                    "fund((uint64,address[]),(uint8,bytes))": {
                        "notice": "Fund injects new funds from an account of the parent chain to a subnet. This functions receives a transaction with the FILs that want to be injected in the subnet. - Funds injected are frozen. - A new fund cross-message is created and stored to propagate it to the subnet. It will be picked up by miners to include it in the next possible block. - The cross-message nonce is updated"
                    },
                    "kill()": {
                        "notice": "Kill propagates the kill signal from a subnet actor to unregister it from th hierarchy."
                    },
                    "propagate(bytes32)": {
                        "notice": "Propagates the stored postbox item for the given cid"
                    },
                    "release((uint8,bytes))": {
                        "notice": "Release creates a new check message to release funds in parent chain This function burns the funds that will be released in the current subnet and propagates a new checkpoint message to the parent chain to signal the amount of funds that can be released for a specific address."
                    },
                    "releaseRewardForRelayer(uint256)": {
                        "notice": "Release reward for relayer"
                    },
                    "releaseStake(uint256)": {
                        "notice": "Release stake recovers some collateral of the subnet"
                    },
                    "sendCrossMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))": {
                        "notice": "SendCrossMessage sends an arbitrary cross-message to other subnet in the hierarchy. If the message includes any funds they need to be burnt (like in Release) before being propagated to the corresponding subnet. The circulating supply in each subnet needs to be updated as the message passes through them. Params expect a raw message without any subnet context (the IPC address is included in the message by the actor). Only actors are allowed to send arbitrary cross-messages as a side-effect of their execution. For plain token exchanges fund and release have to be used."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "ds-test/=lib/forge-std/lib/ds-test/src/",
                "elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "fevmate/=lib/fevmate/contracts/",
                "forge-std/=lib/forge-std/src/",
                "murky/=lib/murky/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
                "openzeppelin/=lib/openzeppelin-contracts/contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "test/subnetActorMock/DefaultGatewayMock.sol": "DefaultGatewayMock"
            },
            "libraries": {},
            "viaIR": true
        },
        "sources": {
            "lib/fevmate/contracts/utils/FilAddress.sol": {
                "keccak256": "0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31",
                "urls": [
                    "bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7",
                    "dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                "keccak256": "0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1",
                "urls": [
                    "bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5",
                    "dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
                "keccak256": "0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892",
                "urls": [
                    "bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593",
                    "dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT"
                ],
                "license": "MIT"
            },
            "src/constants/Constants.sol": {
                "keccak256": "0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546",
                "urls": [
                    "bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940",
                    "dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/enums/ConsensusType.sol": {
                "keccak256": "0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d",
                "urls": [
                    "bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0",
                    "dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/enums/Status.sol": {
                "keccak256": "0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c",
                "urls": [
                    "bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33",
                    "dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/errors/IPCErrors.sol": {
                "keccak256": "0x89ee65643858f78c51c49457f6cd127c773f794bf1b70ea50bd5e59f1b48e467",
                "urls": [
                    "bzz-raw://a4e9c19f69ab5bcd7ec8ac2b058a84bff7125ebc42eb195c7d8c7094c2049dec",
                    "dweb:/ipfs/QmeN67eDEQefw5PS8iXk9TDzULVqK1QNA9ajzD3Z2jqxwK"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/interfaces/IGateway.sol": {
                "keccak256": "0xb4209b44c3965fd233387ece78149461bd64a47788c3af24edb7c99ea1ef8868",
                "urls": [
                    "bzz-raw://4db7a4573100063387e170c55a69772b20e403444e9d97b24cc220a71a52fbbb",
                    "dweb:/ipfs/QmTYsSjmFsTwuNTXBByZKueJZLpe7RwNzLRWNPxXGA3YKB"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/AccountHelper.sol": {
                "keccak256": "0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5",
                "urls": [
                    "bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc",
                    "dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/LibGatewayActorStorage.sol": {
                "keccak256": "0x4731b1de63c99bfccfa12c1c59481f27630994c8d04c0a555c6f6845f3873157",
                "urls": [
                    "bzz-raw://641337e8c2d3876ccefdb1f181c9cfeb9568f7c015f51da668d0c2dc582773d3",
                    "dweb:/ipfs/QmNzgGXzXjULKJE6iYN6ioZLJvh3ykLdwt6gTjVp7gX9f6"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/LibStaking.sol": {
                "keccak256": "0x3ad98b426ca82cc98fd795a166c4a599c71e9f400e3b23bda58666e2febdf3b2",
                "urls": [
                    "bzz-raw://1e501014ed974118161282e81821aa05810da989a3b2091624e73327d45cab67",
                    "dweb:/ipfs/QmSi2Ed42uhNoxuvdyigyhNpujEkrzc9Goe4gTbhgVuE3o"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/LibStakingChangeLog.sol": {
                "keccak256": "0x1ec44b7c417dae8bec87da6f1f48eb10a1eacdfb4935144dd9094dc1bbe9aa9b",
                "urls": [
                    "bzz-raw://d6fcbd14fe0743c0ea0a8a8d2ea851b4864559c3553773f07d6ae708bcc83318",
                    "dweb:/ipfs/QmYb6v6U27FAY4ut6gCZy6oK1MjN165RTxUGhrY6zxtg93"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/LibSubnetActorStorage.sol": {
                "keccak256": "0xe11ae56d18ef43fd9ebdf9350977f9a26da4ee9a3288b46b04c5b973aa231f28",
                "urls": [
                    "bzz-raw://f616b61fde1528a8666d09c962d7f23a82b200229691794933f39c4d3781fc1c",
                    "dweb:/ipfs/QmXQsNGv6R34wAx1fRoyMiwdtGgQVn1qDXGCr7cED92vvJ"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/priority/LibMaxPQ.sol": {
                "keccak256": "0xf98fae415e764e627134ae440dea84d6879eaaa6950868cb56382324f84ae8db",
                "urls": [
                    "bzz-raw://f290b5d20ac65c22eddbadeae1b49bbe78cb9e8e0cd187c2b93f98d13f9300a2",
                    "dweb:/ipfs/QmXShiVpDzD8CLn8MeWSa4fQSeiTzyBHSA1VNZtLhJgTgW"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/priority/LibMinPQ.sol": {
                "keccak256": "0xc8c27239c0e82b489d9cb61f64be28d4fde6af8d6c8b2d27180ad9c42d602110",
                "urls": [
                    "bzz-raw://ed53f96d383f74c06a118ad3c8758df07b91f48dcd81769dac637d2289644796",
                    "dweb:/ipfs/Qmaf4HdjTnuQZ44PRmqmWXCF3h616rhNA7uKEksPPtmxXK"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/priority/LibPQ.sol": {
                "keccak256": "0x4d4290087995d669e80f8fdd405bfaae545323393c0c54689b84965ffb87303e",
                "urls": [
                    "bzz-raw://c21b563f6bf23afacb38fc97ab94d1afe12e4ad3dfde96d4484068bf26b13a2c",
                    "dweb:/ipfs/Qmd5d3EnZwaSRnjG4ZFH2X8HKgymzd6vQgus8A6oEoh5pJ"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/structs/Checkpoint.sol": {
                "keccak256": "0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746",
                "urls": [
                    "bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a",
                    "dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/structs/FvmAddress.sol": {
                "keccak256": "0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069",
                "urls": [
                    "bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac",
                    "dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/structs/Subnet.sol": {
                "keccak256": "0x1ddb626039baf4a4411f06b5340aaa80dcd65e9980da7673b73ab16633d871ce",
                "urls": [
                    "bzz-raw://af017eef4cb46262ac29b4cf47faa1fc5d2b61970ec7d6d021eae4cf45b5577b",
                    "dweb:/ipfs/QmZJiA2t934fbe62513neQYzxSNswnCRTJybp7d6X2RyWR"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "test/subnetActorMock/DefaultGatewayMock.sol": {
                "keccak256": "0x5b7bd85d2619091c3eb5fc743569fe4bd9b2449d6482fe21dde477832bad9b8d",
                "urls": [
                    "bzz-raw://59aeb802eff48d8fdf083c0b1df58c44cbddf5d2ba2277001c70ad391c2d015f",
                    "dweb:/ipfs/Qme1Bzsi79CUVAPYXKRhCB1XFFRmeNxhud8mPspRWUZMxV"
                ],
                "license": "MIT OR Apache-2.0"
            }
        },
        "version": 1
    },
    "ast": {
        "absolutePath": "test/subnetActorMock/DefaultGatewayMock.sol",
        "id": 49932,
        "exportedSymbols": {
            "Address": [32409],
            "BottomUpCheckpoint": [46824],
            "CrossMsg": [46846],
            "DefaultGatewayMock": [49931],
            "FvmAddress": [46870],
            "IGateway": [39440],
            "ParentFinality": [46807],
            "SubnetID": [46900]
        },
        "nodeType": "SourceUnit",
        "src": "46:3070:83",
        "nodes": [
            {
                "id": 49722,
                "nodeType": "PragmaDirective",
                "src": "46:23:83",
                "nodes": [],
                "literals": ["solidity", "0.8", ".19"]
            },
            {
                "id": 49724,
                "nodeType": "ImportDirective",
                "src": "71:59:83",
                "nodes": [],
                "absolutePath": "src/interfaces/IGateway.sol",
                "file": "../../src/interfaces/IGateway.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 49932,
                "sourceUnit": 39441,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 49723,
                            "name": "IGateway",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39440,
                            "src": "79:8:83",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 49728,
                "nodeType": "ImportDirective",
                "src": "131:94:83",
                "nodes": [],
                "absolutePath": "src/structs/Checkpoint.sol",
                "file": "../../src/structs/Checkpoint.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 49932,
                "sourceUnit": 46864,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 49725,
                            "name": "BottomUpCheckpoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46824,
                            "src": "139:18:83",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 49726,
                            "name": "CrossMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46846,
                            "src": "159:8:83",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 49727,
                            "name": "ParentFinality",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46807,
                            "src": "169:14:83",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 49730,
                "nodeType": "ImportDirective",
                "src": "226:54:83",
                "nodes": [],
                "absolutePath": "src/structs/Subnet.sol",
                "file": "../../src/structs/Subnet.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 49932,
                "sourceUnit": 47033,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 49729,
                            "name": "SubnetID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46900,
                            "src": "234:8:83",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 49732,
                "nodeType": "ImportDirective",
                "src": "281:60:83",
                "nodes": [],
                "absolutePath": "src/structs/FvmAddress.sol",
                "file": "../../src/structs/FvmAddress.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 49932,
                "sourceUnit": 46878,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 49731,
                            "name": "FvmAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46870,
                            "src": "289:10:83",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 49734,
                "nodeType": "ImportDirective",
                "src": "342:65:83",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
                "file": "openzeppelin-contracts/utils/Address.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 49932,
                "sourceUnit": 32410,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 49733,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32409,
                            "src": "350:7:83",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 49931,
                "nodeType": "ContractDefinition",
                "src": "409:2707:83",
                "nodes": [
                    {
                        "id": 49739,
                        "nodeType": "UsingForDirective",
                        "src": "455:34:83",
                        "nodes": [],
                        "global": false,
                        "libraryName": {
                            "id": 49737,
                            "name": "Address",
                            "nameLocations": ["461:7:83"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 32409,
                            "src": "461:7:83"
                        },
                        "typeName": {
                            "id": 49738,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "473:15:83",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                            }
                        }
                    },
                    {
                        "id": 49741,
                        "nodeType": "VariableDeclaration",
                        "src": "495:19:83",
                        "nodes": [],
                        "constant": false,
                        "mutability": "mutable",
                        "name": "dummy",
                        "nameLocation": "509:5:83",
                        "scope": 49931,
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                        },
                        "typeName": {
                            "id": 49740,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "495:5:83",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "id": 49743,
                        "nodeType": "VariableDeclaration",
                        "src": "520:19:83",
                        "nodes": [],
                        "constant": false,
                        "mutability": "mutable",
                        "name": "subnetActor",
                        "nameLocation": "528:11:83",
                        "scope": 49931,
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 49742,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "520:7:83",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "id": 49764,
                        "nodeType": "FunctionDefinition",
                        "src": "546:260:83",
                        "nodes": [],
                        "body": {
                            "id": 49763,
                            "nodeType": "Block",
                            "src": "609:197:83",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "expression": {
                                            "id": 49748,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "645:3:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 49750,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "649:5:83",
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "src": "645:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 49751,
                                    "nodeType": "ExpressionStatement",
                                    "src": "645:9:83"
                                },
                                {
                                    "expression": {
                                        "id": 49752,
                                        "name": "_genesisCircSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49745,
                                        "src": "691:18:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 49753,
                                    "nodeType": "ExpressionStatement",
                                    "src": "691:18:83"
                                },
                                {
                                    "expression": {
                                        "id": 49756,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 49754,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49741,
                                            "src": "755:5:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 49755,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "763:1:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "755:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 49757,
                                    "nodeType": "ExpressionStatement",
                                    "src": "755:9:83"
                                },
                                {
                                    "expression": {
                                        "id": 49761,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 49758,
                                            "name": "subnetActor",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49743,
                                            "src": "775:11:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 49759,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "789:3:83",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 49760,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "793:6:83",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "789:10:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "775:24:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 49762,
                                    "nodeType": "ExpressionStatement",
                                    "src": "775:24:83"
                                }
                            ]
                        },
                        "baseFunctions": [39360],
                        "functionSelector": "f207564e",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "register",
                        "nameLocation": "555:8:83",
                        "parameters": {
                            "id": 49746,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 49745,
                                    "mutability": "mutable",
                                    "name": "_genesisCircSupply",
                                    "nameLocation": "572:18:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49764,
                                    "src": "564:26:83",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 49744,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "564:7:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "563:28:83"
                        },
                        "returnParameters": {
                            "id": 49747,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "609:0:83"
                        },
                        "scope": 49931,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 49776,
                        "nodeType": "FunctionDefinition",
                        "src": "812:143:83",
                        "nodes": [],
                        "body": {
                            "id": 49775,
                            "nodeType": "Block",
                            "src": "849:106:83",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "expression": {
                                            "id": 49767,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "885:3:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 49769,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "889:5:83",
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "src": "885:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 49770,
                                    "nodeType": "ExpressionStatement",
                                    "src": "885:9:83"
                                },
                                {
                                    "expression": {
                                        "id": 49773,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 49771,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49741,
                                            "src": "939:5:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 49772,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "947:1:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "939:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 49774,
                                    "nodeType": "ExpressionStatement",
                                    "src": "939:9:83"
                                }
                            ]
                        },
                        "baseFunctions": [39364],
                        "functionSelector": "5a627dbc",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "addStake",
                        "nameLocation": "821:8:83",
                        "parameters": {
                            "id": 49765,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "829:2:83"
                        },
                        "returnParameters": {
                            "id": 49766,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "849:0:83"
                        },
                        "scope": 49931,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 49796,
                        "nodeType": "FunctionDefinition",
                        "src": "961:199:83",
                        "nodes": [],
                        "body": {
                            "id": 49795,
                            "nodeType": "Block",
                            "src": "1008:152:83",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 49781,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49778,
                                        "src": "1044:6:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 49782,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1044:6:83"
                                },
                                {
                                    "expression": {
                                        "id": 49785,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 49783,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49741,
                                            "src": "1095:5:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 49784,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1103:1:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "1095:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 49786,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1095:9:83"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 49792,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 49778,
                                                "src": "1146:6:83",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 49789,
                                                        "name": "subnetActor",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 49743,
                                                        "src": "1123:11:83",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 49788,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1115:8:83",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 49787,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1115:8:83",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 49790,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1115:20:83",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 49791,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1136:9:83",
                                            "memberName": "sendValue",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 32081,
                                            "src": "1115:30:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
                                                "typeString": "function (address payable,uint256)"
                                            }
                                        },
                                        "id": 49793,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1115:38:83",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 49794,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1115:38:83"
                                }
                            ]
                        },
                        "baseFunctions": [39370],
                        "functionSelector": "45f54485",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "releaseStake",
                        "nameLocation": "970:12:83",
                        "parameters": {
                            "id": 49779,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 49778,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "991:6:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49796,
                                    "src": "983:14:83",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 49777,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "983:7:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "982:16:83"
                        },
                        "returnParameters": {
                            "id": 49780,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1008:0:83"
                        },
                        "scope": 49931,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 49808,
                        "nodeType": "FunctionDefinition",
                        "src": "1166:161:83",
                        "nodes": [],
                        "body": {
                            "id": 49807,
                            "nodeType": "Block",
                            "src": "1224:103:83",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 49801,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49798,
                                        "src": "1260:6:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 49802,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1260:6:83"
                                },
                                {
                                    "expression": {
                                        "id": 49805,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 49803,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49741,
                                            "src": "1311:5:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 49804,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1319:1:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "1311:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 49806,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1311:9:83"
                                }
                            ]
                        },
                        "baseFunctions": [39376],
                        "functionSelector": "d8e25572",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "releaseRewardForRelayer",
                        "nameLocation": "1175:23:83",
                        "parameters": {
                            "id": 49799,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 49798,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "1207:6:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49808,
                                    "src": "1199:14:83",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 49797,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1199:7:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1198:16:83"
                        },
                        "returnParameters": {
                            "id": 49800,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1224:0:83"
                        },
                        "scope": 49931,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 49820,
                        "nodeType": "FunctionDefinition",
                        "src": "1333:132:83",
                        "nodes": [],
                        "body": {
                            "id": 49819,
                            "nodeType": "Block",
                            "src": "1358:107:83",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "expression": {
                                            "id": 49811,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "1394:3:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 49813,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1398:6:83",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "1394:10:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 49814,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1394:10:83"
                                },
                                {
                                    "expression": {
                                        "id": 49817,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 49815,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49741,
                                            "src": "1449:5:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 49816,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1457:1:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "1449:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 49818,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1449:9:83"
                                }
                            ]
                        },
                        "baseFunctions": [39380],
                        "functionSelector": "41c0e1b5",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "kill",
                        "nameLocation": "1342:4:83",
                        "parameters": {
                            "id": 49809,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1346:2:83"
                        },
                        "returnParameters": {
                            "id": 49810,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1358:0:83"
                        },
                        "scope": 49931,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 49840,
                        "nodeType": "FunctionDefinition",
                        "src": "1618:254:83",
                        "nodes": [],
                        "body": {
                            "id": 49839,
                            "nodeType": "Block",
                            "src": "1739:133:83",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 49831,
                                        "name": "bottomUpCheckpoint",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49824,
                                        "src": "1775:18:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BottomUpCheckpoint_$46824_calldata_ptr",
                                            "typeString": "struct BottomUpCheckpoint calldata"
                                        }
                                    },
                                    "id": 49832,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1775:18:83"
                                },
                                {
                                    "expression": {
                                        "id": 49833,
                                        "name": "messages",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49828,
                                        "src": "1803:8:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_CrossMsg_$46846_calldata_ptr_$dyn_calldata_ptr",
                                            "typeString": "struct CrossMsg calldata[] calldata"
                                        }
                                    },
                                    "id": 49834,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1803:8:83"
                                },
                                {
                                    "expression": {
                                        "id": 49837,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 49835,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49741,
                                            "src": "1856:5:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 49836,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1864:1:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "1856:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 49838,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1856:9:83"
                                }
                            ]
                        },
                        "baseFunctions": [39391],
                        "documentation": {
                            "id": 49821,
                            "nodeType": "StructuredDocumentation",
                            "src": "1471:142:83",
                            "text": "CommitChildCheck propagates the commitment of a checkpoint from a child subnet,\n process the cross-messages directed to the subnet."
                        },
                        "functionSelector": "f456b39e",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "commitBottomUpCheckpoint",
                        "nameLocation": "1627:24:83",
                        "parameters": {
                            "id": 49829,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 49824,
                                    "mutability": "mutable",
                                    "name": "bottomUpCheckpoint",
                                    "nameLocation": "1680:18:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49840,
                                    "src": "1652:46:83",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BottomUpCheckpoint_$46824_calldata_ptr",
                                        "typeString": "struct BottomUpCheckpoint"
                                    },
                                    "typeName": {
                                        "id": 49823,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 49822,
                                            "name": "BottomUpCheckpoint",
                                            "nameLocations": ["1652:18:83"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46824,
                                            "src": "1652:18:83"
                                        },
                                        "referencedDeclaration": 46824,
                                        "src": "1652:18:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BottomUpCheckpoint_$46824_storage_ptr",
                                            "typeString": "struct BottomUpCheckpoint"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 49828,
                                    "mutability": "mutable",
                                    "name": "messages",
                                    "nameLocation": "1720:8:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49840,
                                    "src": "1700:28:83",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_CrossMsg_$46846_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct CrossMsg[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 49826,
                                            "nodeType": "UserDefinedTypeName",
                                            "pathNode": {
                                                "id": 49825,
                                                "name": "CrossMsg",
                                                "nameLocations": ["1700:8:83"],
                                                "nodeType": "IdentifierPath",
                                                "referencedDeclaration": 46846,
                                                "src": "1700:8:83"
                                            },
                                            "referencedDeclaration": 46846,
                                            "src": "1700:8:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_CrossMsg_$46846_storage_ptr",
                                                "typeString": "struct CrossMsg"
                                            }
                                        },
                                        "id": 49827,
                                        "nodeType": "ArrayTypeName",
                                        "src": "1700:10:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_CrossMsg_$46846_storage_$dyn_storage_ptr",
                                            "typeString": "struct CrossMsg[]"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1651:78:83"
                        },
                        "returnParameters": {
                            "id": 49830,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1739:0:83"
                        },
                        "scope": 49931,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 49858,
                        "nodeType": "FunctionDefinition",
                        "src": "1878:200:83",
                        "nodes": [],
                        "body": {
                            "id": 49857,
                            "nodeType": "Block",
                            "src": "1961:117:83",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 49849,
                                        "name": "subnetId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49843,
                                        "src": "1997:8:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_SubnetID_$46900_calldata_ptr",
                                            "typeString": "struct SubnetID calldata"
                                        }
                                    },
                                    "id": 49850,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1997:8:83"
                                },
                                {
                                    "expression": {
                                        "id": 49851,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49846,
                                        "src": "2015:2:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FvmAddress_$46870_calldata_ptr",
                                            "typeString": "struct FvmAddress calldata"
                                        }
                                    },
                                    "id": 49852,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2015:2:83"
                                },
                                {
                                    "expression": {
                                        "id": 49855,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 49853,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49741,
                                            "src": "2062:5:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 49854,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2070:1:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2062:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 49856,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2062:9:83"
                                }
                            ]
                        },
                        "baseFunctions": [39401],
                        "functionSelector": "18f44b70",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "fund",
                        "nameLocation": "1887:4:83",
                        "parameters": {
                            "id": 49847,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 49843,
                                    "mutability": "mutable",
                                    "name": "subnetId",
                                    "nameLocation": "1910:8:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49858,
                                    "src": "1892:26:83",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SubnetID_$46900_calldata_ptr",
                                        "typeString": "struct SubnetID"
                                    },
                                    "typeName": {
                                        "id": 49842,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 49841,
                                            "name": "SubnetID",
                                            "nameLocations": ["1892:8:83"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46900,
                                            "src": "1892:8:83"
                                        },
                                        "referencedDeclaration": 46900,
                                        "src": "1892:8:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_SubnetID_$46900_storage_ptr",
                                            "typeString": "struct SubnetID"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 49846,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1940:2:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49858,
                                    "src": "1920:22:83",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FvmAddress_$46870_calldata_ptr",
                                        "typeString": "struct FvmAddress"
                                    },
                                    "typeName": {
                                        "id": 49845,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 49844,
                                            "name": "FvmAddress",
                                            "nameLocations": ["1920:10:83"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46870,
                                            "src": "1920:10:83"
                                        },
                                        "referencedDeclaration": 46870,
                                        "src": "1920:10:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FvmAddress_$46870_storage_ptr",
                                            "typeString": "struct FvmAddress"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1891:52:83"
                        },
                        "returnParameters": {
                            "id": 49848,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1961:0:83"
                        },
                        "scope": 49931,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 49871,
                        "nodeType": "FunctionDefinition",
                        "src": "2084:157:83",
                        "nodes": [],
                        "body": {
                            "id": 49870,
                            "nodeType": "Block",
                            "src": "2142:99:83",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 49864,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49861,
                                        "src": "2178:2:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FvmAddress_$46870_calldata_ptr",
                                            "typeString": "struct FvmAddress calldata"
                                        }
                                    },
                                    "id": 49865,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2178:2:83"
                                },
                                {
                                    "expression": {
                                        "id": 49868,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 49866,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49741,
                                            "src": "2225:5:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 49867,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2233:1:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2225:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 49869,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2225:9:83"
                                }
                            ]
                        },
                        "baseFunctions": [39408],
                        "functionSelector": "6b2c1eef",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "release",
                        "nameLocation": "2093:7:83",
                        "parameters": {
                            "id": 49862,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 49861,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "2121:2:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49871,
                                    "src": "2101:22:83",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FvmAddress_$46870_calldata_ptr",
                                        "typeString": "struct FvmAddress"
                                    },
                                    "typeName": {
                                        "id": 49860,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 49859,
                                            "name": "FvmAddress",
                                            "nameLocations": ["2101:10:83"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46870,
                                            "src": "2101:10:83"
                                        },
                                        "referencedDeclaration": 46870,
                                        "src": "2101:10:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FvmAddress_$46870_storage_ptr",
                                            "typeString": "struct FvmAddress"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2100:24:83"
                        },
                        "returnParameters": {
                            "id": 49863,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2142:0:83"
                        },
                        "scope": 49931,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 49884,
                        "nodeType": "FunctionDefinition",
                        "src": "2247:174:83",
                        "nodes": [],
                        "body": {
                            "id": 49883,
                            "nodeType": "Block",
                            "src": "2316:105:83",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 49877,
                                        "name": "crossMsg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49874,
                                        "src": "2352:8:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CrossMsg_$46846_memory_ptr",
                                            "typeString": "struct CrossMsg memory"
                                        }
                                    },
                                    "id": 49878,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2352:8:83"
                                },
                                {
                                    "expression": {
                                        "id": 49881,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 49879,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49741,
                                            "src": "2405:5:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 49880,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2413:1:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2405:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 49882,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2405:9:83"
                                }
                            ]
                        },
                        "baseFunctions": [39415],
                        "functionSelector": "c13175ef",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "sendCrossMessage",
                        "nameLocation": "2256:16:83",
                        "parameters": {
                            "id": 49875,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 49874,
                                    "mutability": "mutable",
                                    "name": "crossMsg",
                                    "nameLocation": "2289:8:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49884,
                                    "src": "2273:24:83",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CrossMsg_$46846_memory_ptr",
                                        "typeString": "struct CrossMsg"
                                    },
                                    "typeName": {
                                        "id": 49873,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 49872,
                                            "name": "CrossMsg",
                                            "nameLocations": ["2273:8:83"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46846,
                                            "src": "2273:8:83"
                                        },
                                        "referencedDeclaration": 46846,
                                        "src": "2273:8:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CrossMsg_$46846_storage_ptr",
                                            "typeString": "struct CrossMsg"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2272:26:83"
                        },
                        "returnParameters": {
                            "id": 49876,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2316:0:83"
                        },
                        "scope": 49931,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 49896,
                        "nodeType": "FunctionDefinition",
                        "src": "2427:155:83",
                        "nodes": [],
                        "body": {
                            "id": 49895,
                            "nodeType": "Block",
                            "src": "2479:103:83",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 49889,
                                        "name": "msgCid",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49886,
                                        "src": "2515:6:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "id": 49890,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2515:6:83"
                                },
                                {
                                    "expression": {
                                        "id": 49893,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 49891,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49741,
                                            "src": "2566:5:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 49892,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2574:1:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2566:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 49894,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2566:9:83"
                                }
                            ]
                        },
                        "baseFunctions": [39421],
                        "functionSelector": "25bf0db6",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "propagate",
                        "nameLocation": "2436:9:83",
                        "parameters": {
                            "id": 49887,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 49886,
                                    "mutability": "mutable",
                                    "name": "msgCid",
                                    "nameLocation": "2454:6:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49896,
                                    "src": "2446:14:83",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 49885,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2446:7:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2445:16:83"
                        },
                        "returnParameters": {
                            "id": 49888,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2479:0:83"
                        },
                        "scope": 49931,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 49909,
                        "nodeType": "FunctionDefinition",
                        "src": "2588:192:83",
                        "nodes": [],
                        "body": {
                            "id": 49908,
                            "nodeType": "Block",
                            "src": "2675:105:83",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 49902,
                                        "name": "finality",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49899,
                                        "src": "2711:8:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ParentFinality_$46807_calldata_ptr",
                                            "typeString": "struct ParentFinality calldata"
                                        }
                                    },
                                    "id": 49903,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2711:8:83"
                                },
                                {
                                    "expression": {
                                        "id": 49906,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 49904,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49741,
                                            "src": "2764:5:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 49905,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2772:1:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2764:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 49907,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2764:9:83"
                                }
                            ]
                        },
                        "baseFunctions": [39428],
                        "functionSelector": "11196974",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "commitParentFinality",
                        "nameLocation": "2597:20:83",
                        "parameters": {
                            "id": 49900,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 49899,
                                    "mutability": "mutable",
                                    "name": "finality",
                                    "nameLocation": "2651:8:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49909,
                                    "src": "2627:32:83",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ParentFinality_$46807_calldata_ptr",
                                        "typeString": "struct ParentFinality"
                                    },
                                    "typeName": {
                                        "id": 49898,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 49897,
                                            "name": "ParentFinality",
                                            "nameLocations": ["2627:14:83"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46807,
                                            "src": "2627:14:83"
                                        },
                                        "referencedDeclaration": 46807,
                                        "src": "2627:14:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ParentFinality_$46807_storage_ptr",
                                            "typeString": "struct ParentFinality"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2617:48:83"
                        },
                        "returnParameters": {
                            "id": 49901,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2675:0:83"
                        },
                        "scope": 49931,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 49930,
                        "nodeType": "FunctionDefinition",
                        "src": "2786:328:83",
                        "nodes": [],
                        "body": {
                            "id": 49929,
                            "nodeType": "Block",
                            "src": "2953:161:83",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 49919,
                                        "name": "checkpoint",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49912,
                                        "src": "2989:10:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BottomUpCheckpoint_$46824_calldata_ptr",
                                            "typeString": "struct BottomUpCheckpoint calldata"
                                        }
                                    },
                                    "id": 49920,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2989:10:83"
                                },
                                {
                                    "expression": {
                                        "id": 49921,
                                        "name": "membershipRootHash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49914,
                                        "src": "3009:18:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "id": 49922,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3009:18:83"
                                },
                                {
                                    "expression": {
                                        "id": 49923,
                                        "name": "membershipWeight",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49916,
                                        "src": "3037:16:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 49924,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3037:16:83"
                                },
                                {
                                    "expression": {
                                        "id": 49927,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 49925,
                                            "name": "dummy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49741,
                                            "src": "3098:5:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 49926,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3106:1:83",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "3098:9:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 49928,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3098:9:83"
                                }
                            ]
                        },
                        "baseFunctions": [39439],
                        "functionSelector": "a656ca5b",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "createBottomUpCheckpoint",
                        "nameLocation": "2795:24:83",
                        "parameters": {
                            "id": 49917,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 49912,
                                    "mutability": "mutable",
                                    "name": "checkpoint",
                                    "nameLocation": "2857:10:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49930,
                                    "src": "2829:38:83",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BottomUpCheckpoint_$46824_calldata_ptr",
                                        "typeString": "struct BottomUpCheckpoint"
                                    },
                                    "typeName": {
                                        "id": 49911,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 49910,
                                            "name": "BottomUpCheckpoint",
                                            "nameLocations": ["2829:18:83"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 46824,
                                            "src": "2829:18:83"
                                        },
                                        "referencedDeclaration": 46824,
                                        "src": "2829:18:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BottomUpCheckpoint_$46824_storage_ptr",
                                            "typeString": "struct BottomUpCheckpoint"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 49914,
                                    "mutability": "mutable",
                                    "name": "membershipRootHash",
                                    "nameLocation": "2885:18:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49930,
                                    "src": "2877:26:83",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 49913,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2877:7:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 49916,
                                    "mutability": "mutable",
                                    "name": "membershipWeight",
                                    "nameLocation": "2921:16:83",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 49930,
                                    "src": "2913:24:83",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 49915,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2913:7:83",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2819:124:83"
                        },
                        "returnParameters": {
                            "id": 49918,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2953:0:83"
                        },
                        "scope": 49931,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 49735,
                            "name": "IGateway",
                            "nameLocations": ["440:8:83"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39440,
                            "src": "440:8:83"
                        },
                        "id": 49736,
                        "nodeType": "InheritanceSpecifier",
                        "src": "440:8:83"
                    }
                ],
                "canonicalName": "DefaultGatewayMock",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "linearizedBaseContracts": [49931, 39440],
                "name": "DefaultGatewayMock",
                "nameLocation": "418:18:83",
                "scope": 49932,
                "usedErrors": [32032, 32040]
            }
        ],
        "license": "MIT OR Apache-2.0"
    },
    "id": 83
}
