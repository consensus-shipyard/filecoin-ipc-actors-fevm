{
  "abi": [
    {
      "inputs": [],
      "name": "EMPTY_BOTTOMUPCHECKPOINT_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "root",
                  "type": "uint64"
                },
                {
                  "internalType": "address[]",
                  "name": "route",
                  "type": "address[]"
                }
              ],
              "internalType": "struct SubnetID",
              "name": "subnetID",
              "type": "tuple"
            },
            {
              "internalType": "uint64",
              "name": "blockHeight",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nextConfigurationNumber",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "crossMessagesHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BottomUpCheckpoint",
          "name": "bottomUpCheckpoint",
          "type": "tuple"
        }
      ],
      "name": "isEmpty",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "root",
                  "type": "uint64"
                },
                {
                  "internalType": "address[]",
                  "name": "route",
                  "type": "address[]"
                }
              ],
              "internalType": "struct SubnetID",
              "name": "subnetID",
              "type": "tuple"
            },
            {
              "internalType": "uint64",
              "name": "blockHeight",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "blockHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nextConfigurationNumber",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "crossMessagesHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BottomUpCheckpoint",
          "name": "bottomupCheckpoint",
          "type": "tuple"
        }
      ],
      "name": "toHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6104b861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c806339aa47fb1461005057806345d51b1214610076578063aa9fb55814610099575b600080fd5b61006361005e366004610264565b6100a1565b6040519081526020015b60405180910390f35b610089610084366004610264565b6100d1565b604051901515815260200161006d565b61006361014a565b6000816040516020016100b491906103c3565b604051602081830303815290604052805190602001209050919050565b6040805160e081018252600060a0820181815283518281526020808201865260c08501919091529083528083018290528284018290526060830182905260808301829052925190926101249291016103c3565b60405160208183030381529060405280519060200120610143836100a1565b1492915050565b6040805160e081018252600060a0820181815283518281526020808201865260c0850191909152908352808301829052828401829052606083018290526080830191909152915161019b92016103c3565b6040516020818303038152906040528051906020012081565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156101ed576101ed6101b4565b60405290565b6040805190810167ffffffffffffffff811182821017156101ed576101ed6101b4565b604051601f8201601f1916810167ffffffffffffffff8111828210171561023f5761023f6101b4565b604052919050565b803567ffffffffffffffff8116811461025f57600080fd5b919050565b6000602080838503121561027757600080fd5b823567ffffffffffffffff8082111561028f57600080fd5b9084019060a082870312156102a357600080fd5b6102ab6101ca565b8235828111156102ba57600080fd5b8301604081890312156102cc57600080fd5b6102d46101f3565b6102dd82610247565b815285820135848111156102f057600080fd5b80830192505088601f83011261030557600080fd5b813584811115610317576103176101b4565b8060051b9450610328878601610216565b818152948301870194878101908b87111561034257600080fd5b938801935b8685101561037957843592506001600160a01b03831683146103695760008081fd5b8282529388019390880190610347565b83890152505082525061038d838501610247565b84820152604083013560408201526103a760608401610247565b6060820152608083013560808201528094505050505092915050565b6020808252825160a083830152805167ffffffffffffffff1660c0840152810151604060e0840152805161010084018190526000929182019083906101208601905b8083101561042e5783516001600160a01b03168252928401926001929092019190840190610405565b509286015167ffffffffffffffff8116604087015292604087015160608701526060870151935061046b608087018567ffffffffffffffff169052565b608087015160a0870152809450505050509291505056fea26469706673582212207d1d44e378e09d39af50c8f569e31888b438e6d5076906c0afd0626c6e99722464736f6c63430008130033",
    "sourceMap": "335:774:56:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;335:774:56;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c806339aa47fb1461005057806345d51b1214610076578063aa9fb55814610099575b600080fd5b61006361005e366004610264565b6100a1565b6040519081526020015b60405180910390f35b610089610084366004610264565b6100d1565b604051901515815260200161006d565b61006361014a565b6000816040516020016100b491906103c3565b604051602081830303815290604052805190602001209050919050565b6040805160e081018252600060a0820181815283518281526020808201865260c08501919091529083528083018290528284018290526060830182905260808301829052925190926101249291016103c3565b60405160208183030381529060405280519060200120610143836100a1565b1492915050565b6040805160e081018252600060a0820181815283518281526020808201865260c0850191909152908352808301829052828401829052606083018290526080830191909152915161019b92016103c3565b6040516020818303038152906040528051906020012081565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156101ed576101ed6101b4565b60405290565b6040805190810167ffffffffffffffff811182821017156101ed576101ed6101b4565b604051601f8201601f1916810167ffffffffffffffff8111828210171561023f5761023f6101b4565b604052919050565b803567ffffffffffffffff8116811461025f57600080fd5b919050565b6000602080838503121561027757600080fd5b823567ffffffffffffffff8082111561028f57600080fd5b9084019060a082870312156102a357600080fd5b6102ab6101ca565b8235828111156102ba57600080fd5b8301604081890312156102cc57600080fd5b6102d46101f3565b6102dd82610247565b815285820135848111156102f057600080fd5b80830192505088601f83011261030557600080fd5b813584811115610317576103176101b4565b8060051b9450610328878601610216565b818152948301870194878101908b87111561034257600080fd5b938801935b8685101561037957843592506001600160a01b03831683146103695760008081fd5b8282529388019390880190610347565b83890152505082525061038d838501610247565b84820152604083013560408201526103a760608401610247565b6060820152608083013560808201528094505050505092915050565b6020808252825160a083830152805167ffffffffffffffff1660c0840152810151604060e0840152805161010084018190526000929182019083906101208601905b8083101561042e5783516001600160a01b03168252928401926001929092019190840190610405565b509286015167ffffffffffffffff8116604087015292604087015160608701526060870151935061046b608087018567ffffffffffffffff169052565b608087015160a0870152809450505050509291505056fea26469706673582212207d1d44e378e09d39af50c8f569e31888b438e6d5076906c0afd0626c6e99722464736f6c63430008130033",
    "sourceMap": "335:774:56:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;771:157;;;;;;:::i;:::-;;:::i;:::-;;;3252:25:98;;;3240:2;3225:18;771:157:56;;;;;;;;934:173;;;;;;:::i;:::-;;:::i;:::-;;;3461:14:98;;3454:22;3436:41;;3424:2;3409:18;934:173:56;3288:195:98;366:398:56;;;:::i;771:157::-;854:7;901:18;890:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;880:41;;;;;;873:48;;771:157;;;:::o;934:173::-;481:259;;;532:29;;;;;-1:-1:-1;481:259:56;;;532:29;;;544:16;;;;;;;;;;;532:29;;;;;;;481:259;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:259:56;;;;;453:301;;-1:-1:-1;;453:301:56;;481:259;453:301;;:::i;:::-;;;;;;;;;;;;;430:334;;;;;;1041:26;1048:18;1041:6;:26::i;:::-;:59;;934:173;-1:-1:-1;;934:173:56:o;366:398::-;481:259;;;532:29;;;;;-1:-1:-1;481:259:56;;;532:29;;;544:16;;;;;;;;;;;532:29;;;;;;;481:259;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:259:56;;;;;;453:301;;;;;;:::i;:::-;;;;;;;;;;;;;430:334;;;;;;366:398;:::o;14:127:98:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;295:18;280:34;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:257::-;476:4;470:11;;;508:17;;555:18;540:34;;576:22;;;537:62;534:88;;;602:18;;:::i;666:275::-;737:2;731:9;802:2;783:13;;-1:-1:-1;;779:27:98;767:40;;837:18;822:34;;858:22;;;819:62;816:88;;;884:18;;:::i;:::-;920:2;913:22;666:275;;-1:-1:-1;666:275:98:o;946:171::-;1013:20;;1073:18;1062:30;;1052:41;;1042:69;;1107:1;1104;1097:12;1042:69;946:171;;;:::o;1122:1971::-;1218:6;1249:2;1292;1280:9;1271:7;1267:23;1263:32;1260:52;;;1308:1;1305;1298:12;1260:52;1348:9;1335:23;1377:18;1418:2;1410:6;1407:14;1404:34;;;1434:1;1431;1424:12;1404:34;1457:22;;;;1513:4;1495:16;;;1491:27;1488:47;;;1531:1;1528;1521:12;1488:47;1557:22;;:::i;:::-;1617:2;1604:16;1645:2;1635:8;1632:16;1629:36;;;1661:1;1658;1651:12;1629:36;1684:17;;1735:4;1717:16;;;1713:27;1710:47;;;1753:1;1750;1743:12;1710:47;1781:22;;:::i;:::-;1828:21;1846:2;1828:21;:::i;:::-;1819:7;1812:38;1896:2;1892;1888:11;1875:25;1925:2;1915:8;1912:16;1909:36;;;1941:1;1938;1931:12;1909:36;1972:8;1968:2;1964:17;1954:27;;;2019:7;2012:4;2008:2;2004:13;2000:27;1990:55;;2041:1;2038;2031:12;1990:55;2077:2;2064:16;2099:2;2095;2092:10;2089:36;;;2105:18;;:::i;:::-;2151:2;2148:1;2144:10;2134:20;;2174:28;2198:2;2194;2190:11;2174:28;:::i;:::-;2236:15;;;2306:11;;;2302:20;;;2267:12;;;;2334:19;;;2331:39;;;2366:1;2363;2356:12;2331:39;2390:11;;;;2410:334;2426:6;2421:3;2418:15;2410:334;;;2495:17;;;-1:-1:-1;;;;;;2547:33:98;;2535:46;;2525:144;;2623:1;2652:2;2648;2641:14;2525:144;2682:20;;;2443:12;;;;2722;;;;2410:334;;;2760:16;;;2753:31;-1:-1:-1;;2793:22:98;;-1:-1:-1;2847:30:98;2865:11;;;2847:30;:::i;:::-;2842:2;2835:5;2831:14;2824:54;2933:4;2929:2;2925:13;2912:27;2905:4;2898:5;2894:16;2887:53;2972:30;2998:2;2994;2990:11;2972:30;:::i;:::-;2967:2;2960:5;2956:14;2949:54;3057:3;3053:2;3049:12;3036:26;3030:3;3023:5;3019:15;3012:51;3082:5;3072:15;;;;;;1122:1971;;;;:::o;3595:1322::-;3790:2;3801:21;;;3851:13;;3900:4;3880:18;;;3873:32;3988:19;;4009:18;3984:44;3978:3;3963:19;;3956:73;4066:21;;4060:28;4125:4;4119:3;4104:19;;4097:33;4179:21;;3943:3;3928:19;;4209:22;;;3761:4;;3790:2;4289:23;;;3761:4;;4262:3;4247:19;;;4340:195;4354:6;4351:1;4348:13;4340:195;;;4419:13;;-1:-1:-1;;;;;4415:39:98;4403:52;;4510:15;;;;4451:1;4369:9;;;;;4475:12;;;;4340:195;;;-1:-1:-1;4572:15:98;;;4566:22;3564:18;3553:30;;4646:4;4631:20;;3541:43;4566:22;4706:4;4698:6;4694:17;4688:24;4683:2;4672:9;4668:18;4661:52;4762:2;4754:6;4750:15;4744:22;4722:44;;4775:54;4824:3;4813:9;4809:19;4793:14;3564:18;3553:30;3541:43;;3488:102;4775:54;4885:3;4877:6;4873:16;4867:23;4860:4;4849:9;4845:20;4838:53;4908:3;4900:11;;;;;;3595:1322;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "EMPTY_BOTTOMUPCHECKPOINT_HASH()": "aa9fb558",
    "isEmpty(BottomUpCheckpoint)": "45d51b12",
    "toHash(BottomUpCheckpoint)": "39aa47fb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EMPTY_BOTTOMUPCHECKPOINT_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"crossMessagesHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"bottomUpCheckpoint\",\"type\":\"tuple\"}],\"name\":\"isEmpty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"crossMessagesHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"bottomupCheckpoint\",\"type\":\"tuple\"}],\"name\":\"toHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LimeChain team\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Helper library for manipulating Checkpoint struct\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/CheckpointHelper.sol\":\"CheckpointHelper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":sol-explore/=node_modules/sol-explore/\"]},\"sources\":{\"lib/fevmate/contracts/utils/FilAddress.sol\":{\"keccak256\":\"0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7\",\"dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5\",\"dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593\",\"dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT\"]},\"src/constants/Constants.sol\":{\"keccak256\":\"0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940\",\"dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx\"]},\"src/enums/ConsensusType.sol\":{\"keccak256\":\"0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0\",\"dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ\"]},\"src/enums/Status.sol\":{\"keccak256\":\"0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33\",\"dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R\"]},\"src/errors/IPCErrors.sol\":{\"keccak256\":\"0x3c5eef277d0386c1edbb7f55f454c81f23b3a86c0c113c1ce474da04348575de\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5bddc2487c518086fde2542564cf0eda4bfdd5cc4c7a2b892474b85cc48b9d4b\",\"dweb:/ipfs/QmZz3F1FU4Efq7s4TSdGEGimhKrvVRi8ngPmUdvEq4AL8r\"]},\"src/interfaces/IGateway.sol\":{\"keccak256\":\"0xb4209b44c3965fd233387ece78149461bd64a47788c3af24edb7c99ea1ef8868\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4db7a4573100063387e170c55a69772b20e403444e9d97b24cc220a71a52fbbb\",\"dweb:/ipfs/QmTYsSjmFsTwuNTXBByZKueJZLpe7RwNzLRWNPxXGA3YKB\"]},\"src/lib/AccountHelper.sol\":{\"keccak256\":\"0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc\",\"dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z\"]},\"src/lib/CheckpointHelper.sol\":{\"keccak256\":\"0x535a4206364efd860ca7e9548a657f62981235dcc7e58a30e9696147cc4b2ce7\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://40e6d5f34a943f845b6f5371302e289424ae8dfe731b735f73ac2abdb136e321\",\"dweb:/ipfs/QmUbE21bSc3CGtScW79RU7EdTpn1iYMFMyWJc3oTUamjRB\"]},\"src/lib/LibGatewayActorStorage.sol\":{\"keccak256\":\"0x88f2124aa3843fefae87d50af505872389399fd75223f14bf1f5d6350cf25af7\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://228a4dfe0514a271f08967cdeb09435bcce23becc3e195526e8cc51291334f31\",\"dweb:/ipfs/QmQX7KGm38gjfH2tP5gGAYQFT1RpMUpnMA47y3WaXvzMLq\"]},\"src/lib/LibStaking.sol\":{\"keccak256\":\"0x496ebf5a544526dfb736b6efa0a3bdeb2e6cc634f616e25f39ed67407105edb2\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://c63757a8a2a30417268552e36e0bf1522be081cce0f567426f3f4497832489ef\",\"dweb:/ipfs/QmRScAZ62P9U3BMekDvLA5AWge9wMMoh8tp2GZdhQB6eGb\"]},\"src/lib/LibStakingChangeLog.sol\":{\"keccak256\":\"0x1ec44b7c417dae8bec87da6f1f48eb10a1eacdfb4935144dd9094dc1bbe9aa9b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d6fcbd14fe0743c0ea0a8a8d2ea851b4864559c3553773f07d6ae708bcc83318\",\"dweb:/ipfs/QmYb6v6U27FAY4ut6gCZy6oK1MjN165RTxUGhrY6zxtg93\"]},\"src/lib/LibSubnetActorStorage.sol\":{\"keccak256\":\"0xe11ae56d18ef43fd9ebdf9350977f9a26da4ee9a3288b46b04c5b973aa231f28\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f616b61fde1528a8666d09c962d7f23a82b200229691794933f39c4d3781fc1c\",\"dweb:/ipfs/QmXQsNGv6R34wAx1fRoyMiwdtGgQVn1qDXGCr7cED92vvJ\"]},\"src/lib/priority/LibMaxPQ.sol\":{\"keccak256\":\"0xf98fae415e764e627134ae440dea84d6879eaaa6950868cb56382324f84ae8db\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f290b5d20ac65c22eddbadeae1b49bbe78cb9e8e0cd187c2b93f98d13f9300a2\",\"dweb:/ipfs/QmXShiVpDzD8CLn8MeWSa4fQSeiTzyBHSA1VNZtLhJgTgW\"]},\"src/lib/priority/LibMinPQ.sol\":{\"keccak256\":\"0x64a2b2cd7cb7c472d82362f2f66b6fd1618c1c83afcddb13ede0b51bb1712a8f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a2229ecb94941f27f802cad254fe46aa2c374ebd9acf03fc27f3501345e26e27\",\"dweb:/ipfs/Qmd8sGA66TW5RidR9jCxWaS8U9KDby5RdYgyZxob2aeDx6\"]},\"src/lib/priority/LibPQ.sol\":{\"keccak256\":\"0x4d4290087995d669e80f8fdd405bfaae545323393c0c54689b84965ffb87303e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://c21b563f6bf23afacb38fc97ab94d1afe12e4ad3dfde96d4484068bf26b13a2c\",\"dweb:/ipfs/Qmd5d3EnZwaSRnjG4ZFH2X8HKgymzd6vQgus8A6oEoh5pJ\"]},\"src/structs/Checkpoint.sol\":{\"keccak256\":\"0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a\",\"dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww\"]},\"src/structs/FvmAddress.sol\":{\"keccak256\":\"0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac\",\"dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu\"]},\"src/structs/Subnet.sol\":{\"keccak256\":\"0x1ddb626039baf4a4411f06b5340aaa80dcd65e9980da7673b73ab16633d871ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://af017eef4cb46262ac29b4cf47faa1fc5d2b61970ec7d6d021eae4cf45b5577b\",\"dweb:/ipfs/QmZJiA2t934fbe62513neQYzxSNswnCRTJybp7d6X2RyWR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EMPTY_BOTTOMUPCHECKPOINT_HASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BottomUpCheckpoint",
              "name": "bottomUpCheckpoint",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SubnetID",
                  "name": "subnetID",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "root",
                      "type": "uint64"
                    },
                    {
                      "internalType": "address[]",
                      "name": "route",
                      "type": "address[]"
                    }
                  ]
                },
                {
                  "internalType": "uint64",
                  "name": "blockHeight",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "blockHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "nextConfigurationNumber",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "crossMessagesHash",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "isEmpty",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BottomUpCheckpoint",
              "name": "bottomupCheckpoint",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SubnetID",
                  "name": "subnetID",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "root",
                      "type": "uint64"
                    },
                    {
                      "internalType": "address[]",
                      "name": "route",
                      "type": "address[]"
                    }
                  ]
                },
                {
                  "internalType": "uint64",
                  "name": "blockHeight",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "blockHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "nextConfigurationNumber",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "crossMessagesHash",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "toHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "fevmate/=lib/fevmate/contracts/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/",
        "murky/=lib/murky/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "sol-explore/=node_modules/sol-explore/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/lib/CheckpointHelper.sol": "CheckpointHelper"
      },
      "libraries": {}
    },
    "sources": {
      "lib/fevmate/contracts/utils/FilAddress.sol": {
        "keccak256": "0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31",
        "urls": [
          "bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7",
          "dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1",
        "urls": [
          "bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5",
          "dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892",
        "urls": [
          "bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593",
          "dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT"
        ],
        "license": "MIT"
      },
      "src/constants/Constants.sol": {
        "keccak256": "0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546",
        "urls": [
          "bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940",
          "dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/enums/ConsensusType.sol": {
        "keccak256": "0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d",
        "urls": [
          "bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0",
          "dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/enums/Status.sol": {
        "keccak256": "0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c",
        "urls": [
          "bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33",
          "dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/errors/IPCErrors.sol": {
        "keccak256": "0x3c5eef277d0386c1edbb7f55f454c81f23b3a86c0c113c1ce474da04348575de",
        "urls": [
          "bzz-raw://5bddc2487c518086fde2542564cf0eda4bfdd5cc4c7a2b892474b85cc48b9d4b",
          "dweb:/ipfs/QmZz3F1FU4Efq7s4TSdGEGimhKrvVRi8ngPmUdvEq4AL8r"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/interfaces/IGateway.sol": {
        "keccak256": "0xb4209b44c3965fd233387ece78149461bd64a47788c3af24edb7c99ea1ef8868",
        "urls": [
          "bzz-raw://4db7a4573100063387e170c55a69772b20e403444e9d97b24cc220a71a52fbbb",
          "dweb:/ipfs/QmTYsSjmFsTwuNTXBByZKueJZLpe7RwNzLRWNPxXGA3YKB"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/AccountHelper.sol": {
        "keccak256": "0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5",
        "urls": [
          "bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc",
          "dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/CheckpointHelper.sol": {
        "keccak256": "0x535a4206364efd860ca7e9548a657f62981235dcc7e58a30e9696147cc4b2ce7",
        "urls": [
          "bzz-raw://40e6d5f34a943f845b6f5371302e289424ae8dfe731b735f73ac2abdb136e321",
          "dweb:/ipfs/QmUbE21bSc3CGtScW79RU7EdTpn1iYMFMyWJc3oTUamjRB"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibGatewayActorStorage.sol": {
        "keccak256": "0x88f2124aa3843fefae87d50af505872389399fd75223f14bf1f5d6350cf25af7",
        "urls": [
          "bzz-raw://228a4dfe0514a271f08967cdeb09435bcce23becc3e195526e8cc51291334f31",
          "dweb:/ipfs/QmQX7KGm38gjfH2tP5gGAYQFT1RpMUpnMA47y3WaXvzMLq"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibStaking.sol": {
        "keccak256": "0x496ebf5a544526dfb736b6efa0a3bdeb2e6cc634f616e25f39ed67407105edb2",
        "urls": [
          "bzz-raw://c63757a8a2a30417268552e36e0bf1522be081cce0f567426f3f4497832489ef",
          "dweb:/ipfs/QmRScAZ62P9U3BMekDvLA5AWge9wMMoh8tp2GZdhQB6eGb"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibStakingChangeLog.sol": {
        "keccak256": "0x1ec44b7c417dae8bec87da6f1f48eb10a1eacdfb4935144dd9094dc1bbe9aa9b",
        "urls": [
          "bzz-raw://d6fcbd14fe0743c0ea0a8a8d2ea851b4864559c3553773f07d6ae708bcc83318",
          "dweb:/ipfs/QmYb6v6U27FAY4ut6gCZy6oK1MjN165RTxUGhrY6zxtg93"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibSubnetActorStorage.sol": {
        "keccak256": "0xe11ae56d18ef43fd9ebdf9350977f9a26da4ee9a3288b46b04c5b973aa231f28",
        "urls": [
          "bzz-raw://f616b61fde1528a8666d09c962d7f23a82b200229691794933f39c4d3781fc1c",
          "dweb:/ipfs/QmXQsNGv6R34wAx1fRoyMiwdtGgQVn1qDXGCr7cED92vvJ"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/priority/LibMaxPQ.sol": {
        "keccak256": "0xf98fae415e764e627134ae440dea84d6879eaaa6950868cb56382324f84ae8db",
        "urls": [
          "bzz-raw://f290b5d20ac65c22eddbadeae1b49bbe78cb9e8e0cd187c2b93f98d13f9300a2",
          "dweb:/ipfs/QmXShiVpDzD8CLn8MeWSa4fQSeiTzyBHSA1VNZtLhJgTgW"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/priority/LibMinPQ.sol": {
        "keccak256": "0x64a2b2cd7cb7c472d82362f2f66b6fd1618c1c83afcddb13ede0b51bb1712a8f",
        "urls": [
          "bzz-raw://a2229ecb94941f27f802cad254fe46aa2c374ebd9acf03fc27f3501345e26e27",
          "dweb:/ipfs/Qmd8sGA66TW5RidR9jCxWaS8U9KDby5RdYgyZxob2aeDx6"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/priority/LibPQ.sol": {
        "keccak256": "0x4d4290087995d669e80f8fdd405bfaae545323393c0c54689b84965ffb87303e",
        "urls": [
          "bzz-raw://c21b563f6bf23afacb38fc97ab94d1afe12e4ad3dfde96d4484068bf26b13a2c",
          "dweb:/ipfs/Qmd5d3EnZwaSRnjG4ZFH2X8HKgymzd6vQgus8A6oEoh5pJ"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/structs/Checkpoint.sol": {
        "keccak256": "0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746",
        "urls": [
          "bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a",
          "dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/structs/FvmAddress.sol": {
        "keccak256": "0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069",
        "urls": [
          "bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac",
          "dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/structs/Subnet.sol": {
        "keccak256": "0x1ddb626039baf4a4411f06b5340aaa80dcd65e9980da7673b73ab16633d871ce",
        "urls": [
          "bzz-raw://af017eef4cb46262ac29b4cf47faa1fc5d2b61970ec7d6d021eae4cf45b5577b",
          "dweb:/ipfs/QmZJiA2t934fbe62513neQYzxSNswnCRTJybp7d6X2RyWR"
        ],
        "license": "MIT OR Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/lib/CheckpointHelper.sol",
    "id": 39806,
    "exportedSymbols": {
      "BottomUpCheckpoint": [
        47079
      ],
      "CheckpointHelper": [
        39805
      ],
      "CrossMsg": [
        47101
      ],
      "EMPTY_HASH": [
        36334
      ],
      "SubnetID": [
        47155
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:1064:56",
    "nodes": [
      {
        "id": 39744,
        "nodeType": "PragmaDirective",
        "src": "46:23:56",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 39746,
        "nodeType": "ImportDirective",
        "src": "71:54:56",
        "nodes": [],
        "absolutePath": "src/constants/Constants.sol",
        "file": "../constants/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39806,
        "sourceUnit": 36350,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39745,
              "name": "EMPTY_HASH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36334,
              "src": "79:10:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39748,
        "nodeType": "ImportDirective",
        "src": "126:47:56",
        "nodes": [],
        "absolutePath": "src/structs/Subnet.sol",
        "file": "../structs/Subnet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39806,
        "sourceUnit": 47288,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39747,
              "name": "SubnetID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47155,
              "src": "134:8:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39751,
        "nodeType": "ImportDirective",
        "src": "174:71:56",
        "nodes": [],
        "absolutePath": "src/structs/Checkpoint.sol",
        "file": "../structs/Checkpoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39806,
        "sourceUnit": 47119,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39749,
              "name": "BottomUpCheckpoint",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47079,
              "src": "182:18:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 39750,
              "name": "CrossMsg",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47101,
              "src": "202:8:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39805,
        "nodeType": "ContractDefinition",
        "src": "335:774:56",
        "nodes": [
          {
            "id": 39773,
            "nodeType": "VariableDeclaration",
            "src": "366:398:56",
            "nodes": [],
            "constant": true,
            "functionSelector": "aa9fb558",
            "mutability": "constant",
            "name": "EMPTY_BOTTOMUPCHECKPOINT_HASH",
            "nameLocation": "390:29:56",
            "scope": 39805,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 39753,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "366:7:56",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 39759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "541:1:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 39763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "558:1:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 39762,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "544:13:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (address[] memory)"
                                },
                                "typeName": {
                                  "baseType": {
                                    "id": 39760,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "548:7:56",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 39761,
                                  "nodeType": "ArrayTypeName",
                                  "src": "548:9:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                    "typeString": "address[]"
                                  }
                                }
                              },
                              "id": 39764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "544:16:56",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            ],
                            "id": 39758,
                            "name": "SubnetID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47155,
                            "src": "532:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SubnetID_$47155_storage_ptr_$",
                              "typeString": "type(struct SubnetID storage pointer)"
                            }
                          },
                          "id": 39765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "532:29:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SubnetID_$47155_memory_ptr",
                            "typeString": "struct SubnetID memory"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 39766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "596:1:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 39767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "630:1:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 39768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "678:1:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 39769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "720:1:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_SubnetID_$47155_memory_ptr",
                            "typeString": "struct SubnetID memory"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 39757,
                        "name": "BottomUpCheckpoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47079,
                        "src": "481:18:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BottomUpCheckpoint_$47079_storage_ptr_$",
                          "typeString": "type(struct BottomUpCheckpoint storage pointer)"
                        }
                      },
                      "id": 39770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "522:8:56",
                        "583:11:56",
                        "619:9:56",
                        "653:23:56",
                        "701:17:56"
                      ],
                      "names": [
                        "subnetID",
                        "blockHeight",
                        "blockHash",
                        "nextConfigurationNumber",
                        "crossMessagesHash"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "481:259:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47079_memory_ptr",
                        "typeString": "struct BottomUpCheckpoint memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47079_memory_ptr",
                        "typeString": "struct BottomUpCheckpoint memory"
                      }
                    ],
                    "expression": {
                      "id": 39755,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "453:3:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 39756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "457:6:56",
                    "memberName": "encode",
                    "nodeType": "MemberAccess",
                    "src": "453:10:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 39771,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "453:301:56",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 39754,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "430:9:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 39772,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "430:334:56",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39789,
            "nodeType": "FunctionDefinition",
            "src": "771:157:56",
            "nodes": [],
            "body": {
              "id": 39788,
              "nodeType": "Block",
              "src": "863:65:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 39784,
                            "name": "bottomupCheckpoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39776,
                            "src": "901:18:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47079_memory_ptr",
                              "typeString": "struct BottomUpCheckpoint memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47079_memory_ptr",
                              "typeString": "struct BottomUpCheckpoint memory"
                            }
                          ],
                          "expression": {
                            "id": 39782,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "890:3:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 39783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "894:6:56",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "890:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 39785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "890:30:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 39781,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "880:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 39786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "880:41:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 39780,
                  "id": 39787,
                  "nodeType": "Return",
                  "src": "873:48:56"
                }
              ]
            },
            "functionSelector": "39aa47fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toHash",
            "nameLocation": "780:6:56",
            "parameters": {
              "id": 39777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39776,
                  "mutability": "mutable",
                  "name": "bottomupCheckpoint",
                  "nameLocation": "813:18:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 39789,
                  "src": "787:44:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47079_memory_ptr",
                    "typeString": "struct BottomUpCheckpoint"
                  },
                  "typeName": {
                    "id": 39775,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 39774,
                      "name": "BottomUpCheckpoint",
                      "nameLocations": [
                        "787:18:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47079,
                      "src": "787:18:56"
                    },
                    "referencedDeclaration": 47079,
                    "src": "787:18:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47079_storage_ptr",
                      "typeString": "struct BottomUpCheckpoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "786:46:56"
            },
            "returnParameters": {
              "id": 39780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39779,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39789,
                  "src": "854:7:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39778,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "854:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "853:9:56"
            },
            "scope": 39805,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39804,
            "nodeType": "FunctionDefinition",
            "src": "934:173:56",
            "nodes": [],
            "body": {
              "id": 39803,
              "nodeType": "Block",
              "src": "1024:83:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 39801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 39798,
                          "name": "bottomUpCheckpoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39792,
                          "src": "1048:18:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47079_memory_ptr",
                            "typeString": "struct BottomUpCheckpoint memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47079_memory_ptr",
                            "typeString": "struct BottomUpCheckpoint memory"
                          }
                        ],
                        "id": 39797,
                        "name": "toHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39789,
                        "src": "1041:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_BottomUpCheckpoint_$47079_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (struct BottomUpCheckpoint memory) pure returns (bytes32)"
                        }
                      },
                      "id": 39799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1041:26:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 39800,
                      "name": "EMPTY_BOTTOMUPCHECKPOINT_HASH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39773,
                      "src": "1071:29:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1041:59:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 39796,
                  "id": 39802,
                  "nodeType": "Return",
                  "src": "1034:66:56"
                }
              ]
            },
            "functionSelector": "45d51b12",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isEmpty",
            "nameLocation": "943:7:56",
            "parameters": {
              "id": 39793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39792,
                  "mutability": "mutable",
                  "name": "bottomUpCheckpoint",
                  "nameLocation": "977:18:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 39804,
                  "src": "951:44:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47079_memory_ptr",
                    "typeString": "struct BottomUpCheckpoint"
                  },
                  "typeName": {
                    "id": 39791,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 39790,
                      "name": "BottomUpCheckpoint",
                      "nameLocations": [
                        "951:18:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47079,
                      "src": "951:18:56"
                    },
                    "referencedDeclaration": 47079,
                    "src": "951:18:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47079_storage_ptr",
                      "typeString": "struct BottomUpCheckpoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "950:46:56"
            },
            "returnParameters": {
              "id": 39796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39795,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39804,
                  "src": "1018:4:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39794,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1017:6:56"
            },
            "scope": 39805,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CheckpointHelper",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 39752,
          "nodeType": "StructuredDocumentation",
          "src": "247:88:56",
          "text": "@title Helper library for manipulating Checkpoint struct\n @author LimeChain team"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39805
        ],
        "name": "CheckpointHelper",
        "nameLocation": "343:16:56",
        "scope": 39806,
        "usedErrors": []
      }
    ],
    "license": "MIT OR Apache-2.0"
  },
  "id": 56
}