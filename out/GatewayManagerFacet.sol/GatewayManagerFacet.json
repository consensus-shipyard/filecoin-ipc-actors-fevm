{
  "abi": [
    {
      "inputs": [],
      "name": "AlreadyRegisteredSubnet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotReleaseZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidActorAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidCrossMsgValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEmptySubnetCircSupply",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughCollateral",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughFundsToRelease",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotRegisteredSubnet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "root",
              "type": "uint64"
            },
            {
              "internalType": "address[]",
              "name": "route",
              "type": "address[]"
            }
          ],
          "internalType": "struct SubnetID",
          "name": "subnetId",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "addrType",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "internalType": "struct FvmAddress",
          "name": "to",
          "type": "tuple"
        }
      ],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "genesisCircSupply",
          "type": "uint256"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "addrType",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            }
          ],
          "internalType": "struct FvmAddress",
          "name": "to",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "releaseRewardForRelayer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "releaseStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080806040523461001657611bd1908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816318f44b7014610efb5750806341c0e1b514610d8757806345f5448514610cd25780635a627dbc14610c4f5780639ba5358014610458578063d8e25572146103185763f207564e1461006c57600080fd5b60208060031936011261028957600435908134106103065761008e82346112a6565b9160135483106102f5576100d9906100a46112ef565b90600073__$a0fe38a9a81205afccc10810b09a4d3f45$__926040518095819263aa5106cb60e01b8352339060048401611547565b0381855af4928315610295576000936102d0575b506100f783611a86565b906102be5760048101956001600160401b0396878651166001600160401b031982541617905560058201868601519081519189831161024c57908883926101448299979a98969584611586565b01906000528660002060005b8381106102a15750505050856002916101a3975560038101600160801b60ff60801b19825416179055436001820155015560405180809581946390ba52cf60e01b835286600484015260248301906114ec565b03915af491821561029557600092610262575b5050601054600160401b81101561024c5760018101806010558110156102365760106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67201556015549061021b6001600160401b0360881b918360881c166115bc565b60881b1667ffffffffffffffff60881b199190911617601555005b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b90809250813d831161028e575b61027981836112ce565b81010312610289575138806101b6565b600080fd5b503d61026f565b6040513d6000823e3d90fd5b82516001600160a01b0316818301558a9890920191600101610150565b604051631b538cdf60e11b8152600490fd5b6102ee9193503d806000833e6102e681836112ce565b8101906114c4565b91386100ed565b60405162d11df360e61b8152600490fd5b604051631036b5ad60e31b8152600490fd5b346102895760208060031936011261028957600435907f691bb03ffc16c56fc96b82fd16cd1b3715f0bc3cdc6407005f49bb6205860095906001825414610446576001825582156104345761036c336119ee565b9015610422578161038260046103a39301611380565b60405180938192632cff562160e11b835284600484015260248301906114ec565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4918215610295576000926103e4575b6000846103e1876001600160a01b0387166115fc565b55005b90809250813d831161041b575b6103fb81836112ce565b81010312610289576000926104126103e19261140b565b918194506103cb565b503d6103f1565b604051630e991abd60e41b8152600490fd5b60405163c79cad7b60e01b8152600490fd5b6040516329f745a760e01b8152600490fd5b60031960403682011261028957600435906001600160401b03821161028957604081833603011261028957602435906014548210610c3d57813410610306573415610c2b576104ec92826104ae600094346112a6565b906040519586948594632e82508d60e21b865260a060048701526104d460a487016118bd565b91336024880152868303016044870152600401611852565b9160648401526084830152038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af490811561029557600091610c08575b506001600160401b03601654168015610bf2576001600160401b0361054782824316046115bc565b16026001600160401b038116908103610bdc576001600160401b0360155460081c16606083510152600052600a6020526040600020805490600160401b82101561024c5760018201808255821015610236576000526020600020908251805180516001600160401b038151166001600160401b0319600d86028701541617600d850286015560206001600d8602870101910151908151916001600160401b03831161024c576020906105f98484611586565b0190600052602060002060005b838110610bbf5750505050602090816002600d86028701019101519060ff82511660ff1982541617905501518051906001600160401b03821161024c576003600d85028601015490600182811c92168015610bb5575b60208310146109ec5781601f849311610b7b575b50602090601f8311600114610aff57600092610af4575b50508160011b916000199060031b1c1916176003600d8402850101555b60208181015180518051600d8602870160048101805467ffffffffffffffff19166001600160401b03938416179055919093015180519293600590920191831161024c576020906106f58484611586565b0190600052602060002060005b838110610ad75750505050602090816006600d86028701019101519060ff82511660ff1982541617905501518051906001600160401b03821161024c576007600d85028601015490600182811c92168015610acd575b60208310146109ec5781601f849311610a93575b50602090601f8311600114610a1757600092610a0c575b50508160011b916000199060031b1c1916176007600d8402850101555b60408101516008600d8402850101556009600d83028401016001600160401b036060830151168154906bffffffff0000000000000000608085015160a01c16916bffffffffffffffffffffffff191617179055600a600d830284010160a08201518051906001600160401b03821161024c578254600181811c91168015610a02575b60208210146109ec57601f81116109af575b50602090601f831160011461093b5793600d9383600c979460c09460209a98600092610930575b50508160011b916000199060031b1c19161790555b0151600b83830285010155020101910151151560ff8019835416911617905560155468ffffffffffffffff006108b16001600160401b038360081c166115bc565b60081b169068ffffffffffffffff0019161760155534471061091e5760008080803460635af13d15610919573d6108e7816115e1565b906108f560405192836112ce565b8152600060203d92013e5b1561090757005b604051633204506f60e01b8152600490fd5b610900565b60405163356680b760e01b8152600490fd5b015190508b8061085b565b90601f198316918460005260206000209260005b81811061099757508460c09460209a9894600d9894600c9b986001951061097e575b505050811b019055610870565b015160001960f88460031b161c191690558b8080610971565b9293602060018192878601518155019501930161094f565b6109dc90846000526020600020601f850160051c810191602086106109e2575b601f0160051c019061156f565b87610834565b90915081906109cf565b634e487b7160e01b600052602260045260246000fd5b90607f1690610822565b015190508680610783565b92506007600d86028701016000526020600020906000935b601f1984168510610a78576001945083601f19811610610a5f575b505050811b016007600d8402850101556107a0565b015160001960f88460031b161c19169055868080610a4a565b81810151835560209485019460019093019290910190610a2f565b610ac7906007600d88028901016000526020600020601f850160051c810191602086106109e257601f0160051c019061156f565b8761076c565b91607f1691610758565b82516001600160a01b031681830155602090920191600101610702565b015190508680610687565b92506003600d86028701016000526020600020906000935b601f1984168510610b60576001945083601f19811610610b47575b505050811b016003600d8402850101556106a4565b015160001960f88460031b161c19169055868080610b32565b81810151835560209485019460019093019290910190610b17565b610baf906003600d88028901016000526020600020601f850160051c810191602086106109e257601f0160051c019061156f565b87610670565b91607f169161065c565b82516001600160a01b031681830155602090920191600101610606565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b610c2591503d806000833e610c1d81836112ce565b81019061174d565b8161051f565b6040516360ec4e6b60e11b8152600490fd5b6040516334472ad760e11b8152600490fd5b600036600319011261028957341561030657610c6a336119ee565b9015610422576003610c7d3483546115d4565b91828155019081549060ff8260801c166006811015610cbc57600214610c9f57005b6013541115610cab575b005b60ff60801b1916600160801b179055005b634e487b7160e01b600052602160045260246000fd5b346102895760208060031936011261028957600435907f691bb03ffc16c56fc96b82fd16cd1b3715f0bc3cdc6407005f49bb62058600959060018254146104465760018255821561043457610d26336119ee565b9015610422578054848110610d755761038260046103a393610d498887956112a6565b80825560135411610d5b575b01611380565b60038101805460ff60801b1916600160811b179055610d55565b6040516379b33e7960e01b8152600490fd5b3461028957600036600319011261028957610da1336119ee565b9015610422576002810154610ee957805490601554906001600160401b0390600019828460881c1601918211610bdc5767ffffffffffffffff60881b1990921660889190911b67ffffffffffffffff60881b1617601555610e0490600401611380565b90610e2d604051926390ba52cf60e01b84528380602093849384600484015260248301906114ec565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4801561029557600090610eba575b610ca993506000526000815260056040600020600081556000600182015560006002820155600060038201556000600482015501908154906000835581610e9f575b505050336115fc565b610eb2926000526000209081019061156f565b828080610e96565b508083813d8311610ee2575b610ed081836112ce565b8101031261028957610ca99251610e54565b503d610ec6565b604051637c67c70160e11b8152600490fd5b60031990604036830112610289576001600160401b039160043583811161028957803603604083820112610289576024938435908682116102895760408583360301126102895734156112975750604051926379185f5960e11b845260a0600485015260e484019281600401358881168091036102895760a48601528187013590602219018112156102895701856004820135910192878211610289578160051b3603841361028957908085939492604060c486015252610104830191906000905b80821061126557505050610fe68291600094338985015287848303016044850152600401611852565b346064830152836084830152038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af49081156102955760009161124a575b5060209182825101515190600061106673__$a0fe38a9a81205afccc10810b09a4d3f45$__93611074604051948593849363089032d560e01b85526040600486015260448501906114ec565b90838203018a8401526118bd565b0381855af49081156102955760009161122f575b5061109281611a86565b929015610422576110ff9583600387950180548a6110b88183168060608c5101526115bc565b16906001600160401b0319161790556110dc600260408851015192019182546115d4565b90556040518097819482936304e384ff60e21b84528760048501528301906114ec565b03915af48015610295576000906111db575b7f392fae29c67f3b47710cb5b84d7a6fd08e0155a4f22565971f7159f12c6f7096935060405192839281845260c06111ba8251986040858801526111628a5160e060608a0152610140890190611961565b61117d868c015191605f1992838b83030160808c0152611961565b9160408c015160a08a015260608c0151168489015263ffffffff60e01b60808c01511660e089015260a08b0151908883030161010089015261193c565b9701516101208501520151151560408301526001600160a01b0316930390a2005b508183813d8311611228575b6111f181836112ce565b81010312610289576112237f392fae29c67f3b47710cb5b84d7a6fd08e0155a4f22565971f7159f12c6f70969361140b565b611111565b503d6111e7565b61124491503d806000833e6102e681836112ce565b86611088565b61125f91503d806000833e610c1d81836112ce565b8461101a565b919493509184356001600160a01b03811691908290036102895760019181526020809101950192018593949291610fbd565b6360ec4e6b60e11b8152600490fd5b91908203918211610bdc57565b604081019081106001600160401b0382111761024c57604052565b90601f801991011681019081106001600160401b0382111761024c57604052565b604051906112fc826112b3565b816001600160401b03601154168152604051809160125480835283602080940160126000527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34449260005b868282106113615750505061135d925003846112ce565b0152565b85546001600160a01b0316845260019586019589955093019201611346565b9060405161138d816112b3565b80926001600160401b03815416825260018091019160405191828481955492838652602080960191600052856000209060005b878682106113d8575050505061135d925003846112ce565b83546001600160a01b03168552899550909301929181019181016113c0565b51906001600160401b038216820361028957565b51906001600160a01b038216820361028957565b9190916040818403126102895760405192611439846112b3565b83611443836113f7565b8152602091828401516001600160401b0394858211610289570181601f8201121561028957805194851161024c578460051b9060405195611486868401886112ce565b865284808701928201019283116102895784809101915b8383106114ac57505050500152565b81906114b78461140b565b815201910190849061149d565b906020828203126102895781516001600160401b038111610289576114e9920161141f565b90565b60609060408301906001600160401b03815116845260209283809201519460408382015285518094520193019160005b82811061152a575050505090565b83516001600160a01b03168552938101939281019260010161151c565b9061155f6020919493946040845260408401906114ec565b6001600160a01b03909416910152565b81811061157a575050565b6000815560010161156f565b90600160401b811161024c578154908083558181106115a457505050565b6115ba926000526020600020918201910161156f565b565b9060016001600160401b0380931601918211610bdc57565b91908201809211610bdc57565b6001600160401b03811161024c57601f01601f191660200190565b81471061091e576000918291829182916001600160a01b03165af13d15611647573d611627816115e1565b9061163560405192836112ce565b8152600060203d92013e5b1561090757565b611640565b60005b83811061165f5750506000910152565b818101518382015260200161164f565b81601f82011215610289578051611685816115e1565b9261169360405194856112ce565b81845260208284010111610289576114e9916020808501910161164c565b919060408382031261028957604051926116ca846112b3565b838151916001600160401b039283811161028957846116ea91830161141f565b825260208101519083821161028957016040818503126102895760405193611711856112b3565b815160ff81168103610289578552602082015193841161028957602093611738920161166f565b828401520152565b5190811515820361028957565b906020828203126102895781516001600160401b0392838211610289570191604092838184031261028957835193611784856112b3565b81518381116102895782019360e0858203126102895781519160e083018381108682111761024c578152855185811161028957826117c39188016116b1565b8352602086015185811161028957826117dd9188016116b1565b602084015280860151908301526117f6606086016113f7565b606083015260808501516001600160e01b03198116810361028957608083015260a0850151938411610289578461183660c09260209661184a980161166f565b60a0840152015160c0820152845201611740565b602082015290565b803560ff81168091036102895782526020810135601e1982360301811215610289570190602082359201916001600160401b038111610289578036038313610289578060609360406020850152816040850152848401376000828201840152601f01601f1916010190565b60408101906001600160401b036011541681526060602091604083820152601254809452019160126000527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444916000905b82821061191c575050505090565b83546001600160a01b03168552938401936001938401939091019061190e565b906020916119558151809281855285808601910161164c565b601f01601f1916010190565b91908251906040815260808101936001600160401b038351166040830152602080930151946040606084015285518091528360a0840196019060005b8181106119d157505050936040838193816114e997980151908281860391015260ff8151168452015193820152019061193c565b82516001600160a01b03168852968501969185019160010161199d565b6001600160a01b03811615611a74576000611a2691611a0b6112ef565b60405163aa5106cb60e01b8152938492839260048401611547565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4801561029557611a5791600091611a5b575b50611a86565b9091565b611a6e913d8091833e6102e681836112ce565b38611a51565b6040516370e4510960e01b8152600490fd5b611ac473__$a0fe38a9a81205afccc10810b09a4d3f45$__91604051906390ba52cf60e01b82528180602094859384600484015260248301906114ec565b0381865af490811561029557600091611b6c575b5090611b1b916000526000815280604060002093611af860048601611380565b906040518080968194630c133d1360e31b835286600484015260248301906114ec565b03915af490811561029557600091611b35575b5090501591565b82813d8311611b65575b611b4981836112ce565b81010312611b625750611b5b90611740565b8038611b2e565b80fd5b503d611b3f565b908282813d8311611b94575b611b8281836112ce565b81010312611b62575051611b1b611ad8565b503d611b7856fea2646970667358221220b50fadf76a5952a19b9ecffc652ed4fc409ca18b7af01e5e1cd1fcb26210863a64736f6c63430008130033",
    "sourceMap": "964:5587:45:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/lib/CrossMsgHelper.sol": {
        "CrossMsgHelper": [
          {
            "start": 1303,
            "length": 20
          },
          {
            "start": 4114,
            "length": 20
          }
        ]
      },
      "src/lib/SubnetIDHelper.sol": {
        "SubnetIDHelper": [
          {
            "start": 197,
            "length": 20
          },
          {
            "start": 963,
            "length": 20
          },
          {
            "start": 3661,
            "length": 20
          },
          {
            "start": 4168,
            "length": 20
          },
          {
            "start": 6726,
            "length": 20
          },
          {
            "start": 6823,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608080604052600436101561001357600080fd5b60003560e01c90816318f44b7014610efb5750806341c0e1b514610d8757806345f5448514610cd25780635a627dbc14610c4f5780639ba5358014610458578063d8e25572146103185763f207564e1461006c57600080fd5b60208060031936011261028957600435908134106103065761008e82346112a6565b9160135483106102f5576100d9906100a46112ef565b90600073__$a0fe38a9a81205afccc10810b09a4d3f45$__926040518095819263aa5106cb60e01b8352339060048401611547565b0381855af4928315610295576000936102d0575b506100f783611a86565b906102be5760048101956001600160401b0396878651166001600160401b031982541617905560058201868601519081519189831161024c57908883926101448299979a98969584611586565b01906000528660002060005b8381106102a15750505050856002916101a3975560038101600160801b60ff60801b19825416179055436001820155015560405180809581946390ba52cf60e01b835286600484015260248301906114ec565b03915af491821561029557600092610262575b5050601054600160401b81101561024c5760018101806010558110156102365760106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67201556015549061021b6001600160401b0360881b918360881c166115bc565b60881b1667ffffffffffffffff60881b199190911617601555005b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b90809250813d831161028e575b61027981836112ce565b81010312610289575138806101b6565b600080fd5b503d61026f565b6040513d6000823e3d90fd5b82516001600160a01b0316818301558a9890920191600101610150565b604051631b538cdf60e11b8152600490fd5b6102ee9193503d806000833e6102e681836112ce565b8101906114c4565b91386100ed565b60405162d11df360e61b8152600490fd5b604051631036b5ad60e31b8152600490fd5b346102895760208060031936011261028957600435907f691bb03ffc16c56fc96b82fd16cd1b3715f0bc3cdc6407005f49bb6205860095906001825414610446576001825582156104345761036c336119ee565b9015610422578161038260046103a39301611380565b60405180938192632cff562160e11b835284600484015260248301906114ec565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4918215610295576000926103e4575b6000846103e1876001600160a01b0387166115fc565b55005b90809250813d831161041b575b6103fb81836112ce565b81010312610289576000926104126103e19261140b565b918194506103cb565b503d6103f1565b604051630e991abd60e41b8152600490fd5b60405163c79cad7b60e01b8152600490fd5b6040516329f745a760e01b8152600490fd5b60031960403682011261028957600435906001600160401b03821161028957604081833603011261028957602435906014548210610c3d57813410610306573415610c2b576104ec92826104ae600094346112a6565b906040519586948594632e82508d60e21b865260a060048701526104d460a487016118bd565b91336024880152868303016044870152600401611852565b9160648401526084830152038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af490811561029557600091610c08575b506001600160401b03601654168015610bf2576001600160401b0361054782824316046115bc565b16026001600160401b038116908103610bdc576001600160401b0360155460081c16606083510152600052600a6020526040600020805490600160401b82101561024c5760018201808255821015610236576000526020600020908251805180516001600160401b038151166001600160401b0319600d86028701541617600d850286015560206001600d8602870101910151908151916001600160401b03831161024c576020906105f98484611586565b0190600052602060002060005b838110610bbf5750505050602090816002600d86028701019101519060ff82511660ff1982541617905501518051906001600160401b03821161024c576003600d85028601015490600182811c92168015610bb5575b60208310146109ec5781601f849311610b7b575b50602090601f8311600114610aff57600092610af4575b50508160011b916000199060031b1c1916176003600d8402850101555b60208181015180518051600d8602870160048101805467ffffffffffffffff19166001600160401b03938416179055919093015180519293600590920191831161024c576020906106f58484611586565b0190600052602060002060005b838110610ad75750505050602090816006600d86028701019101519060ff82511660ff1982541617905501518051906001600160401b03821161024c576007600d85028601015490600182811c92168015610acd575b60208310146109ec5781601f849311610a93575b50602090601f8311600114610a1757600092610a0c575b50508160011b916000199060031b1c1916176007600d8402850101555b60408101516008600d8402850101556009600d83028401016001600160401b036060830151168154906bffffffff0000000000000000608085015160a01c16916bffffffffffffffffffffffff191617179055600a600d830284010160a08201518051906001600160401b03821161024c578254600181811c91168015610a02575b60208210146109ec57601f81116109af575b50602090601f831160011461093b5793600d9383600c979460c09460209a98600092610930575b50508160011b916000199060031b1c19161790555b0151600b83830285010155020101910151151560ff8019835416911617905560155468ffffffffffffffff006108b16001600160401b038360081c166115bc565b60081b169068ffffffffffffffff0019161760155534471061091e5760008080803460635af13d15610919573d6108e7816115e1565b906108f560405192836112ce565b8152600060203d92013e5b1561090757005b604051633204506f60e01b8152600490fd5b610900565b60405163356680b760e01b8152600490fd5b015190508b8061085b565b90601f198316918460005260206000209260005b81811061099757508460c09460209a9894600d9894600c9b986001951061097e575b505050811b019055610870565b015160001960f88460031b161c191690558b8080610971565b9293602060018192878601518155019501930161094f565b6109dc90846000526020600020601f850160051c810191602086106109e2575b601f0160051c019061156f565b87610834565b90915081906109cf565b634e487b7160e01b600052602260045260246000fd5b90607f1690610822565b015190508680610783565b92506007600d86028701016000526020600020906000935b601f1984168510610a78576001945083601f19811610610a5f575b505050811b016007600d8402850101556107a0565b015160001960f88460031b161c19169055868080610a4a565b81810151835560209485019460019093019290910190610a2f565b610ac7906007600d88028901016000526020600020601f850160051c810191602086106109e257601f0160051c019061156f565b8761076c565b91607f1691610758565b82516001600160a01b031681830155602090920191600101610702565b015190508680610687565b92506003600d86028701016000526020600020906000935b601f1984168510610b60576001945083601f19811610610b47575b505050811b016003600d8402850101556106a4565b015160001960f88460031b161c19169055868080610b32565b81810151835560209485019460019093019290910190610b17565b610baf906003600d88028901016000526020600020601f850160051c810191602086106109e257601f0160051c019061156f565b87610670565b91607f169161065c565b82516001600160a01b031681830155602090920191600101610606565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b610c2591503d806000833e610c1d81836112ce565b81019061174d565b8161051f565b6040516360ec4e6b60e11b8152600490fd5b6040516334472ad760e11b8152600490fd5b600036600319011261028957341561030657610c6a336119ee565b9015610422576003610c7d3483546115d4565b91828155019081549060ff8260801c166006811015610cbc57600214610c9f57005b6013541115610cab575b005b60ff60801b1916600160801b179055005b634e487b7160e01b600052602160045260246000fd5b346102895760208060031936011261028957600435907f691bb03ffc16c56fc96b82fd16cd1b3715f0bc3cdc6407005f49bb62058600959060018254146104465760018255821561043457610d26336119ee565b9015610422578054848110610d755761038260046103a393610d498887956112a6565b80825560135411610d5b575b01611380565b60038101805460ff60801b1916600160811b179055610d55565b6040516379b33e7960e01b8152600490fd5b3461028957600036600319011261028957610da1336119ee565b9015610422576002810154610ee957805490601554906001600160401b0390600019828460881c1601918211610bdc5767ffffffffffffffff60881b1990921660889190911b67ffffffffffffffff60881b1617601555610e0490600401611380565b90610e2d604051926390ba52cf60e01b84528380602093849384600484015260248301906114ec565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4801561029557600090610eba575b610ca993506000526000815260056040600020600081556000600182015560006002820155600060038201556000600482015501908154906000835581610e9f575b505050336115fc565b610eb2926000526000209081019061156f565b828080610e96565b508083813d8311610ee2575b610ed081836112ce565b8101031261028957610ca99251610e54565b503d610ec6565b604051637c67c70160e11b8152600490fd5b60031990604036830112610289576001600160401b039160043583811161028957803603604083820112610289576024938435908682116102895760408583360301126102895734156112975750604051926379185f5960e11b845260a0600485015260e484019281600401358881168091036102895760a48601528187013590602219018112156102895701856004820135910192878211610289578160051b3603841361028957908085939492604060c486015252610104830191906000905b80821061126557505050610fe68291600094338985015287848303016044850152600401611852565b346064830152836084830152038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af49081156102955760009161124a575b5060209182825101515190600061106673__$a0fe38a9a81205afccc10810b09a4d3f45$__93611074604051948593849363089032d560e01b85526040600486015260448501906114ec565b90838203018a8401526118bd565b0381855af49081156102955760009161122f575b5061109281611a86565b929015610422576110ff9583600387950180548a6110b88183168060608c5101526115bc565b16906001600160401b0319161790556110dc600260408851015192019182546115d4565b90556040518097819482936304e384ff60e21b84528760048501528301906114ec565b03915af48015610295576000906111db575b7f392fae29c67f3b47710cb5b84d7a6fd08e0155a4f22565971f7159f12c6f7096935060405192839281845260c06111ba8251986040858801526111628a5160e060608a0152610140890190611961565b61117d868c015191605f1992838b83030160808c0152611961565b9160408c015160a08a015260608c0151168489015263ffffffff60e01b60808c01511660e089015260a08b0151908883030161010089015261193c565b9701516101208501520151151560408301526001600160a01b0316930390a2005b508183813d8311611228575b6111f181836112ce565b81010312610289576112237f392fae29c67f3b47710cb5b84d7a6fd08e0155a4f22565971f7159f12c6f70969361140b565b611111565b503d6111e7565b61124491503d806000833e6102e681836112ce565b86611088565b61125f91503d806000833e610c1d81836112ce565b8461101a565b919493509184356001600160a01b03811691908290036102895760019181526020809101950192018593949291610fbd565b6360ec4e6b60e11b8152600490fd5b91908203918211610bdc57565b604081019081106001600160401b0382111761024c57604052565b90601f801991011681019081106001600160401b0382111761024c57604052565b604051906112fc826112b3565b816001600160401b03601154168152604051809160125480835283602080940160126000527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34449260005b868282106113615750505061135d925003846112ce565b0152565b85546001600160a01b0316845260019586019589955093019201611346565b9060405161138d816112b3565b80926001600160401b03815416825260018091019160405191828481955492838652602080960191600052856000209060005b878682106113d8575050505061135d925003846112ce565b83546001600160a01b03168552899550909301929181019181016113c0565b51906001600160401b038216820361028957565b51906001600160a01b038216820361028957565b9190916040818403126102895760405192611439846112b3565b83611443836113f7565b8152602091828401516001600160401b0394858211610289570181601f8201121561028957805194851161024c578460051b9060405195611486868401886112ce565b865284808701928201019283116102895784809101915b8383106114ac57505050500152565b81906114b78461140b565b815201910190849061149d565b906020828203126102895781516001600160401b038111610289576114e9920161141f565b90565b60609060408301906001600160401b03815116845260209283809201519460408382015285518094520193019160005b82811061152a575050505090565b83516001600160a01b03168552938101939281019260010161151c565b9061155f6020919493946040845260408401906114ec565b6001600160a01b03909416910152565b81811061157a575050565b6000815560010161156f565b90600160401b811161024c578154908083558181106115a457505050565b6115ba926000526020600020918201910161156f565b565b9060016001600160401b0380931601918211610bdc57565b91908201809211610bdc57565b6001600160401b03811161024c57601f01601f191660200190565b81471061091e576000918291829182916001600160a01b03165af13d15611647573d611627816115e1565b9061163560405192836112ce565b8152600060203d92013e5b1561090757565b611640565b60005b83811061165f5750506000910152565b818101518382015260200161164f565b81601f82011215610289578051611685816115e1565b9261169360405194856112ce565b81845260208284010111610289576114e9916020808501910161164c565b919060408382031261028957604051926116ca846112b3565b838151916001600160401b039283811161028957846116ea91830161141f565b825260208101519083821161028957016040818503126102895760405193611711856112b3565b815160ff81168103610289578552602082015193841161028957602093611738920161166f565b828401520152565b5190811515820361028957565b906020828203126102895781516001600160401b0392838211610289570191604092838184031261028957835193611784856112b3565b81518381116102895782019360e0858203126102895781519160e083018381108682111761024c578152855185811161028957826117c39188016116b1565b8352602086015185811161028957826117dd9188016116b1565b602084015280860151908301526117f6606086016113f7565b606083015260808501516001600160e01b03198116810361028957608083015260a0850151938411610289578461183660c09260209661184a980161166f565b60a0840152015160c0820152845201611740565b602082015290565b803560ff81168091036102895782526020810135601e1982360301811215610289570190602082359201916001600160401b038111610289578036038313610289578060609360406020850152816040850152848401376000828201840152601f01601f1916010190565b60408101906001600160401b036011541681526060602091604083820152601254809452019160126000527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444916000905b82821061191c575050505090565b83546001600160a01b03168552938401936001938401939091019061190e565b906020916119558151809281855285808601910161164c565b601f01601f1916010190565b91908251906040815260808101936001600160401b038351166040830152602080930151946040606084015285518091528360a0840196019060005b8181106119d157505050936040838193816114e997980151908281860391015260ff8151168452015193820152019061193c565b82516001600160a01b03168852968501969185019160010161199d565b6001600160a01b03811615611a74576000611a2691611a0b6112ef565b60405163aa5106cb60e01b8152938492839260048401611547565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4801561029557611a5791600091611a5b575b50611a86565b9091565b611a6e913d8091833e6102e681836112ce565b38611a51565b6040516370e4510960e01b8152600490fd5b611ac473__$a0fe38a9a81205afccc10810b09a4d3f45$__91604051906390ba52cf60e01b82528180602094859384600484015260248301906114ec565b0381865af490811561029557600091611b6c575b5090611b1b916000526000815280604060002093611af860048601611380565b906040518080968194630c133d1360e31b835286600484015260248301906114ec565b03915af490811561029557600091611b35575b5090501591565b82813d8311611b65575b611b4981836112ce565b81010312611b625750611b5b90611740565b8038611b2e565b80fd5b503d611b3f565b908282813d8311611b94575b611b8281836112ce565b81010312611b62575051611b1b611ad8565b503d611b7856fea2646970667358221220b50fadf76a5952a19b9ecffc652ed4fc409ca18b7af01e5e1cd1fcb26210863a64736f6c63430008130033",
    "sourceMap": "964:5587:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1524:9;;;:29;1520:83;;1633:29;1524:9;;1633:29;:::i;:::-;964:5587;1689:10;964:5587;1676:23;;1672:82;;1791:40;964:5587;;;:::i;:::-;1791:28;964:5587;1791:28;964:5587;;;;;;;;;;1791:40;;1820:10;1791:40;964:5587;1791:40;;;:::i;:::-;;;;;;;;;;;964:5587;1791:40;;;964:5587;1885:30;;;;:::i;:::-;1926:73;;;964:5587;2009:9;;964:5587;-1:-1:-1;;;;;964:5587:45;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2157:17;964:5587;;;;;2074:13;;964:5587;;;;;;;;;;;;;2135:12;964:5587;2113:19;;964:5587;2157:17;964:5587;;;;;;;;;;;2223:17;;;964:5587;2223:17;;964:5587;;;;;;:::i;:::-;2223:17;;;;;;;;;964:5587;2223:17;;;964:5587;;;2205:12;964:5587;-1:-1:-1;;;964:5587:45;;;;;;;;;2205:12;964:5587;;;;;;2205:12;964:5587;;;;;2252:14;964:5587;;2252:19;-1:-1:-1;;;;;964:5587:45;;;;;;;2252:19;:::i;:::-;964:5587;;;-1:-1:-1;;;;964:5587:45;;;;;2252:14;964:5587;;;;;;;;;;;;;;;;;;;;;;;;;;2223:17;;;;;;;;;;;;;;;;:::i;:::-;;;964:5587;;;;;2223:17;;;;964:5587;;;;2223:17;;;;;;964:5587;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;1926:73;964:5587;;-1:-1:-1;;;1963:25:45;;964:5587;;1963:25;1791:40;;;;;;;964:5587;1791:40;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;1672:82;964:5587;;-1:-1:-1;;;1722:21:45;;964:5587;;1722:21;1520:83;964:5587;;-1:-1:-1;;;1576:16:45;;964:5587;;1576:16;964:5587;;;;;;;;;;;;;;;247:48:61;;964:5587:45;;;;582:20:61;578:50;;964:5587:45;;;3713:11;;3709:68;;3830:32;3851:10;3830:32;:::i;:::-;3876:11;;3872:70;;3960:9;964:5587;;;3960:9;;964:5587;:::i;:::-;;;;;;;;;;3960:20;;;964:5587;3960:20;;964:5587;;;;;;:::i;:::-;3960:20;:18;;:20;;;;;;;964:5587;3960:20;;;964:5587;;;3992:6;964:5587;-1:-1:-1;;;;;964:5587:45;;3992:6;:::i;:::-;964:5587;;3960:20;;;;;;;;;;;;;;;;:::i;:::-;;;964:5587;;;;;;;3992:6;964:5587;;:::i;:::-;3960:20;;;;;;;;;;;3872:70;964:5587;;-1:-1:-1;;;3910:21:45;;964:5587;;3910:21;3709:68;964:5587;;-1:-1:-1;;;3747:19:45;;964:5587;;3747:19;578:50:61;964:5587:45;;-1:-1:-1;;;611:17:61;;964:5587:45;;611:17:61;964:5587:45;-1:-1:-1;;964:5587:45;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;4162:16:59;964:5587:45;4156:22:59;;4152:74;;4239:9;;:15;4235:69;;4239:9;6032:14:45;6028:138;;964:5587;4239:9:59;;6342:15:45;964:5587;4239:9:59;;6342:15:45;:::i;:::-;964:5587;;;;;;;;;;;6202:188;;964:5587;;6202:188;;964:5587;;;;;;:::i;:::-;6291:10;;964:5587;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6202:188;:14;;:188;;;;;;;964:5587;6202:188;;;964:5587;;-1:-1:-1;;;;;9070:21:58;964:5587:45;;;;;;-1:-1:-1;;;;;10895:39:58;9056:12;;;964:5587:45;;10895:39:58;:::i;:::-;964:5587:45;;-1:-1:-1;;;;;964:5587:45;;;;;;;-1:-1:-1;;;;;9132:15:58;964:5587:45;;;;;9103:20:58;;:26;964:5587:45;;;9158:18:58;964:5587:45;;;;;;;;-1:-1:-1;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;964:5587:45;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;9158:18:58;964:5587:45;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9132:15:58;964:5587:45;;9212:20:58;-1:-1:-1;;;;;964:5587:45;;;;9212:20:58;:::i;:::-;964:5587:45;;;;;;;;9132:15:58;964:5587:45;4239:9:59;13330:21:1;:31;13326:63;;964:5587:45;4239:9:59;;;;964:5587:45;13419:35:1;;964:5587:45;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;13468:8:1;13464:33;;964:5587:45;13464:33:1;964:5587:45;;-1:-1:-1;;;13485:12:1;;964:5587:45;;13485:12:1;964:5587:45;;;13326:63:1;964:5587:45;;-1:-1:-1;;;13370:19:1;;964:5587:45;;13370:19:1;964:5587:45;;;;-1:-1:-1;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;-1:-1:-1;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;6256:13;964:5587;;;;;;;;;;;;;;;;;6202:188;;;;;;964:5587;6202:188;;;;;;:::i;:::-;;;;;:::i;:::-;;;;6028:138;964:5587;;-1:-1:-1;;;6133:22:45;;964:5587;;6133:22;4152:74:59;964:5587:45;;-1:-1:-1;;;4201:14:59;;964:5587:45;;4201:14:59;964:5587:45;;;-1:-1:-1;;964:5587:45;;;;2400:9;:14;2396:68;;2517:32;2538:10;2517:32;:::i;:::-;2564:11;;2560:70;;964:5587;2640:25;2400:9;964:5587;;2640:25;:::i;:::-;964:5587;;;;2680:13;964:5587;;;;;;;;;;;;;;;2697:15;2680:32;2676:156;;964:5587;2676:156;2748:10;964:5587;-1:-1:-1;2732:26:45;2728:94;;2676:156;964:5587;2728:94;-1:-1:-1;;;;964:5587:45;-1:-1:-1;;;964:5587:45;;;2728:94;964:5587;;;;;;;;;;;;;;;;;;;;;;;;;;;247:48:61;;964:5587:45;;;;582:20:61;578:50;;964:5587:45;;;3106:11;;3102:68;;3223:32;3244:10;3223:32;:::i;:::-;3270:11;;3266:70;;964:5587;;3349:21;;;3345:84;;964:5587;;;3439:22;;;;;;:::i;:::-;964:5587;;;3491:10;964:5587;-1:-1:-1;3472:87:45;;964:5587;3576:9;964:5587;:::i;3472:87::-;964:5587;3517:13;;964:5587;;-1:-1:-1;;;;964:5587:45;-1:-1:-1;;;964:5587:45;;;3472:87;;3345:84;964:5587;;-1:-1:-1;;;3393:25:45;;964:5587;;3393:25;964:5587;;;;;;-1:-1:-1;;964:5587:45;;;;4158:32;4179:10;4158:32;:::i;:::-;4205:11;;4201:70;;4342:17;;;964:5587;4338:86;;964:5587;;;4473:14;964:5587;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;-1:-1:-1;;;;964:5587:45;;;;;;;;-1:-1:-1;;;964:5587:45;;4473:14;964:5587;;;;4520:9;964:5587;:::i;:::-;;;;;;;;;4520:18;;;;;;;;;964:5587;4520:18;;964:5587;;;;;;:::i;:::-;4520:18;:16;;:18;;;;;;964:5587;4520:18;;;964:5587;4580:5;964:5587;;;;;;;;;;;;;;;4491:1;964:5587;;;;4342:17;964:5587;;;;;;;;;;;;;;;;;;;;;;;;;4179:10;;;;4580:5;:::i;964:5587::-;;;;;;;;;;;;:::i;:::-;;;;;;4520:18;;;;;;;;;;;;;;;:::i;:::-;;;964:5587;;;;4580:5;964:5587;;4520:18;;;;;;;4338:86;964:5587;;-1:-1:-1;;;4387:26:45;;964:5587;;4387:26;964:5587;-1:-1:-1;;964:5587:45;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5121:9;:14;5117:135;;964:5587;;;;;;;5288:220;;964:5587;;5288:220;;964:5587;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5369:10;;;964:5587;5369:10;;964:5587;5369:10;;964:5587;;;;;;;;;;;;;;;;:::i;:::-;5121:9;964:5587;;;;;;;;;5288:220;:14;;:220;;;;;;;964:5587;5288:220;;;964:5587;;;8162:20:58;;;;:23;;:32;:37;964:5587:45;;8162:37:58;964:5587:45;;;;;;;;;;;;8162:52:58;;964:5587:45;;8162:52:58;;964:5587:45;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;8162:52:58;;;;;;;;;;964:5587:45;8162:52:58;;;964:5587:45;8268:19:58;;;;:::i;:::-;8302:11;;;8298:70;;964:5587:45;8400:19:58;;964:5587:45;8400:19:58;;;964:5587:45;;;8503:16:58;964:5587:45;;;8430:20:58;964:5587:45;8430:20:58;;:26;964:5587:45;8503:16:58;:::i;:::-;964:5587:45;;-1:-1:-1;;;;;964:5587:45;;;;;8529:47:58;:17;964:5587:45;8550:20:58;;:26;964:5587:45;8529:17:58;;964:5587:45;;;8529:47:58;:::i;:::-;964:5587:45;;;;;;;;;;;;;8619:21:58;;;964:5587:45;8619:21:58;;964:5587:45;;;;;:::i;:::-;8619:21:58;;;;;;;;964:5587:45;8619:21:58;;;964:5587:45;8592:73:58;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;8592:73:58;;;964:5587:45;8619:21:58;;;;;;;;;;;;;;;:::i;:::-;;;964:5587:45;;;;;8592:73:58;964:5587:45;;:::i;:::-;8619:21:58;;;;;;;8162:52;;;;;;964:5587:45;8162:52:58;;;;;;:::i;:::-;;;;5288:220:45;;;;;;964:5587;5288:220;;;;;;:::i;:::-;;;;964:5587;;;;-1:-1:-1;964:5587:45;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;5117:135;-1:-1:-1;;;5219:22:45;;964:5587;;5219:22;964:5587;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1791:13:45;964:5587;;;;;;;;;;;;;;;;;;;-1:-1:-1;964:5587:45;;;-1:-1:-1;964:5587:45;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;-1:-1:-1;964:5587:45;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;964:5587:45;;-1:-1:-1;964:5587:45;;-1:-1:-1;964:5587:45;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;964:5587:45;;;;;-1:-1:-1;964:5587:45;;;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;:::o;:::-;;;-1:-1:-1;;;;;964:5587:45;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;964:5587:45;;;;;;:::o;:::-;;;;;;;;:::o;:::-;-1:-1:-1;964:5587:45;;;;;;;;-1:-1:-1;;;964:5587:45;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;964:5587:45;;-1:-1:-1;964:5587:45;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;964:5587:45;;;;;;-1:-1:-1;;964:5587:45;;;;:::o;13246:258:1:-;13330:21;;:31;13326:63;;13419:35;;;;;;;;-1:-1:-1;;;;;964:5587:45;13419:35:1;;964:5587:45;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;13419:35:1;964:5587:45;;;;;;13468:8:1;13464:33;;13246:258::o;964:5587:45:-;;;;;;;;;;;-1:-1:-1;;964:5587:45;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;964:5587:45;;;;;;;;-1:-1:-1;;964:5587:45;;;;:::o;:::-;;;;;-1:-1:-1;;;;;8200:13:58;964:5587:45;;;;;;;;;;;;;;;;;;;;-1:-1:-1;964:5587:45;;;-1:-1:-1;964:5587:45;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;964:5587:45;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;964:5587:45;;;;;;;;;;;;;;;9454:372:58;-1:-1:-1;;;;;964:5587:45;;9637:19:58;9633:78;;3832:45:59;9747:35:58;964:5587:45;;;:::i;:::-;;;-1:-1:-1;;;9747:35:58;;964:5587:45;;;;;9747:35:58;;;;:::i;:::-;;:28;;:35;;;;;;9800:19;9747:35;3832:45:59;9747:35:58;;;9454:372;9800:19;;:::i;:::-;9793:26;;9454:372::o;9747:35::-;;;;;;;;;;;;:::i;:::-;;;;9633:78;964:5587:45;;-1:-1:-1;;;9679:21:58;;;;;10022:272;964:5587:45;10231:15:58;964:5587:45;;;;;;;10231:17:58;;;;;;;;;;;;964:5587:45;;;;;;:::i;:::-;10231:17:58;;;;;;;;;;3832:45:59;10231:17:58;;;10022:272;964:5587:45;;;;3832:45:59;964:5587:45;3832:45:59;964:5587:45;;;;3832:45:59;964:5587:45;10268:9:58;964:5587:45;10231:17:58;10268:9;;964:5587:45;:::i;:::-;;;;;;;;;;;;10268:19:58;;;10231:17;10268:19;;964:5587:45;;;;;;:::i;:::-;10268:19:58;;;;;;;;;3832:45:59;10268:19:58;;;10022:272;10267:20;;;;10022:272;:::o;10268:19::-;;;;;;;;;;;;;:::i;:::-;;;964:5587:45;;;;;;;;:::i;:::-;10268:19:58;;;;964:5587:45;;;10268:19:58;;;;;10231:17;;;;;;;;;;;;;;;:::i;:::-;;;964:5587:45;;;;-1:-1:-1;964:5587:45;;10231:17:58;;;;;;",
    "linkReferences": {
      "src/lib/CrossMsgHelper.sol": {
        "CrossMsgHelper": [
          {
            "start": 1275,
            "length": 20
          },
          {
            "start": 4086,
            "length": 20
          }
        ]
      },
      "src/lib/SubnetIDHelper.sol": {
        "SubnetIDHelper": [
          {
            "start": 169,
            "length": 20
          },
          {
            "start": 935,
            "length": 20
          },
          {
            "start": 3633,
            "length": 20
          },
          {
            "start": 4140,
            "length": 20
          },
          {
            "start": 6698,
            "length": 20
          },
          {
            "start": 6795,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "addStake()": "5a627dbc",
    "fund((uint64,address[]),(uint8,bytes))": "18f44b70",
    "kill()": "41c0e1b5",
    "register(uint256)": "f207564e",
    "release((uint8,bytes),uint256)": "9ba53580",
    "releaseRewardForRelayer(uint256)": "d8e25572",
    "releaseStake(uint256)": "45f54485"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyRegisteredSubnet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotReleaseZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidActorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCrossMsgValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEmptySubnetCircSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughCollateral\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughFundsToRelease\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotRegisteredSubnet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"to\",\"type\":\"tuple\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genesisCircSupply\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseRewardForRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"fund((uint64,address[]),(uint8,bytes))\":{\"params\":{\"subnetId\":\": the destination subnet for the funds.\",\"to\":\": the address to which to credit funds in the destination subnet.\"}},\"register(uint256)\":{\"details\":\"The subnet can optionally pass a genesis circulating supply that would be pre-allocated in the subnet from genesis (without having to wait for the subnet to be spawned to propagate the funds).\"},\"release((uint8,bytes),uint256)\":{\"params\":{\"fee\":\": the fee that validators on the parent subnet get to keep for including this message.\",\"to\":\": the address to which to credit funds in the parent subnet.\"}},\"releaseStake(uint256)\":{\"details\":\"it can be used to release the stake or reward of the validator\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake()\":{\"notice\":\"addStake - add collateral for an existing subnet\"},\"fund((uint64,address[]),(uint8,bytes))\":{\"notice\":\"fund() credits the received value to the specified address in the specified child subnet. There may be an associated fee that gets distributed to validators in the subnet. Currently this fee is zero, i.e. funding a subnet is free.\"},\"kill()\":{\"notice\":\"kill an existing subnet. It's balance must be empty\"},\"register(uint256)\":{\"notice\":\"register a subnet in the gateway. It is called by a subnet when it reaches the threshold stake\"},\"release((uint8,bytes),uint256)\":{\"notice\":\"release() burns the received value and releases them from this subnet onto the parent by committing a bottom-up message.\"},\"releaseStake(uint256)\":{\"notice\":\"release amount for an existing subnetrelease collateral for an existing subnet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/gateway/GatewayManagerFacet.sol\":\"GatewayManagerFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":\\\"ds-test/=lib/forge-std/lib/ds-test/src/,forge-std/=lib/forge-std/src/,openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/,fevmate=lib/fevmate/contracts,murky/=lib/murky/src,elliptic-curve-solidity/=lib/elliptic-curve-solidity\\\"/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/fevmate/contracts/utils/FilAddress.sol\":{\"keccak256\":\"0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7\",\"dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5\",\"dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xb97d36c301445278c5f8fd94c7bda1c7406d28def61da67864cb6e27f359d6da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63d542fd2f752d7f715057cbb956e95e198d1ce0545092212025369920a9c33a\",\"dweb:/ipfs/QmNbjRRr4u2denjbZrsQhU5d4mxPyyfv2m5t3suKToLwaB\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3ddad25673a903c650b6f78ad878f0559c66c30ace86e1110ff44fd07900264c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7907214499f21a835a3582b3c24d2844f70a19c6874458e5daae3d0eef205c81\",\"dweb:/ipfs/QmSALTEWv1GbTHH5b739hjzrWC78DDe7trbxEgt5pniF9k\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b\",\"dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593\",\"dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT\"]},\"src/constants/Constants.sol\":{\"keccak256\":\"0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940\",\"dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx\"]},\"src/enums/ConsensusType.sol\":{\"keccak256\":\"0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0\",\"dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ\"]},\"src/enums/Status.sol\":{\"keccak256\":\"0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33\",\"dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R\"]},\"src/errors/IPCErrors.sol\":{\"keccak256\":\"0xe8274eebddf0165a7d06106ba84ae6aba4eb0dfb15b3d53050d2ad1dd946623e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d453d5e7658b8044cf35f09e4bc07f4c713bf392e9973af564448e93a9cc7b6e\",\"dweb:/ipfs/QmVvypS5x1gw3sR6PyGEPHQB8cExTLkfrHyY6FAK6Tbbzu\"]},\"src/gateway/GatewayManagerFacet.sol\":{\"keccak256\":\"0x16589216116dca519e769285b779d5b4168d7554c0f00b6ac1b1c2c97b31a149\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://517d5b3fe6d89ed05a1ed23d4558cad216e3d7d9e0ebe15a8dacdd1aa3dd4ef6\",\"dweb:/ipfs/QmT4BvaWzxoJAyQqKhowTwo8qBBVJ8WAd7QzMcH5aDez6p\"]},\"src/interfaces/IGateway.sol\":{\"keccak256\":\"0xb4209b44c3965fd233387ece78149461bd64a47788c3af24edb7c99ea1ef8868\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4db7a4573100063387e170c55a69772b20e403444e9d97b24cc220a71a52fbbb\",\"dweb:/ipfs/QmTYsSjmFsTwuNTXBByZKueJZLpe7RwNzLRWNPxXGA3YKB\"]},\"src/interfaces/ISubnetActor.sol\":{\"keccak256\":\"0x38a9c1e7dc30db637b36e87eb8b21563a0acad65beb1583431ce5b165ae45905\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://215522a9761c5534ea7c7cbb968fd9013f7d07cb79953a689534b7bc2517f846\",\"dweb:/ipfs/QmVkgQMKh1Mw8URtGW1ytEj817B88HtWKyh78qMD9uGskE\"]},\"src/lib/AccountHelper.sol\":{\"keccak256\":\"0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc\",\"dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z\"]},\"src/lib/CrossMsgHelper.sol\":{\"keccak256\":\"0xd51248fb13fcd1c1321b44621aafd0a12cd183e35a17180b4fdb6a9ae6275b13\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://fa0c938a62e4abdafe6379e0ee5fa94c7adf6bc30564296d7bdb90cb48f0adf1\",\"dweb:/ipfs/QmTQWo17b2icCR3ZASu8LcdLHUDVMS61E7HsBPD4QrHMCr\"]},\"src/lib/FvmAddressHelper.sol\":{\"keccak256\":\"0x2ffadbf7e4247b489386e96d0af302cb633f376a160d4d6de2188aef69c443d8\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d6a148fb5ace9772aa8049427466a07a9e2eed71b11a4cda3721cdbb91039e12\",\"dweb:/ipfs/QmUmxKwVMMqejELpFoMqeFJpRL6fmVmn76EXPXvJhSwQMp\"]},\"src/lib/LibGateway.sol\":{\"keccak256\":\"0x6508e7f88a9f005db0bbfb3c6778c253c31a117fba0b55fe379c7f463378d710\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://18d76e001a128a6c585ce0da6ab4f807e888ae96a84808920d18e34f92fddb4e\",\"dweb:/ipfs/QmU76ZuDa3oyhH9v64KirmQd8GGGsDMn37FKmPBCYj1vW8\"]},\"src/lib/LibGatewayActorStorage.sol\":{\"keccak256\":\"0xb61284e3d7981a233030df31db55602fb104692d7cb92c6e58ecb54f8836b942\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://00632f2695c5a40776b5c489b3c49fb01f316eab112de788929e2076bdb82e91\",\"dweb:/ipfs/QmVzmckZQ931PvfhXVbZzC5Qa721WTu9bkefQcbQ8WjHqv\"]},\"src/lib/LibReentrancyGuard.sol\":{\"keccak256\":\"0x1e5dc47d8e84c482ba263bbbdcd03f9beccb875cafc79bbe0c45565663cb7968\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4b85b43885889d815f324b427229badc45cef2cdc526ac89a0917c1c7d884514\",\"dweb:/ipfs/QmYpa1DgAmBx1cXrZL2r6Sm98eNKfUxqAnsHhnG13eqbQ1\"]},\"src/lib/LibStaking.sol\":{\"keccak256\":\"0x1e0fbdeb7f1ff0d7e6e7295efd7cd01df583eb16c37bb61ee037bad2cc519e60\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://037b48c9a88650756f0c2a25e808575b6900aca40b1f9a3c86d0cdf9881edcc1\",\"dweb:/ipfs/QmeKfFf59nSUtVEwdWtqePCqSd7drXjTEsVpFaiD2uFmZL\"]},\"src/lib/LibStakingChangeLog.sol\":{\"keccak256\":\"0xa4273910f3ad3377843e6bf386b6a6752aa635e2962effdb50657bcbb1f53583\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://bfc0de35c4dc0ce86b7dc360a48b4ec39d68dc1f384736df2eb5181fda7e7006\",\"dweb:/ipfs/QmW7Gm2DnmpVZdJ7gMx4vcumkG6pP7UJgBskdLtuJrSrq9\"]},\"src/lib/LibSubnetActorStorage.sol\":{\"keccak256\":\"0xe11ae56d18ef43fd9ebdf9350977f9a26da4ee9a3288b46b04c5b973aa231f28\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f616b61fde1528a8666d09c962d7f23a82b200229691794933f39c4d3781fc1c\",\"dweb:/ipfs/QmXQsNGv6R34wAx1fRoyMiwdtGgQVn1qDXGCr7cED92vvJ\"]},\"src/lib/SubnetIDHelper.sol\":{\"keccak256\":\"0xdb259b9b40f68daf4f06700dda1e4a7d960b300557d382152b46be4c508c7a64\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://405bb53896fa0cfc77ab1cea489e70d5c9d94b709e75875414e91e43041f9fe5\",\"dweb:/ipfs/QmNgzdZ6YvBXVcmdnbZKfEmei4m8iv9LQoXv6jMYiC8gK9\"]},\"src/lib/priority/LibMaxPQ.sol\":{\"keccak256\":\"0x2e8e8e8bcab391fee253379921ad0a1c5e5e94ae72ff5dc2a1495530767801b7\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://25743e55c8f9107c07569523835e5618ef66df7174adf5cd2ccff5c7490d168e\",\"dweb:/ipfs/QmeqTaiAvzYA2KzCEaEdgbt7mbdkStAHeerb3EBMCW6vLS\"]},\"src/lib/priority/LibMinPQ.sol\":{\"keccak256\":\"0x535dc505b2b46450762965cc555639d2b416e6b5ccab1a71db67877114d25067\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://ba7cc9b635965d426109c8964d435aa01fce0f633c628e15da524da59806b38f\",\"dweb:/ipfs/QmbeuRhBNccfgx2NMM94XVgZ9Gvb9xzqm6LsWQNnGhwgEW\"]},\"src/lib/priority/LibPQ.sol\":{\"keccak256\":\"0x4a4a7d00e928fb9173681a7c1f36b8204470f335a3870a48c131b83bc96390b7\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://48444c7f7ff0bb5719b0c17ed0393d7a40d3dca32da52bbdc31e8349150c470f\",\"dweb:/ipfs/QmRYzmRUM3W9bB2FG2J9yi12sbfJTt9fbwvyjJXrEtq4Vc\"]},\"src/structs/Checkpoint.sol\":{\"keccak256\":\"0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a\",\"dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww\"]},\"src/structs/FvmAddress.sol\":{\"keccak256\":\"0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac\",\"dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu\"]},\"src/structs/Subnet.sol\":{\"keccak256\":\"0x09540d46add1f9753f6231c9ae22f2474f88ff4ca2c242cbd6bfb4c8d5879faa\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://08217bca1ca49f9171b5e37a6f3c9ea1406ea9aaf7e72b581149201e07e4d850\",\"dweb:/ipfs/Qmb1qSnywSiPQptYFSSb8FJY9XdSNrnkv83tDLkdeC98ju\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyRegisteredSubnet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotReleaseZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientFunds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidActorAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCrossMsgValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEmptySubnetCircSupply"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughCollateral"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughFee"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughFunds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughFundsToRelease"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotRegisteredSubnet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyError"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct SubnetID",
              "name": "subnetId",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "root",
                  "type": "uint64"
                },
                {
                  "internalType": "address[]",
                  "name": "route",
                  "type": "address[]"
                }
              ]
            },
            {
              "internalType": "struct FvmAddress",
              "name": "to",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "addrType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "payload",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "fund"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "kill"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "genesisCircSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "register"
        },
        {
          "inputs": [
            {
              "internalType": "struct FvmAddress",
              "name": "to",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "addrType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "payload",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "release"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "releaseRewardForRelayer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "releaseStake"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "fund((uint64,address[]),(uint8,bytes))": {
            "params": {
              "subnetId": ": the destination subnet for the funds.",
              "to": ": the address to which to credit funds in the destination subnet."
            }
          },
          "register(uint256)": {
            "details": "The subnet can optionally pass a genesis circulating supply that would be pre-allocated in the subnet from genesis (without having to wait for the subnet to be spawned to propagate the funds)."
          },
          "release((uint8,bytes),uint256)": {
            "params": {
              "fee": ": the fee that validators on the parent subnet get to keep for including this message.",
              "to": ": the address to which to credit funds in the parent subnet."
            }
          },
          "releaseStake(uint256)": {
            "details": "it can be used to release the stake or reward of the validator"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake()": {
            "notice": "addStake - add collateral for an existing subnet"
          },
          "fund((uint64,address[]),(uint8,bytes))": {
            "notice": "fund() credits the received value to the specified address in the specified child subnet. There may be an associated fee that gets distributed to validators in the subnet. Currently this fee is zero, i.e. funding a subnet is free."
          },
          "kill()": {
            "notice": "kill an existing subnet. It's balance must be empty"
          },
          "register(uint256)": {
            "notice": "register a subnet in the gateway. It is called by a subnet when it reaches the threshold stake"
          },
          "release((uint8,bytes),uint256)": {
            "notice": "release() burns the received value and releases them from this subnet onto the parent by committing a bottom-up message."
          },
          "releaseStake(uint256)": {
            "notice": "release amount for an existing subnetrelease collateral for an existing subnet"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":\"ds-test/=lib/forge-std/lib/ds-test/src/,forge-std/=lib/forge-std/src/,openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/,fevmate=lib/fevmate/contracts,murky/=lib/murky/src,elliptic-curve-solidity/=lib/elliptic-curve-solidity\"/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":fevmate/=lib/fevmate/contracts/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/gateway/GatewayManagerFacet.sol": "GatewayManagerFacet"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/fevmate/contracts/utils/FilAddress.sol": {
        "keccak256": "0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31",
        "urls": [
          "bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7",
          "dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1",
        "urls": [
          "bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5",
          "dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xb97d36c301445278c5f8fd94c7bda1c7406d28def61da67864cb6e27f359d6da",
        "urls": [
          "bzz-raw://63d542fd2f752d7f715057cbb956e95e198d1ce0545092212025369920a9c33a",
          "dweb:/ipfs/QmNbjRRr4u2denjbZrsQhU5d4mxPyyfv2m5t3suKToLwaB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x3ddad25673a903c650b6f78ad878f0559c66c30ace86e1110ff44fd07900264c",
        "urls": [
          "bzz-raw://7907214499f21a835a3582b3c24d2844f70a19c6874458e5daae3d0eef205c81",
          "dweb:/ipfs/QmSALTEWv1GbTHH5b739hjzrWC78DDe7trbxEgt5pniF9k"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb",
        "urls": [
          "bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b",
          "dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892",
        "urls": [
          "bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593",
          "dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT"
        ],
        "license": "MIT"
      },
      "src/constants/Constants.sol": {
        "keccak256": "0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546",
        "urls": [
          "bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940",
          "dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/enums/ConsensusType.sol": {
        "keccak256": "0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d",
        "urls": [
          "bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0",
          "dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/enums/Status.sol": {
        "keccak256": "0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c",
        "urls": [
          "bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33",
          "dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/errors/IPCErrors.sol": {
        "keccak256": "0xe8274eebddf0165a7d06106ba84ae6aba4eb0dfb15b3d53050d2ad1dd946623e",
        "urls": [
          "bzz-raw://d453d5e7658b8044cf35f09e4bc07f4c713bf392e9973af564448e93a9cc7b6e",
          "dweb:/ipfs/QmVvypS5x1gw3sR6PyGEPHQB8cExTLkfrHyY6FAK6Tbbzu"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/gateway/GatewayManagerFacet.sol": {
        "keccak256": "0x16589216116dca519e769285b779d5b4168d7554c0f00b6ac1b1c2c97b31a149",
        "urls": [
          "bzz-raw://517d5b3fe6d89ed05a1ed23d4558cad216e3d7d9e0ebe15a8dacdd1aa3dd4ef6",
          "dweb:/ipfs/QmT4BvaWzxoJAyQqKhowTwo8qBBVJ8WAd7QzMcH5aDez6p"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/interfaces/IGateway.sol": {
        "keccak256": "0xb4209b44c3965fd233387ece78149461bd64a47788c3af24edb7c99ea1ef8868",
        "urls": [
          "bzz-raw://4db7a4573100063387e170c55a69772b20e403444e9d97b24cc220a71a52fbbb",
          "dweb:/ipfs/QmTYsSjmFsTwuNTXBByZKueJZLpe7RwNzLRWNPxXGA3YKB"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/interfaces/ISubnetActor.sol": {
        "keccak256": "0x38a9c1e7dc30db637b36e87eb8b21563a0acad65beb1583431ce5b165ae45905",
        "urls": [
          "bzz-raw://215522a9761c5534ea7c7cbb968fd9013f7d07cb79953a689534b7bc2517f846",
          "dweb:/ipfs/QmVkgQMKh1Mw8URtGW1ytEj817B88HtWKyh78qMD9uGskE"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/AccountHelper.sol": {
        "keccak256": "0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5",
        "urls": [
          "bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc",
          "dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/CrossMsgHelper.sol": {
        "keccak256": "0xd51248fb13fcd1c1321b44621aafd0a12cd183e35a17180b4fdb6a9ae6275b13",
        "urls": [
          "bzz-raw://fa0c938a62e4abdafe6379e0ee5fa94c7adf6bc30564296d7bdb90cb48f0adf1",
          "dweb:/ipfs/QmTQWo17b2icCR3ZASu8LcdLHUDVMS61E7HsBPD4QrHMCr"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/FvmAddressHelper.sol": {
        "keccak256": "0x2ffadbf7e4247b489386e96d0af302cb633f376a160d4d6de2188aef69c443d8",
        "urls": [
          "bzz-raw://d6a148fb5ace9772aa8049427466a07a9e2eed71b11a4cda3721cdbb91039e12",
          "dweb:/ipfs/QmUmxKwVMMqejELpFoMqeFJpRL6fmVmn76EXPXvJhSwQMp"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibGateway.sol": {
        "keccak256": "0x6508e7f88a9f005db0bbfb3c6778c253c31a117fba0b55fe379c7f463378d710",
        "urls": [
          "bzz-raw://18d76e001a128a6c585ce0da6ab4f807e888ae96a84808920d18e34f92fddb4e",
          "dweb:/ipfs/QmU76ZuDa3oyhH9v64KirmQd8GGGsDMn37FKmPBCYj1vW8"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibGatewayActorStorage.sol": {
        "keccak256": "0xb61284e3d7981a233030df31db55602fb104692d7cb92c6e58ecb54f8836b942",
        "urls": [
          "bzz-raw://00632f2695c5a40776b5c489b3c49fb01f316eab112de788929e2076bdb82e91",
          "dweb:/ipfs/QmVzmckZQ931PvfhXVbZzC5Qa721WTu9bkefQcbQ8WjHqv"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibReentrancyGuard.sol": {
        "keccak256": "0x1e5dc47d8e84c482ba263bbbdcd03f9beccb875cafc79bbe0c45565663cb7968",
        "urls": [
          "bzz-raw://4b85b43885889d815f324b427229badc45cef2cdc526ac89a0917c1c7d884514",
          "dweb:/ipfs/QmYpa1DgAmBx1cXrZL2r6Sm98eNKfUxqAnsHhnG13eqbQ1"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibStaking.sol": {
        "keccak256": "0x1e0fbdeb7f1ff0d7e6e7295efd7cd01df583eb16c37bb61ee037bad2cc519e60",
        "urls": [
          "bzz-raw://037b48c9a88650756f0c2a25e808575b6900aca40b1f9a3c86d0cdf9881edcc1",
          "dweb:/ipfs/QmeKfFf59nSUtVEwdWtqePCqSd7drXjTEsVpFaiD2uFmZL"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibStakingChangeLog.sol": {
        "keccak256": "0xa4273910f3ad3377843e6bf386b6a6752aa635e2962effdb50657bcbb1f53583",
        "urls": [
          "bzz-raw://bfc0de35c4dc0ce86b7dc360a48b4ec39d68dc1f384736df2eb5181fda7e7006",
          "dweb:/ipfs/QmW7Gm2DnmpVZdJ7gMx4vcumkG6pP7UJgBskdLtuJrSrq9"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/LibSubnetActorStorage.sol": {
        "keccak256": "0xe11ae56d18ef43fd9ebdf9350977f9a26da4ee9a3288b46b04c5b973aa231f28",
        "urls": [
          "bzz-raw://f616b61fde1528a8666d09c962d7f23a82b200229691794933f39c4d3781fc1c",
          "dweb:/ipfs/QmXQsNGv6R34wAx1fRoyMiwdtGgQVn1qDXGCr7cED92vvJ"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/SubnetIDHelper.sol": {
        "keccak256": "0xdb259b9b40f68daf4f06700dda1e4a7d960b300557d382152b46be4c508c7a64",
        "urls": [
          "bzz-raw://405bb53896fa0cfc77ab1cea489e70d5c9d94b709e75875414e91e43041f9fe5",
          "dweb:/ipfs/QmNgzdZ6YvBXVcmdnbZKfEmei4m8iv9LQoXv6jMYiC8gK9"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/priority/LibMaxPQ.sol": {
        "keccak256": "0x2e8e8e8bcab391fee253379921ad0a1c5e5e94ae72ff5dc2a1495530767801b7",
        "urls": [
          "bzz-raw://25743e55c8f9107c07569523835e5618ef66df7174adf5cd2ccff5c7490d168e",
          "dweb:/ipfs/QmeqTaiAvzYA2KzCEaEdgbt7mbdkStAHeerb3EBMCW6vLS"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/priority/LibMinPQ.sol": {
        "keccak256": "0x535dc505b2b46450762965cc555639d2b416e6b5ccab1a71db67877114d25067",
        "urls": [
          "bzz-raw://ba7cc9b635965d426109c8964d435aa01fce0f633c628e15da524da59806b38f",
          "dweb:/ipfs/QmbeuRhBNccfgx2NMM94XVgZ9Gvb9xzqm6LsWQNnGhwgEW"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/lib/priority/LibPQ.sol": {
        "keccak256": "0x4a4a7d00e928fb9173681a7c1f36b8204470f335a3870a48c131b83bc96390b7",
        "urls": [
          "bzz-raw://48444c7f7ff0bb5719b0c17ed0393d7a40d3dca32da52bbdc31e8349150c470f",
          "dweb:/ipfs/QmRYzmRUM3W9bB2FG2J9yi12sbfJTt9fbwvyjJXrEtq4Vc"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/structs/Checkpoint.sol": {
        "keccak256": "0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746",
        "urls": [
          "bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a",
          "dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/structs/FvmAddress.sol": {
        "keccak256": "0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069",
        "urls": [
          "bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac",
          "dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/structs/Subnet.sol": {
        "keccak256": "0x09540d46add1f9753f6231c9ae22f2474f88ff4ca2c242cbd6bfb4c8d5879faa",
        "urls": [
          "bzz-raw://08217bca1ca49f9171b5e37a6f3c9ea1406ea9aaf7e72b581149201e07e4d850",
          "dweb:/ipfs/Qmb1qSnywSiPQptYFSSb8FJY9XdSNrnkv83tDLkdeC98ju"
        ],
        "license": "MIT OR Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/gateway/GatewayManagerFacet.sol",
    "id": 38098,
    "exportedSymbols": {
      "AlreadyRegisteredSubnet": [
        36841
      ],
      "BURNT_FUNDS_ACTOR": [
        36323
      ],
      "CannotReleaseZero": [
        36845
      ],
      "CrossMsg": [
        47227
      ],
      "CrossMsgHelper": [
        40099
      ],
      "FilAddress": [
        1428
      ],
      "FvmAddress": [
        47251
      ],
      "GatewayActorModifiers": [
        42026
      ],
      "GatewayManagerFacet": [
        38097
      ],
      "InvalidCrossMsgValue": [
        36887
      ],
      "LibGateway": [
        41823
      ],
      "Membership": [
        47424
      ],
      "NotEmptySubnetCircSupply": [
        36921
      ],
      "NotEnoughCollateral": [
        36927
      ],
      "NotEnoughFunds": [
        36931
      ],
      "NotEnoughFundsToRelease": [
        36933
      ],
      "NotRegisteredSubnet": [
        36943
      ],
      "ReentrancyGuard": [
        42246
      ],
      "Status": [
        36835
      ],
      "Subnet": [
        47298
      ],
      "SubnetID": [
        47281
      ],
      "SubnetIDHelper": [
        45676
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:6506:45",
    "nodes": [
      {
        "id": 37610,
        "nodeType": "PragmaDirective",
        "src": "46:23:45",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 37612,
        "nodeType": "ImportDirective",
        "src": "71:72:45",
        "nodes": [],
        "absolutePath": "src/lib/LibGatewayActorStorage.sol",
        "file": "../lib/LibGatewayActorStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38098,
        "sourceUnit": 42027,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37611,
              "name": "GatewayActorModifiers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42026,
              "src": "79:21:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37614,
        "nodeType": "ImportDirective",
        "src": "144:61:45",
        "nodes": [],
        "absolutePath": "src/constants/Constants.sol",
        "file": "../constants/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38098,
        "sourceUnit": 36345,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37613,
              "name": "BURNT_FUNDS_ACTOR",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36323,
              "src": "152:17:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37616,
        "nodeType": "ImportDirective",
        "src": "206:51:45",
        "nodes": [],
        "absolutePath": "src/structs/Checkpoint.sol",
        "file": "../structs/Checkpoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38098,
        "sourceUnit": 47245,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37615,
              "name": "CrossMsg",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47227,
              "src": "214:8:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37618,
        "nodeType": "ImportDirective",
        "src": "258:43:45",
        "nodes": [],
        "absolutePath": "src/enums/Status.sol",
        "file": "../enums/Status.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38098,
        "sourceUnit": 36836,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37617,
              "name": "Status",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36835,
              "src": "266:6:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37620,
        "nodeType": "ImportDirective",
        "src": "302:53:45",
        "nodes": [],
        "absolutePath": "src/structs/FvmAddress.sol",
        "file": "../structs/FvmAddress.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38098,
        "sourceUnit": 47259,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37619,
              "name": "FvmAddress",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47251,
              "src": "310:10:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37623,
        "nodeType": "ImportDirective",
        "src": "356:55:45",
        "nodes": [],
        "absolutePath": "src/structs/Subnet.sol",
        "file": "../structs/Subnet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38098,
        "sourceUnit": 47425,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37621,
              "name": "SubnetID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47281,
              "src": "364:8:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37622,
              "name": "Subnet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47298,
              "src": "374:6:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37625,
        "nodeType": "ImportDirective",
        "src": "412:49:45",
        "nodes": [],
        "absolutePath": "src/structs/Subnet.sol",
        "file": "../structs/Subnet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38098,
        "sourceUnit": 47425,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37624,
              "name": "Membership",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47424,
              "src": "420:10:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37634,
        "nodeType": "ImportDirective",
        "src": "462:214:45",
        "nodes": [],
        "absolutePath": "src/errors/IPCErrors.sol",
        "file": "../errors/IPCErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38098,
        "sourceUnit": 36988,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37626,
              "name": "AlreadyRegisteredSubnet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36841,
              "src": "470:23:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37627,
              "name": "CannotReleaseZero",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36845,
              "src": "495:17:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37628,
              "name": "NotEnoughFunds",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36931,
              "src": "514:14:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37629,
              "name": "NotEnoughFundsToRelease",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36933,
              "src": "530:23:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37630,
              "name": "NotEnoughCollateral",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36927,
              "src": "555:19:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37631,
              "name": "NotEmptySubnetCircSupply",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36921,
              "src": "576:24:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37632,
              "name": "NotRegisteredSubnet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36943,
              "src": "602:19:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37633,
              "name": "InvalidCrossMsgValue",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36887,
              "src": "623:20:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37636,
        "nodeType": "ImportDirective",
        "src": "677:49:45",
        "nodes": [],
        "absolutePath": "src/lib/LibGateway.sol",
        "file": "../lib/LibGateway.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38098,
        "sourceUnit": 41824,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37635,
              "name": "LibGateway",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41823,
              "src": "685:10:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37638,
        "nodeType": "ImportDirective",
        "src": "727:57:45",
        "nodes": [],
        "absolutePath": "src/lib/SubnetIDHelper.sol",
        "file": "../lib/SubnetIDHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38098,
        "sourceUnit": 45677,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37637,
              "name": "SubnetIDHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45676,
              "src": "735:14:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37640,
        "nodeType": "ImportDirective",
        "src": "785:57:45",
        "nodes": [],
        "absolutePath": "src/lib/CrossMsgHelper.sol",
        "file": "../lib/CrossMsgHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38098,
        "sourceUnit": 40100,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37639,
              "name": "CrossMsgHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40099,
              "src": "793:14:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37642,
        "nodeType": "ImportDirective",
        "src": "843:56:45",
        "nodes": [],
        "absolutePath": "lib/fevmate/contracts/utils/FilAddress.sol",
        "file": "fevmate/utils/FilAddress.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38098,
        "sourceUnit": 1429,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37641,
              "name": "FilAddress",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1428,
              "src": "851:10:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37644,
        "nodeType": "ImportDirective",
        "src": "900:62:45",
        "nodes": [],
        "absolutePath": "src/lib/LibReentrancyGuard.sol",
        "file": "../lib/LibReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38098,
        "sourceUnit": 42247,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37643,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42246,
              "src": "908:15:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38097,
        "nodeType": "ContractDefinition",
        "src": "964:5587:45",
        "nodes": [
          {
            "id": 37651,
            "nodeType": "UsingForDirective",
            "src": "1041:37:45",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37649,
              "name": "FilAddress",
              "nameLocations": [
                "1047:10:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1428,
              "src": "1047:10:45"
            },
            "typeName": {
              "id": 37650,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1062:15:45",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "id": 37655,
            "nodeType": "UsingForDirective",
            "src": "1083:34:45",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37652,
              "name": "SubnetIDHelper",
              "nameLocations": [
                "1089:14:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45676,
              "src": "1089:14:45"
            },
            "typeName": {
              "id": 37654,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37653,
                "name": "SubnetID",
                "nameLocations": [
                  "1108:8:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47281,
                "src": "1108:8:45"
              },
              "referencedDeclaration": 47281,
              "src": "1108:8:45",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_SubnetID_$47281_storage_ptr",
                "typeString": "struct SubnetID"
              }
            }
          },
          {
            "id": 37761,
            "nodeType": "FunctionDefinition",
            "src": "1448:830:45",
            "nodes": [],
            "body": {
              "id": 37760,
              "nodeType": "Block",
              "src": "1510:768:45",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37661,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1524:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 37662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1528:5:45",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1524:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 37663,
                      "name": "genesisCircSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37658,
                      "src": "1536:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1524:29:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37669,
                  "nodeType": "IfStatement",
                  "src": "1520:83:45",
                  "trueBody": {
                    "id": 37668,
                    "nodeType": "Block",
                    "src": "1555:48:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37665,
                            "name": "NotEnoughFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36931,
                            "src": "1576:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1576:16:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37667,
                        "nodeType": "RevertStatement",
                        "src": "1569:23:45"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    37671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37671,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "1620:10:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 37760,
                      "src": "1612:18:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37670,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1612:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37676,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37672,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1633:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 37673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1637:5:45",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1633:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 37674,
                      "name": "genesisCircSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37658,
                      "src": "1645:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1633:29:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1612:50:45"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 37677,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37671,
                      "src": "1676:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 37678,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41961,
                        "src": "1689:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GatewayActorStorage_$41947_storage",
                          "typeString": "struct GatewayActorStorage storage ref"
                        }
                      },
                      "id": 37679,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1691:8:45",
                      "memberName": "minStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41925,
                      "src": "1689:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1676:23:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37685,
                  "nodeType": "IfStatement",
                  "src": "1672:82:45",
                  "trueBody": {
                    "id": 37684,
                    "nodeType": "Block",
                    "src": "1701:53:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37681,
                            "name": "NotEnoughCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36927,
                            "src": "1722:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1722:21:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37683,
                        "nodeType": "RevertStatement",
                        "src": "1715:28:45"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    37688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37688,
                      "mutability": "mutable",
                      "name": "subnetId",
                      "nameLocation": "1780:8:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 37760,
                      "src": "1764:24:45",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SubnetID_$47281_memory_ptr",
                        "typeString": "struct SubnetID"
                      },
                      "typeName": {
                        "id": 37687,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37686,
                          "name": "SubnetID",
                          "nameLocations": [
                            "1764:8:45"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47281,
                          "src": "1764:8:45"
                        },
                        "referencedDeclaration": 47281,
                        "src": "1764:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SubnetID_$47281_storage_ptr",
                          "typeString": "struct SubnetID"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37695,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37692,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1820:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1824:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1820:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 37689,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41961,
                          "src": "1791:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GatewayActorStorage_$41947_storage",
                            "typeString": "struct GatewayActorStorage storage ref"
                          }
                        },
                        "id": 37690,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1793:11:45",
                        "memberName": "networkName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41922,
                        "src": "1791:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SubnetID_$47281_storage",
                          "typeString": "struct SubnetID storage ref"
                        }
                      },
                      "id": 37691,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1805:14:45",
                      "memberName": "createSubnetId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45339,
                      "src": "1791:28:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_struct$_SubnetID_$47281_memory_ptr_$_t_address_$returns$_t_struct$_SubnetID_$47281_memory_ptr_$attached_to$_t_struct$_SubnetID_$47281_memory_ptr_$",
                        "typeString": "function (struct SubnetID memory,address) pure returns (struct SubnetID memory)"
                      }
                    },
                    "id": 37694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1791:40:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SubnetID_$47281_memory_ptr",
                      "typeString": "struct SubnetID memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1764:67:45"
                },
                {
                  "assignments": [
                    37697,
                    37700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37697,
                      "mutability": "mutable",
                      "name": "registered",
                      "nameLocation": "1848:10:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 37760,
                      "src": "1843:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 37696,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1843:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37700,
                      "mutability": "mutable",
                      "name": "subnet",
                      "nameLocation": "1875:6:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 37760,
                      "src": "1860:21:45",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                        "typeString": "struct Subnet"
                      },
                      "typeName": {
                        "id": 37699,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37698,
                          "name": "Subnet",
                          "nameLocations": [
                            "1860:6:45"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47298,
                          "src": "1860:6:45"
                        },
                        "referencedDeclaration": 47298,
                        "src": "1860:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37705,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37703,
                        "name": "subnetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37688,
                        "src": "1906:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SubnetID_$47281_memory_ptr",
                          "typeString": "struct SubnetID memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SubnetID_$47281_memory_ptr",
                          "typeString": "struct SubnetID memory"
                        }
                      ],
                      "expression": {
                        "id": 37701,
                        "name": "LibGateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41823,
                        "src": "1885:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibGateway_$41823_$",
                          "typeString": "type(library LibGateway)"
                        }
                      },
                      "id": 37702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1896:9:45",
                      "memberName": "getSubnet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41780,
                      "src": "1885:20:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_SubnetID_$47281_memory_ptr_$returns$_t_bool_$_t_struct$_Subnet_$47298_storage_ptr_$",
                        "typeString": "function (struct SubnetID memory) view returns (bool,struct Subnet storage pointer)"
                      }
                    },
                    "id": 37704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1885:30:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Subnet_$47298_storage_ptr_$",
                      "typeString": "tuple(bool,struct Subnet storage pointer)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1842:73:45"
                },
                {
                  "condition": {
                    "id": 37706,
                    "name": "registered",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37697,
                    "src": "1930:10:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37711,
                  "nodeType": "IfStatement",
                  "src": "1926:73:45",
                  "trueBody": {
                    "id": 37710,
                    "nodeType": "Block",
                    "src": "1942:57:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37707,
                            "name": "AlreadyRegisteredSubnet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36841,
                            "src": "1963:23:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1963:25:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37709,
                        "nodeType": "RevertStatement",
                        "src": "1956:32:45"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 37716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 37712,
                        "name": "subnet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37700,
                        "src": "2009:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet storage pointer"
                        }
                      },
                      "id": 37714,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2016:2:45",
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47297,
                      "src": "2009:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SubnetID_$47281_storage",
                        "typeString": "struct SubnetID storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37715,
                      "name": "subnetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37688,
                      "src": "2021:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SubnetID_$47281_memory_ptr",
                        "typeString": "struct SubnetID memory"
                      }
                    },
                    "src": "2009:20:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SubnetID_$47281_storage",
                      "typeString": "struct SubnetID storage ref"
                    }
                  },
                  "id": 37717,
                  "nodeType": "ExpressionStatement",
                  "src": "2009:20:45"
                },
                {
                  "expression": {
                    "id": 37722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 37718,
                        "name": "subnet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37700,
                        "src": "2039:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet storage pointer"
                        }
                      },
                      "id": 37720,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2046:5:45",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47283,
                      "src": "2039:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37721,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37671,
                      "src": "2054:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2039:25:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37723,
                  "nodeType": "ExpressionStatement",
                  "src": "2039:25:45"
                },
                {
                  "expression": {
                    "id": 37729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 37724,
                        "name": "subnet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37700,
                        "src": "2074:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet storage pointer"
                        }
                      },
                      "id": 37726,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2081:6:45",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47294,
                      "src": "2074:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$36835",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 37727,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36835,
                        "src": "2090:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$36835_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 37728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2097:6:45",
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36830,
                      "src": "2090:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$36835",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "2074:29:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$36835",
                      "typeString": "enum Status"
                    }
                  },
                  "id": 37730,
                  "nodeType": "ExpressionStatement",
                  "src": "2074:29:45"
                },
                {
                  "expression": {
                    "id": 37736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 37731,
                        "name": "subnet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37700,
                        "src": "2113:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet storage pointer"
                        }
                      },
                      "id": 37733,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2120:12:45",
                      "memberName": "genesisEpoch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47285,
                      "src": "2113:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 37734,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2135:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 37735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2141:6:45",
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "2135:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2113:34:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37737,
                  "nodeType": "ExpressionStatement",
                  "src": "2113:34:45"
                },
                {
                  "expression": {
                    "id": 37742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 37738,
                        "name": "subnet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37700,
                        "src": "2157:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet storage pointer"
                        }
                      },
                      "id": 37740,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2164:10:45",
                      "memberName": "circSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47287,
                      "src": "2157:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37741,
                      "name": "genesisCircSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37658,
                      "src": "2177:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2157:37:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37743,
                  "nodeType": "ExpressionStatement",
                  "src": "2157:37:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 37749,
                            "name": "subnetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37688,
                            "src": "2223:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SubnetID_$47281_memory_ptr",
                              "typeString": "struct SubnetID memory"
                            }
                          },
                          "id": 37750,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2232:6:45",
                          "memberName": "toHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45263,
                          "src": "2223:15:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_pure$_t_struct$_SubnetID_$47281_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_SubnetID_$47281_memory_ptr_$",
                            "typeString": "function (struct SubnetID memory) pure returns (bytes32)"
                          }
                        },
                        "id": 37751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2223:17:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 37744,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41961,
                          "src": "2205:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GatewayActorStorage_$41947_storage",
                            "typeString": "struct GatewayActorStorage storage ref"
                          }
                        },
                        "id": 37747,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2207:10:45",
                        "memberName": "subnetKeys",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41918,
                        "src": "2205:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 37748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2218:4:45",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2205:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 37752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:36:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37753,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:36:45"
                },
                {
                  "expression": {
                    "id": 37758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 37754,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41961,
                        "src": "2252:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GatewayActorStorage_$41947_storage",
                          "typeString": "struct GatewayActorStorage storage ref"
                        }
                      },
                      "id": 37756,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2254:12:45",
                      "memberName": "totalSubnets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41940,
                      "src": "2252:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 37757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2270:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2252:19:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 37759,
                  "nodeType": "ExpressionStatement",
                  "src": "2252:19:45"
                }
              ]
            },
            "documentation": {
              "id": 37656,
              "nodeType": "StructuredDocumentation",
              "src": "1123:320:45",
              "text": "@notice register a subnet in the gateway. It is called by a subnet when it reaches the threshold stake\n @dev The subnet can optionally pass a genesis circulating supply that would be pre-allocated in the\n subnet from genesis (without having to wait for the subnet to be spawned to propagate the funds)."
            },
            "functionSelector": "f207564e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "1457:8:45",
            "parameters": {
              "id": 37659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37658,
                  "mutability": "mutable",
                  "name": "genesisCircSupply",
                  "nameLocation": "1474:17:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 37761,
                  "src": "1466:25:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1466:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1465:27:45"
            },
            "returnParameters": {
              "id": 37660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1510:0:45"
            },
            "scope": 38097,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37821,
            "nodeType": "FunctionDefinition",
            "src": "2349:489:45",
            "nodes": [],
            "body": {
              "id": 37820,
              "nodeType": "Block",
              "src": "2386:452:45",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37765,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2400:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 37766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2404:5:45",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2400:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 37767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2413:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2400:14:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37773,
                  "nodeType": "IfStatement",
                  "src": "2396:68:45",
                  "trueBody": {
                    "id": 37772,
                    "nodeType": "Block",
                    "src": "2416:48:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37769,
                            "name": "NotEnoughFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36931,
                            "src": "2437:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2437:16:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37771,
                        "nodeType": "RevertStatement",
                        "src": "2430:23:45"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    37775,
                    37778
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37775,
                      "mutability": "mutable",
                      "name": "registered",
                      "nameLocation": "2480:10:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 37820,
                      "src": "2475:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 37774,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2475:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37778,
                      "mutability": "mutable",
                      "name": "subnet",
                      "nameLocation": "2507:6:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 37820,
                      "src": "2492:21:45",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                        "typeString": "struct Subnet"
                      },
                      "typeName": {
                        "id": 37777,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37776,
                          "name": "Subnet",
                          "nameLocations": [
                            "2492:6:45"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47298,
                          "src": "2492:6:45"
                        },
                        "referencedDeclaration": 47298,
                        "src": "2492:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37784,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37781,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2538:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2542:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2538:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 37779,
                        "name": "LibGateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41823,
                        "src": "2517:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibGateway_$41823_$",
                          "typeString": "type(library LibGateway)"
                        }
                      },
                      "id": 37780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2528:9:45",
                      "memberName": "getSubnet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41743,
                      "src": "2517:20:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_struct$_Subnet_$47298_storage_ptr_$",
                        "typeString": "function (address) view returns (bool,struct Subnet storage pointer)"
                      }
                    },
                    "id": 37783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2517:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Subnet_$47298_storage_ptr_$",
                      "typeString": "tuple(bool,struct Subnet storage pointer)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2474:75:45"
                },
                {
                  "condition": {
                    "id": 37786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2564:11:45",
                    "subExpression": {
                      "id": 37785,
                      "name": "registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37775,
                      "src": "2565:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37791,
                  "nodeType": "IfStatement",
                  "src": "2560:70:45",
                  "trueBody": {
                    "id": 37790,
                    "nodeType": "Block",
                    "src": "2577:53:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37787,
                            "name": "NotRegisteredSubnet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36943,
                            "src": "2598:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2598:21:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37789,
                        "nodeType": "RevertStatement",
                        "src": "2591:28:45"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 37797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 37792,
                        "name": "subnet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37778,
                        "src": "2640:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet storage pointer"
                        }
                      },
                      "id": 37794,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2647:5:45",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47283,
                      "src": "2640:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 37795,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2656:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 37796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2660:5:45",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2656:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2640:25:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37798,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:25:45"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Status_$36835",
                      "typeString": "enum Status"
                    },
                    "id": 37803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37799,
                        "name": "subnet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37778,
                        "src": "2680:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet storage pointer"
                        }
                      },
                      "id": 37800,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2687:6:45",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47294,
                      "src": "2680:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$36835",
                        "typeString": "enum Status"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 37801,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36835,
                        "src": "2697:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$36835_$",
                          "typeString": "type(enum Status)"
                        }
                      },
                      "id": 37802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2704:8:45",
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36831,
                      "src": "2697:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$36835",
                        "typeString": "enum Status"
                      }
                    },
                    "src": "2680:32:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37819,
                  "nodeType": "IfStatement",
                  "src": "2676:156:45",
                  "trueBody": {
                    "id": 37818,
                    "nodeType": "Block",
                    "src": "2714:118:45",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 37804,
                              "name": "subnet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37778,
                              "src": "2732:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                                "typeString": "struct Subnet storage pointer"
                              }
                            },
                            "id": 37805,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2739:5:45",
                            "memberName": "stake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47283,
                            "src": "2732:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 37806,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41961,
                              "src": "2748:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GatewayActorStorage_$41947_storage",
                                "typeString": "struct GatewayActorStorage storage ref"
                              }
                            },
                            "id": 37807,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2750:8:45",
                            "memberName": "minStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41925,
                            "src": "2748:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2732:26:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 37817,
                        "nodeType": "IfStatement",
                        "src": "2728:94:45",
                        "trueBody": {
                          "id": 37816,
                          "nodeType": "Block",
                          "src": "2760:62:45",
                          "statements": [
                            {
                              "expression": {
                                "id": 37814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 37809,
                                    "name": "subnet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37778,
                                    "src": "2778:6:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                                      "typeString": "struct Subnet storage pointer"
                                    }
                                  },
                                  "id": 37811,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2785:6:45",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 47294,
                                  "src": "2778:13:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$36835",
                                    "typeString": "enum Status"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 37812,
                                    "name": "Status",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 36835,
                                    "src": "2794:6:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Status_$36835_$",
                                      "typeString": "type(enum Status)"
                                    }
                                  },
                                  "id": 37813,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2801:6:45",
                                  "memberName": "Active",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36830,
                                  "src": "2794:13:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Status_$36835",
                                    "typeString": "enum Status"
                                  }
                                },
                                "src": "2778:29:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Status_$36835",
                                  "typeString": "enum Status"
                                }
                              },
                              "id": 37815,
                              "nodeType": "ExpressionStatement",
                              "src": "2778:29:45"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 37762,
              "nodeType": "StructuredDocumentation",
              "src": "2284:60:45",
              "text": "@notice addStake - add collateral for an existing subnet"
            },
            "functionSelector": "5a627dbc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addStake",
            "nameLocation": "2358:8:45",
            "parameters": {
              "id": 37763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2366:2:45"
            },
            "returnParameters": {
              "id": 37764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:0:45"
            },
            "scope": 38097,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37896,
            "nodeType": "FunctionDefinition",
            "src": "3032:590:45",
            "nodes": [],
            "body": {
              "id": 37895,
              "nodeType": "Block",
              "src": "3092:530:45",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 37829,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37824,
                      "src": "3106:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 37830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3116:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3106:11:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37836,
                  "nodeType": "IfStatement",
                  "src": "3102:68:45",
                  "trueBody": {
                    "id": 37835,
                    "nodeType": "Block",
                    "src": "3119:51:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37832,
                            "name": "CannotReleaseZero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36845,
                            "src": "3140:17:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3140:19:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37834,
                        "nodeType": "RevertStatement",
                        "src": "3133:26:45"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    37838,
                    37841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37838,
                      "mutability": "mutable",
                      "name": "registered",
                      "nameLocation": "3186:10:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 37895,
                      "src": "3181:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 37837,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3181:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37841,
                      "mutability": "mutable",
                      "name": "subnet",
                      "nameLocation": "3213:6:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 37895,
                      "src": "3198:21:45",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                        "typeString": "struct Subnet"
                      },
                      "typeName": {
                        "id": 37840,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37839,
                          "name": "Subnet",
                          "nameLocations": [
                            "3198:6:45"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47298,
                          "src": "3198:6:45"
                        },
                        "referencedDeclaration": 47298,
                        "src": "3198:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37847,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37844,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3244:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3248:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3244:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 37842,
                        "name": "LibGateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41823,
                        "src": "3223:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibGateway_$41823_$",
                          "typeString": "type(library LibGateway)"
                        }
                      },
                      "id": 37843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3234:9:45",
                      "memberName": "getSubnet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41743,
                      "src": "3223:20:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_struct$_Subnet_$47298_storage_ptr_$",
                        "typeString": "function (address) view returns (bool,struct Subnet storage pointer)"
                      }
                    },
                    "id": 37846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3223:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Subnet_$47298_storage_ptr_$",
                      "typeString": "tuple(bool,struct Subnet storage pointer)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3180:75:45"
                },
                {
                  "condition": {
                    "id": 37849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3270:11:45",
                    "subExpression": {
                      "id": 37848,
                      "name": "registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37838,
                      "src": "3271:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37854,
                  "nodeType": "IfStatement",
                  "src": "3266:70:45",
                  "trueBody": {
                    "id": 37853,
                    "nodeType": "Block",
                    "src": "3283:53:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37850,
                            "name": "NotRegisteredSubnet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36943,
                            "src": "3304:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3304:21:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37852,
                        "nodeType": "RevertStatement",
                        "src": "3297:28:45"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37855,
                        "name": "subnet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37841,
                        "src": "3349:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet storage pointer"
                        }
                      },
                      "id": 37856,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3356:5:45",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47283,
                      "src": "3349:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 37857,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37824,
                      "src": "3364:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3349:21:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37863,
                  "nodeType": "IfStatement",
                  "src": "3345:84:45",
                  "trueBody": {
                    "id": 37862,
                    "nodeType": "Block",
                    "src": "3372:57:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37859,
                            "name": "NotEnoughFundsToRelease",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36933,
                            "src": "3393:23:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3393:25:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37861,
                        "nodeType": "RevertStatement",
                        "src": "3386:32:45"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 37868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 37864,
                        "name": "subnet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37841,
                        "src": "3439:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet storage pointer"
                        }
                      },
                      "id": 37866,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3446:5:45",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47283,
                      "src": "3439:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 37867,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37824,
                      "src": "3455:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3439:22:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37869,
                  "nodeType": "ExpressionStatement",
                  "src": "3439:22:45"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37870,
                        "name": "subnet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37841,
                        "src": "3476:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet storage pointer"
                        }
                      },
                      "id": 37871,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3483:5:45",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47283,
                      "src": "3476:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 37872,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41961,
                        "src": "3491:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GatewayActorStorage_$41947_storage",
                          "typeString": "struct GatewayActorStorage storage ref"
                        }
                      },
                      "id": 37873,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3493:8:45",
                      "memberName": "minStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41925,
                      "src": "3491:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3476:25:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37883,
                  "nodeType": "IfStatement",
                  "src": "3472:87:45",
                  "trueBody": {
                    "id": 37882,
                    "nodeType": "Block",
                    "src": "3503:56:45",
                    "statements": [
                      {
                        "expression": {
                          "id": 37880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 37875,
                              "name": "subnet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37841,
                              "src": "3517:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                                "typeString": "struct Subnet storage pointer"
                              }
                            },
                            "id": 37877,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3524:6:45",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47294,
                            "src": "3517:13:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$36835",
                              "typeString": "enum Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 37878,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36835,
                              "src": "3533:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$36835_$",
                                "typeString": "type(enum Status)"
                              }
                            },
                            "id": 37879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3540:8:45",
                            "memberName": "Inactive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36831,
                            "src": "3533:15:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$36835",
                              "typeString": "enum Status"
                            }
                          },
                          "src": "3517:31:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$36835",
                            "typeString": "enum Status"
                          }
                        },
                        "id": 37881,
                        "nodeType": "ExpressionStatement",
                        "src": "3517:31:45"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37892,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37824,
                        "src": "3608:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "expression": {
                                  "id": 37886,
                                  "name": "subnet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37841,
                                  "src": "3576:6:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                                    "typeString": "struct Subnet storage pointer"
                                  }
                                },
                                "id": 37887,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3583:2:45",
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47297,
                                "src": "3576:9:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SubnetID_$47281_storage",
                                  "typeString": "struct SubnetID storage ref"
                                }
                              },
                              "id": 37888,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3586:8:45",
                              "memberName": "getActor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45369,
                              "src": "3576:18:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_delegatecall_pure$_t_struct$_SubnetID_$47281_memory_ptr_$returns$_t_address_$attached_to$_t_struct$_SubnetID_$47281_memory_ptr_$",
                                "typeString": "function (struct SubnetID memory) pure returns (address)"
                              }
                            },
                            "id": 37889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3576:20:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 37885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3568:8:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 37884,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3568:8:45",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3568:29:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 37891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3598:9:45",
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1420,
                      "src": "3568:39:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 37893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3568:47:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37894,
                  "nodeType": "ExpressionStatement",
                  "src": "3568:47:45"
                }
              ]
            },
            "documentation": {
              "id": 37822,
              "nodeType": "StructuredDocumentation",
              "src": "2844:183:45",
              "text": "@notice release amount for an existing subnet\n @dev it can be used to release the stake or reward of the validator\n @notice release collateral for an existing subnet"
            },
            "functionSelector": "45f54485",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37827,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37826,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3079:12:45"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42230,
                  "src": "3079:12:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "3079:12:45"
              }
            ],
            "name": "releaseStake",
            "nameLocation": "3041:12:45",
            "parameters": {
              "id": 37825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37824,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3062:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 37896,
                  "src": "3054:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3054:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3053:16:45"
            },
            "returnParameters": {
              "id": 37828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3092:0:45"
            },
            "scope": 38097,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37941,
            "nodeType": "FunctionDefinition",
            "src": "3628:378:45",
            "nodes": [],
            "body": {
              "id": 37940,
              "nodeType": "Block",
              "src": "3699:307:45",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 37903,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37898,
                      "src": "3713:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 37904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3723:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3713:11:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37910,
                  "nodeType": "IfStatement",
                  "src": "3709:68:45",
                  "trueBody": {
                    "id": 37909,
                    "nodeType": "Block",
                    "src": "3726:51:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37906,
                            "name": "CannotReleaseZero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36845,
                            "src": "3747:17:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3747:19:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37908,
                        "nodeType": "RevertStatement",
                        "src": "3740:26:45"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    37912,
                    37915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37912,
                      "mutability": "mutable",
                      "name": "registered",
                      "nameLocation": "3793:10:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 37940,
                      "src": "3788:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 37911,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3788:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37915,
                      "mutability": "mutable",
                      "name": "subnet",
                      "nameLocation": "3820:6:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 37940,
                      "src": "3805:21:45",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                        "typeString": "struct Subnet"
                      },
                      "typeName": {
                        "id": 37914,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37913,
                          "name": "Subnet",
                          "nameLocations": [
                            "3805:6:45"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47298,
                          "src": "3805:6:45"
                        },
                        "referencedDeclaration": 47298,
                        "src": "3805:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37921,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37918,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3851:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3855:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3851:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 37916,
                        "name": "LibGateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41823,
                        "src": "3830:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibGateway_$41823_$",
                          "typeString": "type(library LibGateway)"
                        }
                      },
                      "id": 37917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3841:9:45",
                      "memberName": "getSubnet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41743,
                      "src": "3830:20:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_struct$_Subnet_$47298_storage_ptr_$",
                        "typeString": "function (address) view returns (bool,struct Subnet storage pointer)"
                      }
                    },
                    "id": 37920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3830:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Subnet_$47298_storage_ptr_$",
                      "typeString": "tuple(bool,struct Subnet storage pointer)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3787:75:45"
                },
                {
                  "condition": {
                    "id": 37923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3876:11:45",
                    "subExpression": {
                      "id": 37922,
                      "name": "registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37912,
                      "src": "3877:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37928,
                  "nodeType": "IfStatement",
                  "src": "3872:70:45",
                  "trueBody": {
                    "id": 37927,
                    "nodeType": "Block",
                    "src": "3889:53:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37924,
                            "name": "NotRegisteredSubnet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36943,
                            "src": "3910:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3910:21:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37926,
                        "nodeType": "RevertStatement",
                        "src": "3903:28:45"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37937,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37898,
                        "src": "3992:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "expression": {
                                  "id": 37931,
                                  "name": "subnet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37915,
                                  "src": "3960:6:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                                    "typeString": "struct Subnet storage pointer"
                                  }
                                },
                                "id": 37932,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3967:2:45",
                                "memberName": "id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47297,
                                "src": "3960:9:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SubnetID_$47281_storage",
                                  "typeString": "struct SubnetID storage ref"
                                }
                              },
                              "id": 37933,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3970:8:45",
                              "memberName": "getActor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45369,
                              "src": "3960:18:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_delegatecall_pure$_t_struct$_SubnetID_$47281_memory_ptr_$returns$_t_address_$attached_to$_t_struct$_SubnetID_$47281_memory_ptr_$",
                                "typeString": "function (struct SubnetID memory) pure returns (address)"
                              }
                            },
                            "id": 37934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3960:20:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 37930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3952:8:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 37929,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3952:8:45",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3952:29:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 37936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3982:9:45",
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1420,
                      "src": "3952:39:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 37938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3952:47:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37939,
                  "nodeType": "ExpressionStatement",
                  "src": "3952:47:45"
                }
              ]
            },
            "functionSelector": "d8e25572",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37901,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37900,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3686:12:45"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42230,
                  "src": "3686:12:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "3686:12:45"
              }
            ],
            "name": "releaseRewardForRelayer",
            "nameLocation": "3637:23:45",
            "parameters": {
              "id": 37899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37898,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3669:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 37941,
                  "src": "3661:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3661:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3660:16:45"
            },
            "returnParameters": {
              "id": 37902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3699:0:45"
            },
            "scope": 38097,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38002,
            "nodeType": "FunctionDefinition",
            "src": "4080:513:45",
            "nodes": [],
            "body": {
              "id": 38001,
              "nodeType": "Block",
              "src": "4105:488:45",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37946,
                    37949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37946,
                      "mutability": "mutable",
                      "name": "registered",
                      "nameLocation": "4121:10:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 38001,
                      "src": "4116:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 37945,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4116:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37949,
                      "mutability": "mutable",
                      "name": "subnet",
                      "nameLocation": "4148:6:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 38001,
                      "src": "4133:21:45",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                        "typeString": "struct Subnet"
                      },
                      "typeName": {
                        "id": 37948,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37947,
                          "name": "Subnet",
                          "nameLocations": [
                            "4133:6:45"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47298,
                          "src": "4133:6:45"
                        },
                        "referencedDeclaration": 47298,
                        "src": "4133:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37955,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37952,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4179:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4183:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4179:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 37950,
                        "name": "LibGateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41823,
                        "src": "4158:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibGateway_$41823_$",
                          "typeString": "type(library LibGateway)"
                        }
                      },
                      "id": 37951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4169:9:45",
                      "memberName": "getSubnet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41743,
                      "src": "4158:20:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_struct$_Subnet_$47298_storage_ptr_$",
                        "typeString": "function (address) view returns (bool,struct Subnet storage pointer)"
                      }
                    },
                    "id": 37954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4158:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Subnet_$47298_storage_ptr_$",
                      "typeString": "tuple(bool,struct Subnet storage pointer)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4115:75:45"
                },
                {
                  "condition": {
                    "id": 37957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4205:11:45",
                    "subExpression": {
                      "id": 37956,
                      "name": "registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37946,
                      "src": "4206:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37962,
                  "nodeType": "IfStatement",
                  "src": "4201:70:45",
                  "trueBody": {
                    "id": 37961,
                    "nodeType": "Block",
                    "src": "4218:53:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37958,
                            "name": "NotRegisteredSubnet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36943,
                            "src": "4239:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4239:21:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37960,
                        "nodeType": "RevertStatement",
                        "src": "4232:28:45"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37963,
                        "name": "subnet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37949,
                        "src": "4342:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                          "typeString": "struct Subnet storage pointer"
                        }
                      },
                      "id": 37964,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4349:10:45",
                      "memberName": "circSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47287,
                      "src": "4342:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 37965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4363:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4342:22:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37971,
                  "nodeType": "IfStatement",
                  "src": "4338:86:45",
                  "trueBody": {
                    "id": 37970,
                    "nodeType": "Block",
                    "src": "4366:58:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37967,
                            "name": "NotEmptySubnetCircSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36921,
                            "src": "4387:24:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4387:26:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37969,
                        "nodeType": "RevertStatement",
                        "src": "4380:33:45"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    37973
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37973,
                      "mutability": "mutable",
                      "name": "stake",
                      "nameLocation": "4442:5:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 38001,
                      "src": "4434:13:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37972,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4434:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37976,
                  "initialValue": {
                    "expression": {
                      "id": 37974,
                      "name": "subnet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37949,
                      "src": "4450:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                        "typeString": "struct Subnet storage pointer"
                      }
                    },
                    "id": 37975,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4457:5:45",
                    "memberName": "stake",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 47283,
                    "src": "4450:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4434:28:45"
                },
                {
                  "expression": {
                    "id": 37981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 37977,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41961,
                        "src": "4473:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GatewayActorStorage_$41947_storage",
                          "typeString": "struct GatewayActorStorage storage ref"
                        }
                      },
                      "id": 37979,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4475:12:45",
                      "memberName": "totalSubnets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41940,
                      "src": "4473:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 37980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4491:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4473:19:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 37982,
                  "nodeType": "ExpressionStatement",
                  "src": "4473:19:45"
                },
                {
                  "expression": {
                    "id": 37990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4503:36:45",
                    "subExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 37983,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41961,
                          "src": "4510:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GatewayActorStorage_$41947_storage",
                            "typeString": "struct GatewayActorStorage storage ref"
                          }
                        },
                        "id": 37984,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4512:7:45",
                        "memberName": "subnets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41852,
                        "src": "4510:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Subnet_$47298_storage_$",
                          "typeString": "mapping(bytes32 => struct Subnet storage ref)"
                        }
                      },
                      "id": 37989,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 37985,
                              "name": "subnet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37949,
                              "src": "4520:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subnet_$47298_storage_ptr",
                                "typeString": "struct Subnet storage pointer"
                              }
                            },
                            "id": 37986,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4527:2:45",
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47297,
                            "src": "4520:9:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SubnetID_$47281_storage",
                              "typeString": "struct SubnetID storage ref"
                            }
                          },
                          "id": 37987,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4530:6:45",
                          "memberName": "toHash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45263,
                          "src": "4520:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_pure$_t_struct$_SubnetID_$47281_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_SubnetID_$47281_memory_ptr_$",
                            "typeString": "function (struct SubnetID memory) pure returns (bytes32)"
                          }
                        },
                        "id": 37988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4520:18:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4510:29:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Subnet_$47298_storage",
                        "typeString": "struct Subnet storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37991,
                  "nodeType": "ExpressionStatement",
                  "src": "4503:36:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37998,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37973,
                        "src": "4580:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 37994,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4558:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 37995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4562:6:45",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4558:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 37993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4550:8:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 37992,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4550:8:45",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4550:19:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 37997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4570:9:45",
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1420,
                      "src": "4550:29:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 37999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4550:36:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38000,
                  "nodeType": "ExpressionStatement",
                  "src": "4550:36:45"
                }
              ]
            },
            "documentation": {
              "id": 37942,
              "nodeType": "StructuredDocumentation",
              "src": "4012:63:45",
              "text": "@notice kill an existing subnet. It's balance must be empty"
            },
            "functionSelector": "41c0e1b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nameLocation": "4089:4:45",
            "parameters": {
              "id": 37943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4093:2:45"
            },
            "returnParameters": {
              "id": 37944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4105:0:45"
            },
            "scope": 38097,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38042,
            "nodeType": "FunctionDefinition",
            "src": "5024:575:45",
            "nodes": [],
            "body": {
              "id": 38041,
              "nodeType": "Block",
              "src": "5107:492:45",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 38012,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5121:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 38013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5125:5:45",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "5121:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 38014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5134:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5121:14:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38020,
                  "nodeType": "IfStatement",
                  "src": "5117:135:45",
                  "trueBody": {
                    "id": 38019,
                    "nodeType": "Block",
                    "src": "5137:115:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38016,
                            "name": "InvalidCrossMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36887,
                            "src": "5219:20:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5219:22:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38018,
                        "nodeType": "RevertStatement",
                        "src": "5212:29:45"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    38023
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38023,
                      "mutability": "mutable",
                      "name": "crossMsg",
                      "nameLocation": "5277:8:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 38041,
                      "src": "5261:24:45",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CrossMsg_$47227_memory_ptr",
                        "typeString": "struct CrossMsg"
                      },
                      "typeName": {
                        "id": 38022,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 38021,
                          "name": "CrossMsg",
                          "nameLocations": [
                            "5261:8:45"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47227,
                          "src": "5261:8:45"
                        },
                        "referencedDeclaration": 47227,
                        "src": "5261:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CrossMsg_$47227_storage_ptr",
                          "typeString": "struct CrossMsg"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38034,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38026,
                        "name": "subnetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38006,
                        "src": "5339:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SubnetID_$47281_calldata_ptr",
                          "typeString": "struct SubnetID calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 38027,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5369:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5373:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5369:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38029,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38009,
                        "src": "5397:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FvmAddress_$47251_calldata_ptr",
                          "typeString": "struct FvmAddress calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 38030,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5420:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5424:5:45",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "5420:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 38032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5448:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SubnetID_$47281_calldata_ptr",
                          "typeString": "struct SubnetID calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_FvmAddress_$47251_calldata_ptr",
                          "typeString": "struct FvmAddress calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 38024,
                        "name": "CrossMsgHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40099,
                        "src": "5288:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CrossMsgHelper_$40099_$",
                          "typeString": "type(library CrossMsgHelper)"
                        }
                      },
                      "id": 38025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5303:13:45",
                      "memberName": "createFundMsg",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39887,
                      "src": "5288:28:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_struct$_SubnetID_$47281_memory_ptr_$_t_address_$_t_struct$_FvmAddress_$47251_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_CrossMsg_$47227_memory_ptr_$",
                        "typeString": "function (struct SubnetID memory,address,struct FvmAddress memory,uint256,uint256) pure returns (struct CrossMsg memory)"
                      }
                    },
                    "id": 38033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "5331:6:45",
                      "5361:6:45",
                      "5393:2:45",
                      "5413:5:45",
                      "5443:3:45"
                    ],
                    "names": [
                      "subnet",
                      "signer",
                      "to",
                      "value",
                      "fee"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "5288:220:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CrossMsg_$47227_memory_ptr",
                      "typeString": "struct CrossMsg memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5261:247:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38038,
                        "name": "crossMsg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38023,
                        "src": "5583:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CrossMsg_$47227_memory_ptr",
                          "typeString": "struct CrossMsg memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CrossMsg_$47227_memory_ptr",
                          "typeString": "struct CrossMsg memory"
                        }
                      ],
                      "expression": {
                        "id": 38035,
                        "name": "LibGateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41823,
                        "src": "5555:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibGateway_$41823_$",
                          "typeString": "type(library LibGateway)"
                        }
                      },
                      "id": 38037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5566:16:45",
                      "memberName": "commitTopDownMsg",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41652,
                      "src": "5555:27:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CrossMsg_$47227_memory_ptr_$returns$__$",
                        "typeString": "function (struct CrossMsg memory)"
                      }
                    },
                    "id": 38039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5555:37:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38040,
                  "nodeType": "ExpressionStatement",
                  "src": "5555:37:45"
                }
              ]
            },
            "documentation": {
              "id": 38003,
              "nodeType": "StructuredDocumentation",
              "src": "4599:420:45",
              "text": "@notice fund() credits the received value to the specified address in the specified child subnet.\n There may be an associated fee that gets distributed to validators in the subnet. Currently this fee is zero,\n i.e. funding a subnet is free.\n @param subnetId: the destination subnet for the funds.\n @param to: the address to which to credit funds in the destination subnet."
            },
            "functionSelector": "18f44b70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nameLocation": "5033:4:45",
            "parameters": {
              "id": 38010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38006,
                  "mutability": "mutable",
                  "name": "subnetId",
                  "nameLocation": "5056:8:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 38042,
                  "src": "5038:26:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SubnetID_$47281_calldata_ptr",
                    "typeString": "struct SubnetID"
                  },
                  "typeName": {
                    "id": 38005,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38004,
                      "name": "SubnetID",
                      "nameLocations": [
                        "5038:8:45"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47281,
                      "src": "5038:8:45"
                    },
                    "referencedDeclaration": 47281,
                    "src": "5038:8:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SubnetID_$47281_storage_ptr",
                      "typeString": "struct SubnetID"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38009,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5086:2:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 38042,
                  "src": "5066:22:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FvmAddress_$47251_calldata_ptr",
                    "typeString": "struct FvmAddress"
                  },
                  "typeName": {
                    "id": 38008,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38007,
                      "name": "FvmAddress",
                      "nameLocations": [
                        "5066:10:45"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47251,
                      "src": "5066:10:45"
                    },
                    "referencedDeclaration": 47251,
                    "src": "5066:10:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FvmAddress_$47251_storage_ptr",
                      "typeString": "struct FvmAddress"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5037:52:45"
            },
            "returnParameters": {
              "id": 38011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5107:0:45"
            },
            "scope": 38097,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38096,
            "nodeType": "FunctionDefinition",
            "src": "5933:616:45",
            "nodes": [],
            "body": {
              "id": 38095,
              "nodeType": "Block",
              "src": "6018:531:45",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 38054,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6032:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 38055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6036:5:45",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "6032:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 38056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6045:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6032:14:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38062,
                  "nodeType": "IfStatement",
                  "src": "6028:138:45",
                  "trueBody": {
                    "id": 38061,
                    "nodeType": "Block",
                    "src": "6048:118:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38058,
                            "name": "InvalidCrossMsgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36887,
                            "src": "6133:20:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 38059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6133:22:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38060,
                        "nodeType": "RevertStatement",
                        "src": "6126:29:45"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    38065
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38065,
                      "mutability": "mutable",
                      "name": "crossMsg",
                      "nameLocation": "6191:8:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 38095,
                      "src": "6175:24:45",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CrossMsg_$47227_memory_ptr",
                        "typeString": "struct CrossMsg"
                      },
                      "typeName": {
                        "id": 38064,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 38063,
                          "name": "CrossMsg",
                          "nameLocations": [
                            "6175:8:45"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47227,
                          "src": "6175:8:45"
                        },
                        "referencedDeclaration": 47227,
                        "src": "6175:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CrossMsg_$47227_storage_ptr",
                          "typeString": "struct CrossMsg"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38079,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 38068,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41961,
                          "src": "6256:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GatewayActorStorage_$41947_storage",
                            "typeString": "struct GatewayActorStorage storage ref"
                          }
                        },
                        "id": 38069,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6258:11:45",
                        "memberName": "networkName",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41922,
                        "src": "6256:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SubnetID_$47281_storage",
                          "typeString": "struct SubnetID storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 38070,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6291:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6295:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6291:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38072,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38046,
                        "src": "6319:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FvmAddress_$47251_calldata_ptr",
                          "typeString": "struct FvmAddress calldata"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 38073,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6342:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 38074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6346:5:45",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6342:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 38075,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38048,
                          "src": "6354:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6342:15:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38077,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38048,
                        "src": "6376:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SubnetID_$47281_storage",
                          "typeString": "struct SubnetID storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_FvmAddress_$47251_calldata_ptr",
                          "typeString": "struct FvmAddress calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38066,
                        "name": "CrossMsgHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40099,
                        "src": "6202:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CrossMsgHelper_$40099_$",
                          "typeString": "type(library CrossMsgHelper)"
                        }
                      },
                      "id": 38067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6217:16:45",
                      "memberName": "createReleaseMsg",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39844,
                      "src": "6202:31:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_struct$_SubnetID_$47281_memory_ptr_$_t_address_$_t_struct$_FvmAddress_$47251_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_CrossMsg_$47227_memory_ptr_$",
                        "typeString": "function (struct SubnetID memory,address,struct FvmAddress memory,uint256,uint256) pure returns (struct CrossMsg memory)"
                      }
                    },
                    "id": 38078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "6248:6:45",
                      "6283:6:45",
                      "6315:2:45",
                      "6335:5:45",
                      "6371:3:45"
                    ],
                    "names": [
                      "subnet",
                      "signer",
                      "to",
                      "value",
                      "fee"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6202:188:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CrossMsg_$47227_memory_ptr",
                      "typeString": "struct CrossMsg memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6175:215:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38083,
                        "name": "crossMsg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38065,
                        "src": "6430:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CrossMsg_$47227_memory_ptr",
                          "typeString": "struct CrossMsg memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CrossMsg_$47227_memory_ptr",
                          "typeString": "struct CrossMsg memory"
                        }
                      ],
                      "expression": {
                        "id": 38080,
                        "name": "LibGateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41823,
                        "src": "6401:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibGateway_$41823_$",
                          "typeString": "type(library LibGateway)"
                        }
                      },
                      "id": 38082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6412:17:45",
                      "memberName": "commitBottomUpMsg",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41700,
                      "src": "6401:28:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CrossMsg_$47227_memory_ptr_$returns$__$",
                        "typeString": "function (struct CrossMsg memory)"
                      }
                    },
                    "id": 38084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6401:38:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38085,
                  "nodeType": "ExpressionStatement",
                  "src": "6401:38:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 38091,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6532:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6536:5:45",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6532:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 38088,
                            "name": "BURNT_FUNDS_ACTOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36323,
                            "src": "6503:17:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 38087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6495:8:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 38086,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6495:8:45",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6495:26:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 38090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6522:9:45",
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1420,
                      "src": "6495:36:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 38093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6495:47:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38094,
                  "nodeType": "ExpressionStatement",
                  "src": "6495:47:45"
                }
              ]
            },
            "documentation": {
              "id": 38043,
              "nodeType": "StructuredDocumentation",
              "src": "5605:323:45",
              "text": "@notice release() burns the received value and releases them from this subnet onto the parent by committing a bottom-up message.\n @param to: the address to which to credit funds in the parent subnet.\n @param fee: the fee that validators on the parent subnet get to keep for including this message."
            },
            "functionSelector": "9ba53580",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 38051,
                    "name": "fee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38048,
                    "src": "6013:3:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 38052,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38050,
                  "name": "validFee",
                  "nameLocations": [
                    "6004:8:45"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42025,
                  "src": "6004:8:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "6004:13:45"
              }
            ],
            "name": "release",
            "nameLocation": "5942:7:45",
            "parameters": {
              "id": 38049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38046,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5970:2:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 38096,
                  "src": "5950:22:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FvmAddress_$47251_calldata_ptr",
                    "typeString": "struct FvmAddress"
                  },
                  "typeName": {
                    "id": 38045,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 38044,
                      "name": "FvmAddress",
                      "nameLocations": [
                        "5950:10:45"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47251,
                      "src": "5950:10:45"
                    },
                    "referencedDeclaration": 47251,
                    "src": "5950:10:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FvmAddress_$47251_storage_ptr",
                      "typeString": "struct FvmAddress"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38048,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "5982:3:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 38096,
                  "src": "5974:11:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5974:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5949:37:45"
            },
            "returnParameters": {
              "id": 38053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6018:0:45"
            },
            "scope": 38097,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37645,
              "name": "GatewayActorModifiers",
              "nameLocations": [
                "996:21:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42026,
              "src": "996:21:45"
            },
            "id": 37646,
            "nodeType": "InheritanceSpecifier",
            "src": "996:21:45"
          },
          {
            "baseName": {
              "id": 37647,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "1019:15:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42246,
              "src": "1019:15:45"
            },
            "id": 37648,
            "nodeType": "InheritanceSpecifier",
            "src": "1019:15:45"
          }
        ],
        "canonicalName": "GatewayManagerFacet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38097,
          42246,
          42026
        ],
        "name": "GatewayManagerFacet",
        "nameLocation": "973:19:45",
        "scope": 38098,
        "usedErrors": [
          1134,
          1138,
          36841,
          36845,
          36869,
          36887,
          36921,
          36927,
          36929,
          36931,
          36933,
          36943,
          42194
        ]
      }
    ],
    "license": "MIT OR Apache-2.0"
  },
  "id": 45
}