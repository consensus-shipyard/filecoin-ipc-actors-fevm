/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Gateway, GatewayInterface } from "../Gateway";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "route",
                type: "address[]",
              },
            ],
            internalType: "struct SubnetID",
            name: "networkName",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "bottomUpCheckPeriod",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "topDownCheckPeriod",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "msgFee",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "majorityPercentage",
            type: "uint8",
          },
        ],
        internalType: "struct Gateway.ConstructorParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyCommitedCheckpoint",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyRegisteredSubnet",
    type: "error",
  },
  {
    inputs: [],
    name: "CallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "CannnotReleaseZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSendCrossMsgToItself",
    type: "error",
  },
  {
    inputs: [],
    name: "EpochAlreadyExecuted",
    type: "error",
  },
  {
    inputs: [],
    name: "EpochNotVotable",
    type: "error",
  },
  {
    inputs: [],
    name: "InconsistentPrevCheckpoint",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCheckpointEpoch",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCheckpointSource",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCrossMsgDestinationAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCrossMsgDestinationSubnet",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCrossMsgNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCrossMsgsSortOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMajorityPercentage",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPostboxOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "MessagesNotSorted",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEmptySubnetCircSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughFee",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughFundsForMembership",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughFundsToRelease",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughSubnetCircSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotRegisteredSubnet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSignableAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSystemActor",
    type: "error",
  },
  {
    inputs: [],
    name: "NotValidator",
    type: "error",
  },
  {
    inputs: [],
    name: "PostboxNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "SubnetNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "ValidatorAlreadyVoted",
    type: "error",
  },
  {
    inputs: [],
    name: "ValidatorWeightIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ValidatorsAndWeightsLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "appliedTopDownNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bottomUpCheckPeriod",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "bottomUpCheckpoints",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "route",
            type: "address[]",
          },
        ],
        internalType: "struct SubnetID",
        name: "source",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "epoch",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "prevHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bottomUpNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "route",
                type: "address[]",
              },
            ],
            internalType: "struct SubnetID",
            name: "source",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "address[]",
                            name: "route",
                            type: "address[]",
                          },
                        ],
                        internalType: "struct SubnetID",
                        name: "subnetId",
                        type: "tuple",
                      },
                      {
                        internalType: "address",
                        name: "rawAddress",
                        type: "address",
                      },
                    ],
                    internalType: "struct IPCAddress",
                    name: "from",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "address[]",
                            name: "route",
                            type: "address[]",
                          },
                        ],
                        internalType: "struct SubnetID",
                        name: "subnetId",
                        type: "tuple",
                      },
                      {
                        internalType: "address",
                        name: "rawAddress",
                        type: "address",
                      },
                    ],
                    internalType: "struct IPCAddress",
                    name: "to",
                    type: "tuple",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "uint64",
                    name: "nonce",
                    type: "uint64",
                  },
                  {
                    internalType: "bytes4",
                    name: "method",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "params",
                    type: "bytes",
                  },
                ],
                internalType: "struct StorableMsg",
                name: "message",
                type: "tuple",
              },
              {
                internalType: "bool",
                name: "wrapped",
                type: "bool",
              },
            ],
            internalType: "struct CrossMsg[]",
            name: "crossMsgs",
            type: "tuple[]",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "route",
                    type: "address[]",
                  },
                ],
                internalType: "struct SubnetID",
                name: "source",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "checks",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChildCheck[]",
            name: "children",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "prevHash",
            type: "bytes32",
          },
        ],
        internalType: "struct BottomUpCheckpoint",
        name: "commit",
        type: "tuple",
      },
    ],
    name: "commitChildCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "crossMsgFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executableQueue",
    outputs: [
      {
        internalType: "uint64",
        name: "period",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "first",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "last",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "route",
            type: "address[]",
          },
        ],
        internalType: "struct SubnetID",
        name: "subnetId",
        type: "tuple",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "genesisEpoch",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNetworkName",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "route",
            type: "address[]",
          },
        ],
        internalType: "struct SubnetID",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "route",
            type: "address[]",
          },
        ],
        internalType: "struct SubnetID",
        name: "subnetId",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getSubnetTopDownMsg",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address[]",
                        name: "route",
                        type: "address[]",
                      },
                    ],
                    internalType: "struct SubnetID",
                    name: "subnetId",
                    type: "tuple",
                  },
                  {
                    internalType: "address",
                    name: "rawAddress",
                    type: "address",
                  },
                ],
                internalType: "struct IPCAddress",
                name: "from",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address[]",
                        name: "route",
                        type: "address[]",
                      },
                    ],
                    internalType: "struct SubnetID",
                    name: "subnetId",
                    type: "tuple",
                  },
                  {
                    internalType: "address",
                    name: "rawAddress",
                    type: "address",
                  },
                ],
                internalType: "struct IPCAddress",
                name: "to",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
              },
              {
                internalType: "bytes4",
                name: "method",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "params",
                type: "bytes",
              },
            ],
            internalType: "struct StorableMsg",
            name: "message",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "wrapped",
            type: "bool",
          },
        ],
        internalType: "struct CrossMsg",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "route",
            type: "address[]",
          },
        ],
        internalType: "struct SubnetID",
        name: "subnetId",
        type: "tuple",
      },
    ],
    name: "getSubnetTopDownMsgsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_genesisEpoch",
        type: "uint64",
      },
    ],
    name: "initGenesisEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastVotingExecutedEpoch",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "majorityPercentage",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "postbox",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "route",
                    type: "address[]",
                  },
                ],
                internalType: "struct SubnetID",
                name: "subnetId",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "rawAddress",
                type: "address",
              },
            ],
            internalType: "struct IPCAddress",
            name: "from",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "route",
                    type: "address[]",
                  },
                ],
                internalType: "struct SubnetID",
                name: "subnetId",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "rawAddress",
                type: "address",
              },
            ],
            internalType: "struct IPCAddress",
            name: "to",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "bytes4",
            name: "method",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
        ],
        internalType: "struct StorableMsg",
        name: "message",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "wrapped",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "postboxHasOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "msgCid",
        type: "bytes32",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "releaseStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "route",
            type: "address[]",
          },
        ],
        internalType: "struct SubnetID",
        name: "destination",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address[]",
                        name: "route",
                        type: "address[]",
                      },
                    ],
                    internalType: "struct SubnetID",
                    name: "subnetId",
                    type: "tuple",
                  },
                  {
                    internalType: "address",
                    name: "rawAddress",
                    type: "address",
                  },
                ],
                internalType: "struct IPCAddress",
                name: "from",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address[]",
                        name: "route",
                        type: "address[]",
                      },
                    ],
                    internalType: "struct SubnetID",
                    name: "subnetId",
                    type: "tuple",
                  },
                  {
                    internalType: "address",
                    name: "rawAddress",
                    type: "address",
                  },
                ],
                internalType: "struct IPCAddress",
                name: "to",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
              },
              {
                internalType: "bytes4",
                name: "method",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "params",
                type: "bytes",
              },
            ],
            internalType: "struct StorableMsg",
            name: "message",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "wrapped",
            type: "bool",
          },
        ],
        internalType: "struct CrossMsg",
        name: "crossMsg",
        type: "tuple",
      },
    ],
    name: "sendCross",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "validators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "weights",
        type: "uint256[]",
      },
    ],
    name: "setMembership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "submissionPeriod",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "address[]",
                            name: "route",
                            type: "address[]",
                          },
                        ],
                        internalType: "struct SubnetID",
                        name: "subnetId",
                        type: "tuple",
                      },
                      {
                        internalType: "address",
                        name: "rawAddress",
                        type: "address",
                      },
                    ],
                    internalType: "struct IPCAddress",
                    name: "from",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "address[]",
                            name: "route",
                            type: "address[]",
                          },
                        ],
                        internalType: "struct SubnetID",
                        name: "subnetId",
                        type: "tuple",
                      },
                      {
                        internalType: "address",
                        name: "rawAddress",
                        type: "address",
                      },
                    ],
                    internalType: "struct IPCAddress",
                    name: "to",
                    type: "tuple",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "uint64",
                    name: "nonce",
                    type: "uint64",
                  },
                  {
                    internalType: "bytes4",
                    name: "method",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "params",
                    type: "bytes",
                  },
                ],
                internalType: "struct StorableMsg",
                name: "message",
                type: "tuple",
              },
              {
                internalType: "bool",
                name: "wrapped",
                type: "bool",
              },
            ],
            internalType: "struct CrossMsg[]",
            name: "topDownMsgs",
            type: "tuple[]",
          },
        ],
        internalType: "struct TopDownCheckpoint",
        name: "checkpoint",
        type: "tuple",
      },
    ],
    name: "submitTopDownCheckpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "subnets",
    outputs: [
      {
        internalType: "enum Status",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "topDownNonce",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "appliedBottomUpNonce",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "genesisEpoch",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "circSupply",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "route",
            type: "address[]",
          },
        ],
        internalType: "struct SubnetID",
        name: "id",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "route",
                type: "address[]",
              },
            ],
            internalType: "struct SubnetID",
            name: "source",
            type: "tuple",
          },
          {
            internalType: "uint64",
            name: "epoch",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "address[]",
                            name: "route",
                            type: "address[]",
                          },
                        ],
                        internalType: "struct SubnetID",
                        name: "subnetId",
                        type: "tuple",
                      },
                      {
                        internalType: "address",
                        name: "rawAddress",
                        type: "address",
                      },
                    ],
                    internalType: "struct IPCAddress",
                    name: "from",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "address[]",
                            name: "route",
                            type: "address[]",
                          },
                        ],
                        internalType: "struct SubnetID",
                        name: "subnetId",
                        type: "tuple",
                      },
                      {
                        internalType: "address",
                        name: "rawAddress",
                        type: "address",
                      },
                    ],
                    internalType: "struct IPCAddress",
                    name: "to",
                    type: "tuple",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "uint64",
                    name: "nonce",
                    type: "uint64",
                  },
                  {
                    internalType: "bytes4",
                    name: "method",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "params",
                    type: "bytes",
                  },
                ],
                internalType: "struct StorableMsg",
                name: "message",
                type: "tuple",
              },
              {
                internalType: "bool",
                name: "wrapped",
                type: "bool",
              },
            ],
            internalType: "struct CrossMsg[]",
            name: "crossMsgs",
            type: "tuple[]",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "route",
                    type: "address[]",
                  },
                ],
                internalType: "struct SubnetID",
                name: "source",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "checks",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChildCheck[]",
            name: "children",
            type: "tuple[]",
          },
          {
            internalType: "bytes32",
            name: "prevHash",
            type: "bytes32",
          },
        ],
        internalType: "struct BottomUpCheckpoint",
        name: "prevCheckpoint",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "topDownCheckPeriod",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSubnets",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "validatorSet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "msgCid",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
    ],
    name: "whitelistPropagator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610140604090808252346200047d57620063a68038038091620000238285620004d5565b833981019160209182818503126200047d5780516001600160401b03918282116200047d57019360a0858203126200047d5782519060a082019082821084831117620004a35781855286518481116200047d57870186818303126200047d576200008d83620004b9565b8051908582116200047d57019080601f830112156200047d57815191858311620004a3578260051b90875193620000c78a840186620004d5565b845288808501928201019283116200047d578801905b828210620004825750505081528152620000f9848601620004f9565b938082019485526200010d848701620004f9565b84830193818552608060608901519860608601998a52015160ff8116928382036200047d57829160808701521690600195600093878555606481116200046c5760805281600a93848110600014620004665750835b8060a0521660018060401b0319600254161760025560ff199586601054166010555151988951838111620004525768010000000000000000811162000452578660049b8c838154915580841062000425575b509085939291018c88528888208b895b84811062000406575050505050670de0b6b3a764000060c0525116838110600014620004005750825b60e052511681811015620003f75750965b6101009788525195610120968752828651916200021b83620004b9565b87518154808252828652838620848301959291875b8b828210620003d857505050506200024c8185960382620004d5565b815288519384926310c5511f60e31b84528301526044820190519083602484015281518091528360648401920190865b8a828210620003b757505050508190038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4928315620003ad57829362000364575b50505062000354575b50505190615e9792836200050f843960805183818161172b0152615d2c015260a0518381816110b8015281816120ad0152615cfc015260c0518381816119b901528181611d420152611f32015260e051838181613404015261579b0152518261145c01525181818161133f0152818161153e015281816117e101528181611dee01528181611ebd01528181614ed9015261533d0152f35b60105416176010553880620002bd565b9080929350813d8311620003a5575b6200037f8183620004d5565b81010312620003a157519081151582036200039e5750388080620002b4565b80fd5b5080fd5b503d62000373565b86513d84823e3d90fd5b83516001600160a01b0316855289968896509485019490930192016200027c565b83546001600160a01b0316895296909701968996928301920162000230565b905096620001fe565b620001ed565b83516001600160a01b031683820155889650928b01928d9101620001c4565b8d89528b84848b2092830192015b82811062000443575050620001b4565b8a81558b94508d910162000433565b634e487b7160e01b86526041600452602486fd5b62000162565b88516375c3b42760e01b8152600490fd5b600080fd5b81516001600160a01b03811681036200047d578152908801908801620000dd565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b03821117620004a357604052565b601f909101601f19168101906001600160401b03821190821017620004a357604052565b51906001600160401b03821682036200047d5756fe6080604052600436101561001257600080fd5b6000803560e01c806302e30f9a1461342857806306c46853146133e45780630eb4e56d1461240957806310d500e1146123cb57806311c5080e146121da57806313f35388146120f4578063158ef93e146120d1578063185fde7e1461208d5780631aa3a00814611f24578063223d905614611ee05780632472942514611ea557806325bf0db614611ddc5780632cc14ea214611d65578063375b3c0a14611d2a5780633c8fe6bf14611ce157806341b6a2e814611cba57806341c0e1b514611ad657806345f54485146119575780634935bc9b1461174f578063599c7bd1146117115780635a627dbc146116b9578063689e5cbd146114c95780637438c268146114805780637d9740f41461143c57806386d1a69f146112ed5780638789f83b146112c35780638cfd78e71461126f57806394074b031461123057806396c82e5714611212578063a2b67158146111eb578063ad81e244146111c4578063b70e6be61461119a578063e17a684f1461117c578063f05a1be014610481578063f75bc5571461026b5763fb59fa61146101a957600080fd5b34610268576040366003190112610268576004356001600160401b03811161026457610246610239610260936101e661024c943690600401613cdd565b9060206040516101f581613667565b60405161020181613636565b610209613ea8565b8152610213613ea8565b83820152836040820152836060820152836080820152606060a082015281520152615b24565b6024359150600b01613ed0565b50613937565b604051918291602083526020830190613bfc565b0390f35b5080fd5b80fd5b5034610268576040366003190112610268576001600160401b0360043581811161047d5761029d903690600401613c77565b9060243590811161047d573660238201121561047d578060040135906102c2826137ab565b906102d060405192836136b0565b82825260209260248484019160051b83010191368311610479576024859101915b8383106104695750505050604051635d3f8a6960e01b8152336004820152828160248173__$e800e3908cdbb6b1b5bd452383a17b18f7$__5af490811561045e578591610425575b501561041357825181510361040157600d80549160001983146103ed57600193848094018355869587955b610371575b8787600b5580f35b8096949596518710156103e5576001600160a01b0361039088836149de565b51169461039d88856149de565b519586156103d357879687926103cb9288548d52600c875260408d20906000528652816040600020556140bb565b970195610364565b60405163389b457d60e01b8152600490fd5b849650610369565b634e487b7160e01b86526011600452602486fd5b60405163465f0a7d60e01b8152600490fd5b60405163f0d97f3b60e01b8152600490fd5b90508281813d8311610457575b61043c81836136b0565b810103126104535761044d90613f02565b38610339565b8480fd5b503d610432565b6040513d87823e3d90fd5b82358152918101918591016102f1565b8680fd5b8280fd5b503461026857600319602036820112610264576001600160401b0360043511610264576040906004353603011261026857604051630972932760e21b815233600482015260208160248173__$e800e3908cdbb6b1b5bd452383a17b18f7$__5af4908115610d9a578291611142575b501561113057610504600435600401614322565b6001600160401b036001549116906001600160401b03811682111561111e5760401c6001600160401b0316808211918261109d575b505061108b57600d548152600c60205260408120338252602052604081205460ff60105416156110795780156110675761057d6024600435016004356004016145ba565b604051918291638984147560e01b835280602484016020600486015252604483019060448160051b85010192809288915b838310610ee657898988602081808b038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af4908115610edb578391610ea1575b5015610e8f576001600160401b03610600600435600401614322565b1682526011602052604082206040519161061983613667565b610627600435600401613c39565b8352602460043501356001600160401b03811161045357610673936106556020926004369181350101614583565b8282015260405180958192630edf122560e41b835260048301614a76565b038173__$1cd67d4dc9e627f0bec7928aa480e7d951$__5af4928315610e84578493610e50575b506106a9600435600401614322565b600b54918592845491828852600386016020526040882033895260205260ff604089205416610e3e57828791610778948a526003880160205260408a20338b5260205260408a20600160ff198254161790556001880161070a8282546140bb565b9055818a526004880160205260408a20838b5260205261072f60408b209182546140bb565b9055808952600487016020526040892090600288019182548b5260205260408a2054908a526004880160205260408a20838b5260205260408a205411610e36575b505084615d28565b6004811015610e225785919060038103610da5575061079681615ce9565b15610d13575050506001915b808452600582016020526107f86020604086206107da6001604051926107c784613667565b6001600160401b03815416845201613961565b8282015260405180938192632d34315760e01b835260048301614a76565b038173__$1cd67d4dc9e627f0bec7928aa480e7d951$__5af490811561045e578591610cd9575b50610955575b506060916108f4575b50805115610861575b61085e9060405161084781613682565b8381526040519061085782613682565b8152615384565b80f35b6001600160401b0360025460401c169061087a82615ce9565b610886575b9050610837565b508152601160205261089a60408220614a49565b80546108a5816137ab565b916108b360405193846136b0565b81835283526020808420849184015b8383106108d6575050505061085e9061087f565b600860206001926108e685613937565b8152019201920191906108c2565b6108fe9150614a49565b8054610909816137ab565b9161091760405193846136b0565b81835283526020808420849184015b83831061093757505050508261082e565b6008602060019261094785613937565b815201920192019190610926565b8352600581016020526001604084206001600160401b0361097a600435600401614322565b166001600160401b03198254161781550161099f6024600435016004356004016145ba565b906109aa828461422e565b918552602085208592805b8385106109c55750505050610825565b6109cf81836145ef565b906109da8280614604565b6109e481806145ef565b6109f76109f1828061430d565b806145ba565b906001600160401b038211610caa57610a10828961403e565b878d5260208d208d5b838110610cbe5750505060018701916001600160a01b039150610a3e90602001614619565b82546001600160a01b0319169116179055610a5c60208201826145ef565b610a696109f1828061430d565b906001600160401b038211610caa576002880190610a87838361403e565b908d5260208d208d5b838110610c8f5750505060038701916001600160a01b039150610ab590602001614619565b82546001600160a01b031916911617905560408101356004860155600585016001600160401b03610ae860608401614322565b825467ffffffffffffffff1916911617815560808201356001600160e01b031981168103610c8b57815463ffffffff60401b191660a09190911c63ffffffff60401b1617905560a081013590601e1981360301821215610c87576001600160401b038282013511610c875781810135360360208383010113610c8757610b8182820135610b7860068901546137f0565b6006890161462d565b8a90601f8382013511600114610c09578b9183820135610bf9575b508281013560011b9260001991013560031b1c19161760068501555b60208201358015159003610bf5576020600891610be9826001950135600788019060ff801983541691151516179055565b019301940193916109b5565b8880fd5b838201016020013591508c610b9c565b600687018c5260208c208c93925b82840135601f19168510610c6b576001945082840135601f19811610610c49575b50500135811b016006850155610bb8565b602060001960f88686013560031b161c19918585010101351690558c80610c38565b6020838501820181013583559485019460019092019101610c17565b8a80fd5b8b80fd5b6001906020610c9d85614619565b9401938184015501610a90565b634e487b7160e01b8d52604160045260248dfd5b6001906020610ccc85614619565b9401938184015501610a19565b90506020813d602011610d0b575b81610cf4602093836136b0565b8101031261045357610d0590613f02565b8561081f565b3d9150610ce7565b93919373__$b7b8687e33476c74e3b4e0a64c4768a343$__3b15610264576001600160401b036040519163199b9ca560e01b835260026004840152166024820152818160448173__$b7b8687e33476c74e3b4e0a64c4768a343$__5af48015610d9a57610d82575b50506107a2565b610d8b9061369d565b610d96578385610d7b565b8380fd5b6040513d84823e3d90fd5b905060029150939193036107a25773__$e0f829f5071d7e628aa77eca0c12e35bc2$__3b15610d9657604051635a27a53960e11b815260048101839052848160248173__$e0f829f5071d7e628aa77eca0c12e35bc2$__5af4801561045e57610e0f575b506107a2565b610e1b9094919461369d565b9284610e09565b634e487b7160e01b86526021600452602486fd5b558588610770565b6040516337138f5f60e11b8152600490fd5b9092506020813d602011610e7c575b81610e6c602093836136b0565b81010312610d965751918461069a565b3d9150610e5f565b6040513d86823e3d90fd5b604051630bd9169f60e01b8152600490fd5b90506020813d602011610ed3575b81610ebc602093836136b0565b8101031261047d57610ecd90613f02565b836105e4565b3d9150610eaf565b6040513d85823e3d90fd5b91939550919360431987820301835288610f0087846149f2565b60be1981360301813512156102645760408352610f2081358201806149f2565b92610f3860c094856040840152610100830190614a06565b93610f61610f4d8435850160208101906149f2565b95606096603f198583030188860152614a06565b906001600160401b03610f866080976040878035010135898701528680350101613c39565b169560a09687850152610fa563ffffffff60e01b918680350101613d65565b16908301528235830136819003601e1901908601351215610d96576001600160401b038335840186810135013511610d965782358301858101350180353603602090910113610d9657818103603f190160e08301528235830180860135018035808352600196602096879687969294601f9491939291908801878901378235830185810135013586018701528561103d838201613d95565b151591015281199281803501918035010135013501160101970193019301909286959492936105ae565b604051632ec5b44960e01b8152600490fd5b6040516321c4e35760e21b8152600490fd5b60405163b4f68f9760e01b8152600490fd5b0390506001600160401b03811161110a576001600160401b037f0000000000000000000000000000000000000000000000000000000000000000169081156110f657906001600160401b03809216061615153880610539565b634e487b7160e01b83526012600452602483fd5b634e487b7160e01b82526011600452602482fd5b604051631f30cc6360e21b8152600490fd5b604051630a23da2b60e31b8152600490fd5b90506020813d602011611174575b8161115d602093836136b0565b810103126102645761116e90613f02565b386104f0565b3d9150611150565b50346102685780600319360112610268576020600d54604051908152f35b503461026857806003193601126102685760206001600160401b0360015460401c16604051908152f35b503461026857806003193601126102685760206001600160401b0360015416604051908152f35b503461026857806003193601126102685760206001600160401b0360055416604051908152f35b50346102685780600319360112610268576020600b54604051908152f35b5034610268578060031936011261026857606060405161124f81613682565b5261026061125b6136d1565b604051918291602083526020830190613ad3565b50346102685760203660031901126102685760406112b791600435815260076020522060ff600761129f8361382a565b92015416604051928392604084526040840190613b8a565b90151560208301520390f35b503461026857806003193601126102685760206001600160401b03600a5460401c16604051908152f35b508060031936011261026857604051630972932760e21b815233600482015260208160248173__$e800e3908cdbb6b1b5bd452383a17b18f7$__5af4908115610d9a578291611403575b5015611130577f00000000000000000000000000000000000000000000000000000000000000008034106113f15761136f90346140c8565b81604051808093632c9680ef60e01b8252606060048301526113936064830161492a565b903360248401526044830152038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af48015610d9a5761085e9183916113cf575b5061530f565b6113eb91503d8085833e6113e381836136b0565b8101906147b7565b386113c9565b6040516334472ad760e11b8152600490fd5b90506020813d8211611434575b8161141d602093836136b0565b810103126102645761142e90613f02565b38611337565b3d9150611410565b503461026857806003193601126102685760206040516001600160401b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461026857602036600319011261026857600435906001600160401b038211610268576020600b6114bd6114b83660048701613cdd565b615b24565b90500154604051908152f35b506003196020368201811361047d57600435916001600160401b038311610d9657819083600401933603011261047d57604051630972932760e21b8152336004820152818160248173__$e800e3908cdbb6b1b5bd452383a17b18f7$__5af4908115610e84578491611684575b5015611130577f0000000000000000000000000000000000000000000000000000000000000000908134106113f15761156f82346140c8565b846040518080936302334d7960e51b82526060600483015261159460648301896148ad565b903360248401526044830152038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af4801561045e57611601946115d96115e0928594899161166a575b50615210565b3690613cdd565b60405180958192632cff562160e11b83528460048401526024830190613ad3565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4908115610e84578491611633575b5061085e9250615897565b905082813d8311611663575b61164981836136b0565b8101031261047d5761165d61085e92613f0f565b38611628565b503d61163f565b61167e91503d808b833e6113e381836136b0565b386115d3565b90508181813d83116116b2575b61169b81836136b0565b81010312610d96576116ac90613f02565b38611536565b503d611691565b50806003193601126102685734156116ff576116d433615a3a565b90156116ed576001016116e83482546140bb565b905580f35b604051630e991abd60e41b8152600490fd5b604051631036b5ad60e31b8152600490fd5b5034610268578060031936011261026857602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50600319604036820112610264576001600160401b0390600435828111610d965761177e903690600401613cdd565b91602435908111610d9657611797903690600401613da2565b604051630972932760e21b81523360048201529091602091828160248173__$e800e3908cdbb6b1b5bd452383a17b18f7$__5af490811561194c578691611913575b5015611130577f000000000000000000000000000000000000000000000000000000000000000034106113f1578161183f916040518093819263c836244d60e01b835260406004840152611830604484018a613ad3565b9083820301602484015261492a565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af490811561045e5785916118de575b506118cc5734604083510151036116ff5781518101518101516001600160a01b0316156118ba5761085e928183510151528151516118a26136d1565b9052339082515101526118b481614ab8565b91614e15565b604051637c5d310960e11b8152600490fd5b604051632f3335ff60e21b8152600490fd5b90508181813d831161190c575b6118f581836136b0565b810103126104535761190690613f02565b38611866565b503d6118eb565b90508281813d8311611945575b61192a81836136b0565b810103126119415761193b90613f02565b386117d9565b8580fd5b503d611920565b6040513d88823e3d90fd5b503461026857602080600319360112610264576004356002835414611a9157600283558015611a7f5761198933615a3a565b9290156116ed576001830192835493838510611a6d57600483926115e0926119b4876119e4996140c8565b8091557f000000000000000000000000000000000000000000000000000000000000000011611a5d575b01613746565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4908115610e84578491611a26575b50611a1f92506001600160a01b0316614105565b6001815580f35b905082813d8311611a56575b611a3c81836136b0565b8101031261047d57611a50611a1f92613f0f565b38611a0b565b503d611a32565b805460ff191660031781556119de565b6040516379b33e7960e01b8152600490fd5b604051631209aa7360e31b8152600490fd5b60405162461bcd60e51b815260048101839052601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b5034610268578060031936011261026857611af033615a3a565b90156116ed576003810154611ca857600180820154916005546001600160401b0360001981831601818111611c945767ffffffffffffffff19909216911617600555611b689190611b4390600401613746565b604051906390ba52cf60e01b8252818060209586938460048401526024830190613ad3565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af490811561045e578591611c67575b50845260068252604084209184835584828401556002918583850155856003850155611bbd60048501614018565b611bc960058501614018565b856006850155856007850155611be1600885016141e1565b600984019182549287815583611c0f575b8761085e88611c09600b8a85600a820155016141e1565b33614105565b6001600160ff1b0384168403611c53578752862091811b8201915b828110611c375780611bf2565b80611c428592614018565b611c4d838201614295565b01611c2a565b634e487b7160e01b88526011600452602488fd5b90508281813d8311611c8d575b611c7e81836136b0565b81010312610453575138611b8f565b503d611c74565b634e487b7160e01b87526011600452602487fd5b604051637c67c70160e11b8152600490fd5b503461026857806003193601126102685760206001600160401b03600a5416604051908152f35b50346102685760403660031901126102685760ff6040602092611d02613c4d565b6004358252600885528282206001600160a01b03909116825284522054604051911615158152f35b503461026857806003193601126102685760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461026857602036600319011261026857611dc89060406001600160401b039182611d8f613c1e565b168152600960205220611da181613746565b91600182015416906005600282015491015490604051948594608086526080860190613ad3565b926020850152604084015260608301520390f35b506020366003190112610268576004357f00000000000000000000000000000000000000000000000000000000000000008034106113f15781835260086020526040832033845260205260ff60408420541615611e935781611e809284526007602052611e67611e6260408620611e5a611e5582613937565b614ab8565b929091613937565b614e15565b83526007602052611e7a60408420614154565b346140c8565b80611e89575080f35b61085e9033614105565b6040516377f0d98160e11b8152600490fd5b503461026857806003193601126102685760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5034610268576040366003190112610268576040602091611eff613c4d565b6004358252600c84528282206001600160a01b03909116825283522054604051908152f35b5080600319360112610268577f000000000000000000000000000000000000000000000000000000000000000034106116ff57611f7f81611f636136d1565b6040518093819263aa5106cb60e01b8352339060048401613fd9565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4908115610d9a57829161206b575b50611fb081615b24565b9061205957600481019151918251906001600160401b039384831161204557611fd9838361403e565b602080910191865280862090865b84811061202a57878787346001820155600260ff1982541617815560024391015560055490612017818316614072565b16906001600160401b0319161760055580f35b83516001600160a01b03168382015592810192600101611fe7565b634e487b7160e01b86526041600452602486fd5b604051631b538cdf60e11b8152600490fd5b61208791503d8084833e61207f81836136b0565b810190613fb4565b38611fa6565b503461026857806003193601126102685760206040516001600160401b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5034610268578060031936011261026857602060ff601054166040519015158152f35b50346102685760203660031901126102685761210e613c1e565b604051635d3f8a6960e01b815233600482015260208160248173__$e800e3908cdbb6b1b5bd452383a17b18f7$__5af4908115610edb5783916121a1575b50156104135760105460ff81166121905760019167ffffffffffffffff60401b83549160401b169067ffffffffffffffff60401b191617825560ff19161760105580f35b60405162dc149f60e41b8152600490fd5b90506020813d82116121d2575b816121bb602093836136b0565b8101031261047d576121cc90613f02565b3861214c565b3d91506121ae565b5034610268576040366003190112610268576001600160401b0360043560248035838111610453573660238201121561045357806004013593841161045357600591368186851b840101116119415783865260089060209282845260408820338952845260ff948560408a20541615611e93578689526007855261226861226360408b20613937565b615e1e565b60405161227481613682565b8a81526040519061228482613682565b81526040519061229382613667565b81528a878201526040516122a681613682565b8b8152604051906122b682613682565b8152604051906122c582613667565b81528b88820152604051906122d982613682565b8c8252604051926122e984613636565b8352888301528b60408301528b60608301528b608083015260a08201526040519061231382613667565b81528a87820152604051612343816123358a8201948b86526040830190613bfc565b03601f1981018352826136b0565b519020146123b957885b888110612358578980f35b8061236a85600193851b860101614619565b898c5286885260408c2090838060a01b031690818d5288528860408d20541615612396575b500161234d565b898c5286885260408c20908c52875260408b208260ff198254161790553861238f565b604051632449894160e01b8152600490fd5b50346102685780600319360112610268576060600254604051906001600160401b03908181168352818160401c16602084015260801c166040820152f35b503461026857600319602036820112610264576001600160401b03600435116102645760c090600435360301126102685760ff60105416156110795761248260206124613661245c60048035018061430d565b613cdd565b60405180938192632cff562160e11b83528460048401526024830190613ad3565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af48015610d9a5782906133a9575b6124b29150614672565b336001600160a01b0390911603613397576124cc33615a3a565b91905060ff825416600681101561338357600203613371576001600160401b036006830154166001600160401b03612508602460043501614322565b161061335f5760a460043501351515806132cb575b6132b95761256a9061252d615790565b93911561327f575b60206125493661245c60048035018061430d565b604051809481926390ba52cf60e01b83528460048401526024830190613ad3565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4918215610edb57839261324b575b5060405161259e81613636565b6001600160401b036004356004013511610d96576125c53660048035808201350101613cdd565b81526125d5602460043501613c39565b602082015260043560448101356040830152606401356001600160401b0381116104535761260a906004369181350101614583565b6060820152608460043501356001600160401b03811161045357366023826004350101121561045357600481813501013590612645826137ab565b9161265360405193846136b0565b808352602083013660248360051b8560043501010111612e29576024836004350101905b60248360051b85600435010101821061311d57505050508160209160806126c2969594015260a4600435013560a0820152604051809581926339aa47fb60e01b83526004830161438b565b038173__$1cd67d4dc9e627f0bec7928aa480e7d951$__5af4928315610e845784936130e9575b506001600160401b0381168452600e6020526040842082855260205260408420604051908186905b600282106130d35750505061272581613667565b600160208251920151146001600160401b0383168652600f602052604086208487526020526040862085875260205260ff6040872054166130c15715612f7b575b612773816004880161459e565b50600181015490600160401b821015612f675760018201806001830155821015612f53576001600160401b03939291600187920188526020882001558282168652600e6020526040862084875260205260408620558181168552600e60205260408520838652602052600180604087200155168352600f602052604083209083526020526040822090825260205260408120600160ff19825416179055809281935b6128296064600435016004356004016145ba565b9050851015612892576128466064600435016004356004016145ba565b86101561287e57600191604061286e612868612876948a60051b8101906145ef565b80614604565b0135906140bb565b940193612815565b634e487b7160e01b84526032600452602484fd5b6128b0906128aa6002860154604460043501356140bb565b906140bb565b6128c46064600435016004356004016145ba565b159050612f4d5760015b6001600160401b036128e860ff600a5493168284166140a0565b16906001600160401b03191617600a55600382015490808210612f3b5761290e916140c8565b60038201556129246109f160048035018061430d565b906001600160401b038211612bd1576005830190612942838361403e565b90845260208420845b838110612f205785856001600160401b0361296a602460043501614322565b166001600160401b03196006830154161760068201556044600435013560078201556129a06064600435016004356004016145ba565b6129ad816008850161422e565b600883018452602084208492805b838510612be55786866129d86084600435016004356004016145ba565b90600160401b8211612bd1576009830154826009850155808310612b62575b50600983018452602084208491805b848410612a74578686600a60a46004350135910155612a64612a56612a5e612a3860043560040160043560040161430d565b612a4c6064600435016004356004016145ba565b9390913690613cdd565b923691614514565b90615384565b61085e6044600435013533615897565b612a7e81836145ef565b612a8b6109f1828061430d565b906001600160401b038211612b4e57612aa4828761403e565b858a5260208a208a5b838110612b335750505050806020612ac69201906145ba565b906001600160401b038211612b1f576001850190612ae483836142ca565b90895260208920895b838110612b0b57505050506002602060019201930193019291612a06565b600190602084359401938184015501612aed565b634e487b7160e01b89526041600452602489fd5b6001906020612b4185614619565b9401938184015501612aad565b634e487b7160e01b8a52604160045260248afd5b6001600160ff1b0381811682036103ed5783168303612bbd57600984018552602085208360011b81015b8260011b82018110612b9f5750506129f7565b80612bab600292614018565b612bb760018201614295565b01612b8c565b634e487b7160e01b85526011600452602485fd5b634e487b7160e01b84526041600452602484fd5b612bef81836145ef565b90612bfa8280614604565b612c0481806145ef565b612c116109f1828061430d565b906001600160401b038211612ef157612c2a828961403e565b878c5260208c208c5b838110612f055750505060018701916001600160a01b039150612c5890602001614619565b82546001600160a01b0319169116179055612c7660208201826145ef565b612c836109f1828061430d565b906001600160401b038211612ef1576002880190612ca1838361403e565b908c5260208c208c5b838110612ed65750505060038701916001600160a01b039150612ccf90602001614619565b82546001600160a01b031916911617905560408101356004860155600585016001600160401b03612d0260608401614322565b825467ffffffffffffffff1916911617815560808201356001600160e01b031981168103610c8757815463ffffffff60401b191660a09190911c63ffffffff60401b16179055601e198136030160a08201351215610bf5576001600160401b0360a082013582013511610bf55760a0810135810180353603602090910113610bf557612da560a0820135820135612d9c60068801546137f0565b6006880161462d565b88601f60a083013583013511600114612e4157899060a0830135830135612e2d575b5060a082013582013560011b916000199060a0810135013560031b1c19161760068501555b60208201358015159003612e29576020600891612e1d826001950135600788019060ff801983541691151516179055565b019301940193916129bb565b8780fd5b6020915060a083013583010101358a612dc7565b90600686018a5260208a208a925b60a0830135830135601f19168410612eb6576001935060a0830135830135601f19811610612e8e575b505060a08101350135811b016006850155612dec565b60a0830135830190810160200135600019913560031b60f8169190911c191690558a80612e78565b602060a08401358401820181013583559384019360019092019101612e4f565b6001906020612ee485614619565b9401938184015501612caa565b634e487b7160e01b8c52604160045260248cfd5b6001906020612f1385614619565b9401938184015501612c33565b6001906020612f2e85614619565b940193818401550161294b565b604051631d36ca1560e21b8152600490fd5b826128ce565b634e487b7160e01b87526032600452602487fd5b634e487b7160e01b87526041600452602487fd5b50612f8a60048035018061430d565b604051612f9681613682565b858152612fa9604051926115d984613667565b825260208201526004860154600160401b81101561204557806001612fd7920160048901556004880161459e565b9190916130ad578051518051906001600160401b03821161309957602090612fff838661403e565b0183885260208820885b83811061307c5750505050602001518051916001600160401b038311612f67576001602091019161303a84846142ca565b0190865260208620865b8381106130685750505050600485015480600019810111612bbd5760001901612766565b600190602084519401938184015501613044565b82516001600160a01b031681830155602090920191600101613009565b634e487b7160e01b88526041600452602488fd5b634e487b7160e01b86526004869052602486fd5b60405163020ac14960e01b8152600490fd5b6001602081928554815201930191019091612711565b9092506020813d602011613115575b81613105602093836136b0565b81010312610d96575191386126e9565b3d91506130f8565b81356001600160401b0381116132475760406004358601820136036023190112613247576040519061314e82613667565b6001600160401b03602482886004350101013511610c875761317e36602460043589018401818101350101613cdd565b82526044818760043501010135906001600160401b038211610c8b5736604383838a600435010101011215610c8b5760248282896004350101010135906131c4826137ab565b926131d260405194856136b0565b82845260208401913660448b84848860051b9260043501010101011161324357604482828c60043501010101925b60448b84848860051b92600435010101010184106132335750505050602080840192909252509082529182019101612677565b8335815260209384019301613200565b8e80fd5b8980fd5b9091506020813d602011613277575b81613267602093836136b0565b8101031261047d57519038612591565b3d915061325a565b600484036132ab575b60018401805467ffffffffffffffff19166001600160401b038316179055612535565b6132b4846144a3565b613288565b6040516312232e5d60e11b8152600490fd5b506132f760206132dd600585016139b7565b604051809381926339aa47fb60e01b83526004830161438b565b038173__$1cd67d4dc9e627f0bec7928aa480e7d951$$a0fe38a9a81205afccc10810b09a4d3f45$__9360409283519563c836244d60e01b80885260049086828a0152614b0660448a0186613ad3565b98848180614b206003199d8e838203016024840152614984565b0381875af4908115614df857600091614dc3575b50614db45790614b6c94939291865199848b51519b8a614b7b81519a8b93849363f47ad7eb60e01b8552898501526044840190613b8a565b85838203016024840152614984565b038173__$386b5c41ce93e8b832daf8008b3d30ae09$__5af4968715614da957600097614d7a575b506000956002881015614d6757899a9b6001899a9b9914614c4f575b505050505050509050614c3a57614c1f9290600090614c27575067ffffffffffffffff60401b6001915b614c0460ff600a5494166001600160401b0385841c166140a0565b901b169067ffffffffffffffff60401b191617600a55615210565b600090600190565b67ffffffffffffffff60401b9091614be9565b50614c448161530f565b510151151590600090565b9088614c8b89989a93614c7b9a94519a8b948594631ccc893360e11b86528a8601526044850190613ad3565b9086848303016024850152613ad3565b0381875af4958615614d5d57918a93918895938798614d3d575b50614cd490614cc58651998a978896879687528601526044850190613ad3565b90838203016024840152614984565b03915af4928315614d31578193614cf8575b50505015839038808080808080614bbf565b9091809350813d8311614d2a575b614d1081836136b0565b810103126102685750614d2290613f02565b388080614ce6565b503d614d06565b508551903d90823e3d90fd5b614cd4919850614d56903d808a833e61207f81836136b0565b9790614ca5565b8a513d87823e3d90fd5b634e487b7160e01b875260218452602487fd5b614d9b919750853d8711614da2575b614d9381836136b0565b810190614aa0565b9538614ba3565b503d614d89565b89513d6000823e3d90fd5b50855163461e815d60e01b8152fd5b908582813d8311614df1575b614dd981836136b0565b810103126102685750614deb90613f02565b38614b34565b503d614dcf565b88513d6000823e3d90fd5b60405163461e815d60e01b8152600490fd5b9190614f61575b614e235750565b90614e7f91602080915101515173__$a0fe38a9a81205afccc10810b09a4d3f45$__614e676040519263089032d560e01b8452604060048501526044840190613ad3565b60031983820301602484015282806000978893614984565b0381845af491821561045e579183918693614ebe969792614f45575b506040518080978194632cff562160e11b83528660048401526024830190613ad3565b03915af4918215614f38578192614efe575b505061403c91507f000000000000000000000000000000000000000000000000000000000000000090615897565b90915082813d8311614f31575b614f1581836136b0565b810103126102685750614f2a61403c91613f0f565b3880614ed0565b503d614f0b565b50604051903d90823e3d90fd5b614f5a9192503d8086833e61207f81836136b0565b9038614e9b565b6040825101518047106141425760008080809360635af1614f806140d5565b50614e1c57604051633204506f60e01b8152600490fd5b90805190815191825151928351906001600160401b039182811161365157614fbf818861403e565b602080960190600091888352878320835b8381106151b2575050505090850151600187810180546001600160a01b03199081166001600160a01b039485161790915585880151805151805193959491939060028c0190888311612f67578b90615028848461403e565b019086528a862087875b84811061519e5750505050508860038b019301511690825416179055604084015160048801556150a260058801846060870151166001600160401b031982541617815563ffffffff60e01b60808701511663ffffffff60401b82549160a01c169063ffffffff60401b1916179055565b60a060068801940151805193841161518a576150c8846150c287546137f0565b8761462d565b8691601f851160011461511f579361403c98979593819382936007999794615114575b50501b916000199060031b1c19161790555b0151151591019060ff801983541691151516179055565b0151925038806150eb565b9190601f949394198416868452888420935b8181106151755750916007979593918561403c9b9a9896941061515c575b505050811b0190556150fd565b015160001960f88460031b161c1916905538808061514f565b82840151855593860193928901928901615131565b634e487b7160e01b82526041600452602482fd5b8d8685511694019381840155018890615032565b82516001600160a01b03168282015591890191600101614fd0565b8054600160401b811015613651576151ea91600182018155613ed0565b9190916151fa5761403c91614f97565b634e487b7160e01b600052600060045260246000fd5b615253600061524260208451015151604051938492839263089032d560e01b8452604060048501526044840190613ad3565b828103600319016024840152614984565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4801561530357615284916000916152ea575b50615b24565b9190156116ed57600b8261403c935468ffffffffffffffff006152b96001600160401b038360081c1680606088510152614072565b60081b169068ffffffffffffffff0019161781556040835101516152e2600383019182546140bb565b9055016151cd565b6152fd913d8091833e61207f81836136b0565b3861527e565b6040513d6000823e3d90fd5b61536361531a615790565b9391505060036001600160401b039384600a5416606084510152600281016152e27f000000000000000000000000000000000000000000000000000000000000000082546140bb565b600a5490615372818316614072565b16906001600160401b03191617600a55565b919060005b81518110156153af57806153a96153a2600193856149de565b51866153b5565b01615389565b50509050565b81516020908101518101519192916001600160a01b03908116156118ba57818351015151515115614e0357825160808101516001600160e01b031916159081615782575b5061577057825160409485519063f47ad7eb60e01b825261542560049388858501526044840190613b8a565b85838061543e6003199485838203016024840152614984565b038173__$386b5c41ce93e8b832daf8008b3d30ae09$__5af4928315614df857600093615751575b508561549191818951015151908a5193849263c836244d60e01b84528c898501526044840190613ad3565b908282030160248301528a838201918481528854809352019087600052600080516020615e428339815191529060005b818110615736575050508190038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4908115614df857600091615701575b506155415750505061550683615e1e565b806000526007835261551b8486600020614f97565b60005260088252818460002093515101511660005252600020600160ff19825416179055565b909192506002829694959610156156ec5790849160018214806156e1575b61565d575b50156155f7575b60009161558f84519687938493635c46fefb60e11b85528401526024830190613bfc565b038173__$33b79814e84bf6cf5e47244090b19ce5f8$__5af49081156155ed57506155b8575050565b3d806000843e6155c881846136b0565b82019082820312613c345781516001600160401b038111613c34576145119201614775565b513d6000823e3d90fd5b50600a546001600160401b038082851c169060608751015116810361564d5791849167ffffffffffffffff60401b615630600095614072565b861b169067ffffffffffffffff60401b191617600a55915061556b565b835163a57cadff60e01b81528390fd5b615668919250615b24565b90156156d15780546001600160401b03808260481c16906060895101511681036156c1579067ffffffffffffffff60481b6156a588959493614072565b60481b169067ffffffffffffffff60481b191617905538615564565b855163a57cadff60e01b81528590fd5b8351630e991abd60e41b81528390fd5b50805151151561555f565b602183634e487b7160e01b6000525260246000fd5b908682813d831161572f575b61571781836136b0565b81010312610268575061572990613f02565b386154f5565b503d61570d565b82548b1684528b9587955090930192600192830192016154c1565b615769919350863d8811614da257614d9381836136b0565b9138615466565b60405163569d45cf60e11b8152600490fd5b6040915001514710386153f9565b6001600160401b03807f000000000000000000000000000000000000000000000000000000000000000016801561588157816157cf8282431604614072565b160290811690810361408a5780600090815260206009815261581a6040832092826157f985613746565b60405180948192630c133d1360e31b83528460048401526024830190613ad3565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4928315614f38578193615848575b5050501592565b9091809350813d831161587a575b61586081836136b0565b81010312610268575061587290613f02565b388080615841565b503d615856565b634e487b7160e01b600052601260045260246000fd5b8115615999576158a690614672565b604051906020820163228cb73360e01b81526004835260408301926001600160401b03818510818611176136515760a082019081118582101761365157604052602984527f416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c6060820152681d594819985a5b195960ba1b6080820152844710615945576145119460009283925191855af161593f6140d5565b9161599d565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b5050565b919290156159ff57508151156159b1575090565b3b156159ba5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015615a125750805190602001fd5b60405162461bcd60e51b815260206004820152908190615a36906024830190613b65565b0390fd5b9060405191615a4883613682565b60405192839160045491828652602080960193600096879460048652600080516020615e428339815191529186905b828210615b005750505050615a9181615aae9603826136b0565b815260405163aa5106cb60e01b8152938492839260048401613fd9565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af4908115610edb5783615ae1939492615ae5575b5050615b24565b9091565b615af992503d8091833e61207f81836136b0565b3880615ada565b83546001600160a01b03168952978801978a97506001938401939190910190615a77565b90615b4d604051926390ba52cf60e01b8452838060209384938460048401526024830190613ad3565b038173__$a0fe38a9a81205afccc10810b09a4d3f45$__5af492831561530357600093615b8d575b50600691926000525260406000206004810154151591565b8181813d8311615bb4575b615ba281836136b0565b81010312610d96575192506006615b75565b503d615b98565b615bc481615ce9565b156145115773__$b7b8687e33476c74e3b4e0a64c4768a343$__6040805192634953836d60e11b8452600260048501526001600160401b0380911693846024820152602081604481875af4908115615cde57600091615ca5575b5080615c95575b615c8f57823b15613c345760006044938351948580926394ecccfd60e01b8252600260048301528860248301525af48015615c8457615c75575b5050506001600160401b03196001541617600155565b82116136515752388080615c5f565b82513d6000823e3d90fd5b50505050565b508381600254841c161415615c25565b906020823d8211615cd6575b81615cbe602093836136b0565b810103126102685750615cd090613f02565b38615c1e565b3d9150615cb1565b83513d6000823e3d90fd5b6001600160401b0380615d2181600154167f0000000000000000000000000000000000000000000000000000000000000000906140a0565b1691161490565b60ff7f00000000000000000000000000000000000000000000000000000000000000001680830290838204148315171561408a576064900460405191637d2ef4e560e11b835280600484015260208360248173__$e0f829f5071d7e628aa77eca0c12e35bc2$__5af492831561530357600093615dea575b50600101549080821115615de157808311615dd857615dc892615dc2916140c8565b926140c8565b1115615dd357600190565b600290565b50505050600390565b50505050600090565b90926020823d8211615e16575b81615e04602093836136b0565b81010312610268575051916001615da0565b3d9150615df7565b604051615e3b816123356020820194602086526040830190613bfc565b5190209056fe8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19ba26469706673582212208548f3ea542e6cd1369aba69905652f6f3e64f0afd56037b52ac3d31feeaef0a64736f6c63430008110033";

type GatewayConstructorParams =
  | [linkLibraryAddresses: GatewayLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Gateway__factory extends ContractFactory {
  constructor(...args: GatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Gateway__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: GatewayLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a0fe38a9a81205afccc10810b09a4d3f45\\$__", "g"),
      linkLibraryAddresses["src/lib/SubnetIDHelper.sol:SubnetIDHelper"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e800e3908cdbb6b1b5bd452383a17b18f7\\$__", "g"),
      linkLibraryAddresses["src/lib/AccountHelper.sol:AccountHelper"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$33b79814e84bf6cf5e47244090b19ce5f8\\$__", "g"),
      linkLibraryAddresses["src/lib/CrossMsgHelper.sol:CrossMsgHelper"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1cd67d4dc9e627f0bec7928aa480e7d951\\$__", "g"),
      linkLibraryAddresses["src/lib/CheckpointHelper.sol:CheckpointHelper"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b7b8687e33476c74e3b4e0a64c4768a343\\$__", "g"),
      linkLibraryAddresses[
        "src/lib/ExecutableQueueHelper.sol:ExecutableQueueHelper"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e0f829f5071d7e628aa77eca0c12e35bc2\\$__", "g"),
      linkLibraryAddresses[
        "src/lib/EpochVoteSubmissionHelper.sol:EpochVoteSubmissionHelper"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$386b5c41ce93e8b832daf8008b3d30ae09\\$__", "g"),
      linkLibraryAddresses["src/lib/StorableMsgHelper.sol:StorableMsgHelper"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    params: {
      networkName: { route: string[] };
      bottomUpCheckPeriod: BigNumberish;
      topDownCheckPeriod: BigNumberish;
      msgFee: BigNumberish;
      majorityPercentage: BigNumberish;
    },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Gateway> {
    return super.deploy(params, overrides || {}) as Promise<Gateway>;
  }
  getDeployTransaction(
    params: {
      networkName: { route: string[] };
      bottomUpCheckPeriod: BigNumberish;
      topDownCheckPeriod: BigNumberish;
      msgFee: BigNumberish;
      majorityPercentage: BigNumberish;
    },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(params, overrides || {});
  }
  attach(address: string): Gateway {
    return super.attach(address) as Gateway;
  }
  connect(signer: Signer): Gateway__factory {
    return super.connect(signer) as Gateway__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatewayInterface {
    return new utils.Interface(_abi) as GatewayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Gateway {
    return new Contract(address, _abi, signerOrProvider) as Gateway;
  }
}

export interface GatewayLibraryAddresses {
  ["src/lib/SubnetIDHelper.sol:SubnetIDHelper"]: string;
  ["src/lib/AccountHelper.sol:AccountHelper"]: string;
  ["src/lib/CrossMsgHelper.sol:CrossMsgHelper"]: string;
  ["src/lib/CheckpointHelper.sol:CheckpointHelper"]: string;
  ["src/lib/ExecutableQueueHelper.sol:ExecutableQueueHelper"]: string;
  ["src/lib/EpochVoteSubmissionHelper.sol:EpochVoteSubmissionHelper"]: string;
  ["src/lib/StorableMsgHelper.sol:StorableMsgHelper"]: string;
}
