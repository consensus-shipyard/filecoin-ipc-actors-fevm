/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StorableMsgHelper,
  StorableMsgHelperInterface,
} from "../StorableMsgHelper";

const _abi = [
  {
    inputs: [],
    name: "EMPTY_STORABLE_MESSAGE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "route",
                    type: "address[]",
                  },
                ],
                internalType: "struct SubnetID",
                name: "subnetId",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "rawAddress",
                type: "address",
              },
            ],
            internalType: "struct IPCAddress",
            name: "from",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "route",
                    type: "address[]",
                  },
                ],
                internalType: "struct SubnetID",
                name: "subnetId",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "rawAddress",
                type: "address",
              },
            ],
            internalType: "struct IPCAddress",
            name: "to",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "bytes4",
            name: "method",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
        ],
        internalType: "struct StorableMsg",
        name: "message",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "route",
            type: "address[]",
          },
        ],
        internalType: "struct SubnetID",
        name: "currentSubnet",
        type: "tuple",
      },
    ],
    name: "applyType",
    outputs: [
      {
        internalType: "enum IPCMsgType",
        name: "",
        type: "IPCMsgType",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "route",
                    type: "address[]",
                  },
                ],
                internalType: "struct SubnetID",
                name: "subnetId",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "rawAddress",
                type: "address",
              },
            ],
            internalType: "struct IPCAddress",
            name: "from",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address[]",
                    name: "route",
                    type: "address[]",
                  },
                ],
                internalType: "struct SubnetID",
                name: "subnetId",
                type: "tuple",
              },
              {
                internalType: "address",
                name: "rawAddress",
                type: "address",
              },
            ],
            internalType: "struct IPCAddress",
            name: "to",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "bytes4",
            name: "method",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
        ],
        internalType: "struct StorableMsg",
        name: "storableMsg",
        type: "tuple",
      },
    ],
    name: "toHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001a5761091e9081610020823930815050f35b600080fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c9081632f6457531461025e575080639639ac37146100ca5763f47ad7eb1461004657600080fd5b60031981813601126100c65783359067ffffffffffffffff908183116100c25760c08184360301126100c2576024359182116100c25760209082360301126100be579061009791850190850161065e565b90519160028210156100ab57602083838152f35b634e487b7160e01b815260218452602490fd5b8380fd5b8480fd5b8280fd5b5082826003193601126100c65781516100e28161037d565b8381528251906100f18261037d565b81528251906100ff826103af565b815260209380858301528351916101158361037d565b8183528451926101248461037d565b8352845192610132846103af565b835281868401528451906101458261037d565b82825285519060c0820167ffffffffffffffff968382108883111761024b57509088939296959491885286528286019384528686019080825260608701928184526080880182815260a0890191825289519788958787019a888c52518c880160c0905261010088016101b691610405565b9851603f19998a8982030160608a01526101cf91610405565b95516080880152511660a0860152516001600160e01b03191660c08501525183830390950160e08401528451808352909485905b8287106102335750828201850152601f01601f19160103808452610229925001826103cb565b5190209051908152f35b86810186015187850187015295850195879450610203565b634e487b7160e01b865260419052602485fd5b60209391506003198536820186136100be5780359367ffffffffffffffff8086116103795785830160c0873603958601126100c657888601968988526102dd6102c96102be6102ad8580610825565b60c08d8c01526101008b0190610839565b936024840190610825565b92603f1993848a83030160608b0152610839565b956044820135608089015260648201358481168091036103755760a0890152608482013563ffffffff60e01b81168091036103755760c089015260a482013590602219018112156100c2570193840135936024019184116100c65783360382136100c6579285928186938b968661022999030160e087015281855286850137828201850152601f01601f1916010380845201826103cb565b8580fd5b5080fd5b6020810190811067ffffffffffffffff82111761039957604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761039957604052565b90601f8019910116810190811067ffffffffffffffff82111761039957604052565b67ffffffffffffffff81116103995760051b60200190565b90815160408252606082019051926020918260408501528451809152826080850195019060005b818110610448575050508101516001600160a01b031691015290565b82516001600160a01b03168752958401959184019160010161042c565b903590603e198136030182121561047a570190565b600080fd5b903590601e198136030182121561047a570190565b35906001600160a01b038216820361047a57565b91906020808483031261047a576040519067ffffffffffffffff81830181811184821017610399576040528295803591821161047a57019280601f8501121561047a5783356104f6816103ed565b9461050460405196876103cb565b818652838087019260051b82010192831161047a578301905b82821061052b575050505052565b83809161053784610494565b81520191019061051d565b906020808383031261047a57825167ffffffffffffffff9384821161047a570192818484031261047a57604051936105798561037d565b805191821161047a57019180601f8401121561047a57825161059a816103ed565b936105a860405195866103cb565b818552838086019260051b82010192831161047a578301905b8282106105d15750505050815290565b81516001600160a01b038116810361047a5781529083019083016105c1565b60209081604081850192519482815285518094520193019160005b828110610619575050505090565b83516001600160a01b03168552938101939281019260010161060b565b909161064d61065b936040845260408401906105f0565b9160208184039101526105f0565b90565b906106a761069f61068f61068861068161067b6020880188610465565b8061047f565b36906104a8565b9480610465565b61069a36918061047f565b6104a8565b9136906104a8565b9073__$a0fe38a9a81205afccc10810b09a4d3f45$__60409284845191631ccc893360e11b9081845283806106e360009a8b9460048401610636565b0381875af492831561081b579187916107149695949383946107ff575b508751968792839283528760048401610636565b0381855af49384156107f55786946107c8575b508361074b92602092875180958194829363c836244d60e01b845260048401610636565b03915af49384156107bf57508493610783575b5082610774575b505061076e5790565b50600190565b51519051511090503880610765565b9092506020813d82116107b7575b8161079e602093836103cb565b810103126100be575180151581036100be57913861075e565b3d9150610791565b513d86823e3d90fd5b61074b929450906107ec6020923d808a833e6107e481836103cb565b810190610542565b94925090610727565b85513d88823e3d90fd5b6108149194503d8085833e6107e481836103cb565b9238610700565b86513d89823e3d90fd5b9035603e198236030181121561047a570190565b601e199190803536829003840181121561047a5781016040835260608301938135908236030181121561047a570190813560208093019467ffffffffffffffff821161047a578160051b3603861361047a5781908460408701525260808401949060005b8181106108c357506001600160a01b03926108bc925084019050610494565b1691015290565b9091958480600192838060a01b036108da8b610494565b16815201970192910161089d56fea2646970667358221220692406f2cc9e550a5b70dbd3611a3ef98f2b2e1b6bffa0636029b20cdcead52064736f6c63430008110033";

type StorableMsgHelperConstructorParams =
  | [linkLibraryAddresses: StorableMsgHelperLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StorableMsgHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class StorableMsgHelper__factory extends ContractFactory {
  constructor(...args: StorableMsgHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        StorableMsgHelper__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: StorableMsgHelperLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a0fe38a9a81205afccc10810b09a4d3f45\\$__", "g"),
      linkLibraryAddresses["src/lib/SubnetIDHelper.sol:SubnetIDHelper"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StorableMsgHelper> {
    return super.deploy(overrides || {}) as Promise<StorableMsgHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StorableMsgHelper {
    return super.attach(address) as StorableMsgHelper;
  }
  connect(signer: Signer): StorableMsgHelper__factory {
    return super.connect(signer) as StorableMsgHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StorableMsgHelperInterface {
    return new utils.Interface(_abi) as StorableMsgHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StorableMsgHelper {
    return new Contract(address, _abi, signerOrProvider) as StorableMsgHelper;
  }
}

export interface StorableMsgHelperLibraryAddresses {
  ["src/lib/SubnetIDHelper.sol:SubnetIDHelper"]: string;
}
