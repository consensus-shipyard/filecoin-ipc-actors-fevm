{"abi":[{"type":"function","name":"claim","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimRewardForRelayer","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"distributeRewardToRelayers","inputs":[{"name":"height","type":"uint64","internalType":"uint64"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"join","inputs":[{"name":"metadata","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"kill","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"leave","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"preFund","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"preRelease","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stake","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"submitCheckpoint","inputs":[{"name":"checkpoint","type":"tuple","internalType":"struct BottomUpCheckpoint","components":[{"name":"subnetID","type":"tuple","internalType":"struct SubnetID","components":[{"name":"root","type":"uint64","internalType":"uint64"},{"name":"route","type":"address[]","internalType":"address[]"}]},{"name":"blockHeight","type":"uint64","internalType":"uint64"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"nextConfigurationNumber","type":"uint64","internalType":"uint64"},{"name":"crossMessagesHash","type":"bytes32","internalType":"bytes32"}]},{"name":"messages","type":"tuple[]","internalType":"struct CrossMsg[]","components":[{"name":"message","type":"tuple","internalType":"struct StorableMsg","components":[{"name":"from","type":"tuple","internalType":"struct IPCAddress","components":[{"name":"subnetId","type":"tuple","internalType":"struct SubnetID","components":[{"name":"root","type":"uint64","internalType":"uint64"},{"name":"route","type":"address[]","internalType":"address[]"}]},{"name":"rawAddress","type":"tuple","internalType":"struct FvmAddress","components":[{"name":"addrType","type":"uint8","internalType":"uint8"},{"name":"payload","type":"bytes","internalType":"bytes"}]}]},{"name":"to","type":"tuple","internalType":"struct IPCAddress","components":[{"name":"subnetId","type":"tuple","internalType":"struct SubnetID","components":[{"name":"root","type":"uint64","internalType":"uint64"},{"name":"route","type":"address[]","internalType":"address[]"}]},{"name":"rawAddress","type":"tuple","internalType":"struct FvmAddress","components":[{"name":"addrType","type":"uint8","internalType":"uint8"},{"name":"payload","type":"bytes","internalType":"bytes"}]}]},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"method","type":"bytes4","internalType":"bytes4"},{"name":"params","type":"bytes","internalType":"bytes"},{"name":"fee","type":"uint256","internalType":"uint256"}]},{"name":"wrapped","type":"bool","internalType":"bool"}]},{"name":"signatories","type":"address[]","internalType":"address[]"},{"name":"signatures","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unstake","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claim()":"4e71d92d","claimRewardForRelayer()":"ed7c4da1","distributeRewardToRelayers(uint64,uint256)":"f9002bb1","join(bytes)":"6170b162","kill()":"41c0e1b5","leave()":"d66d9e19","preFund()":"0b7fbe60","preRelease(uint256)":"66783c9b","stake()":"3a4b66f1","submitCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[],address[],bytes[])":"a8284de3","unstake(uint256)":"2e17de78"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewardForRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"height\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeRewardToRelayers\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preFund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"preRelease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"crossMessagesHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes4\",\"name\":\"method\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct StorableMsg\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"}],\"internalType\":\"struct CrossMsg[]\",\"name\":\"messages\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"signatories\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"submitCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LimeChain team\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Subnet Actor interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim()\":{\"notice\":\"Validator claims released collateral\"},\"claimRewardForRelayer()\":{\"notice\":\"Relayer claims a reward\"},\"distributeRewardToRelayers(uint64,uint256)\":{\"notice\":\"reward the relayers for processing checkpoint at height `height`. The reword includes the fixed reward for a relayer defined in the contract and `amount` of fees from the cross-messages.\"},\"join(bytes)\":{\"notice\":\"Called by peers looking to join a subnet. It implements the basic logic to onboard new peers to the subnet.\"},\"kill()\":{\"notice\":\"Unregister the subnet from the hierarchy, making it no longer discoverable.\"},\"leave()\":{\"notice\":\"Called by peers looking to leave a subnet.\"},\"preFund()\":{\"notice\":\"Method that allows to pre-fund an address in the subnet before it bootstraps.\"},\"preRelease(uint256)\":{\"notice\":\"Method that allows to recover initial balance for an address from a subnet that hasn't bootstrapped yet.\"},\"stake()\":{\"notice\":\"Method that allows a validator to increase their stake\"},\"submitCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[],address[],bytes[])\":{\"notice\":\"Executes the checkpoint if it is valid. It triggers the commitment of the checkpoint, the execution of related cross-net messages, and any other side-effects that need to be triggered by the checkpoint such as relayer reward book keeping.\"},\"unstake(uint256)\":{\"notice\":\"Method that allows a validator to unstake their collateral from a subnet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISubnetActor.sol\":\"ISubnetActor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":\\\"ds-test/=lib/forge-std/lib/ds-test/src/,forge-std/=lib/forge-std/src/,openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/,fevmate=lib/fevmate/contracts,murky/=lib/murky/src,elliptic-curve-solidity/=lib/elliptic-curve-solidity\\\"/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/fevmate/contracts/utils/FilAddress.sol\":{\"keccak256\":\"0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7\",\"dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5\",\"dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593\",\"dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT\"]},\"src/constants/Constants.sol\":{\"keccak256\":\"0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940\",\"dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx\"]},\"src/enums/ConsensusType.sol\":{\"keccak256\":\"0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0\",\"dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ\"]},\"src/enums/Status.sol\":{\"keccak256\":\"0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33\",\"dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R\"]},\"src/errors/IPCErrors.sol\":{\"keccak256\":\"0x15eb85fbcb6c09c5d6aded54054d8f3bee6b2e449ee94fd8a2da546d4dd573e3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://377d571abbec85fb7a188a9555e91be7b42c291876d2d6c4717d419377c20472\",\"dweb:/ipfs/QmZNW2TgixFAMhr1XiHVWBJTgsoksPn3WhuLjwoC4LbSpa\"]},\"src/interfaces/IGateway.sol\":{\"keccak256\":\"0x295ad8441795f9030042bda033145ef9ab3ff52bde95229ebf03bbc2fdf10f62\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b283e644110d5ce45e9082c73031bd431bca2b15602298105f5a65aeca6a6d0b\",\"dweb:/ipfs/QmSM9yFvASBM5hmce19wJxEikmM7H6Dnj6AGs1GUd4RCu1\"]},\"src/interfaces/ISubnetActor.sol\":{\"keccak256\":\"0x38a9c1e7dc30db637b36e87eb8b21563a0acad65beb1583431ce5b165ae45905\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://215522a9761c5534ea7c7cbb968fd9013f7d07cb79953a689534b7bc2517f846\",\"dweb:/ipfs/QmVkgQMKh1Mw8URtGW1ytEj817B88HtWKyh78qMD9uGskE\"]},\"src/lib/AccountHelper.sol\":{\"keccak256\":\"0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc\",\"dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z\"]},\"src/lib/LibGatewayActorStorage.sol\":{\"keccak256\":\"0xd90194a07b676a412c9f753a5a9c4b4e09b233878824b0308ccde8d56e39d3c9\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://218d691a4446efbc54c27e2c4a6c936d6ed62ff0f3aa30061f6752fe5e43f357\",\"dweb:/ipfs/QmfNZJtXmQNNKYi4r3siJ6oXvpFakFhwVooEn79sTGFT4T\"]},\"src/lib/LibStaking.sol\":{\"keccak256\":\"0x17e43d88485af4f26925d224128d4afb0cb15a79ef09427c61e5e6fe267db72e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://0a962d09e0564002514dd83fa3de6557e82a75bb91ef4db72363317f568e1c0a\",\"dweb:/ipfs/QmWRUGwBPaWzZpu4zPTmRkpua4CC93kFvqbqXgKL2NjiZY\"]},\"src/lib/LibStakingChangeLog.sol\":{\"keccak256\":\"0xa4273910f3ad3377843e6bf386b6a6752aa635e2962effdb50657bcbb1f53583\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://bfc0de35c4dc0ce86b7dc360a48b4ec39d68dc1f384736df2eb5181fda7e7006\",\"dweb:/ipfs/QmW7Gm2DnmpVZdJ7gMx4vcumkG6pP7UJgBskdLtuJrSrq9\"]},\"src/lib/LibSubnetActorStorage.sol\":{\"keccak256\":\"0xe11ae56d18ef43fd9ebdf9350977f9a26da4ee9a3288b46b04c5b973aa231f28\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f616b61fde1528a8666d09c962d7f23a82b200229691794933f39c4d3781fc1c\",\"dweb:/ipfs/QmXQsNGv6R34wAx1fRoyMiwdtGgQVn1qDXGCr7cED92vvJ\"]},\"src/lib/priority/LibMaxPQ.sol\":{\"keccak256\":\"0x2e8e8e8bcab391fee253379921ad0a1c5e5e94ae72ff5dc2a1495530767801b7\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://25743e55c8f9107c07569523835e5618ef66df7174adf5cd2ccff5c7490d168e\",\"dweb:/ipfs/QmeqTaiAvzYA2KzCEaEdgbt7mbdkStAHeerb3EBMCW6vLS\"]},\"src/lib/priority/LibMinPQ.sol\":{\"keccak256\":\"0x535dc505b2b46450762965cc555639d2b416e6b5ccab1a71db67877114d25067\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://ba7cc9b635965d426109c8964d435aa01fce0f633c628e15da524da59806b38f\",\"dweb:/ipfs/QmbeuRhBNccfgx2NMM94XVgZ9Gvb9xzqm6LsWQNnGhwgEW\"]},\"src/lib/priority/LibPQ.sol\":{\"keccak256\":\"0x4a4a7d00e928fb9173681a7c1f36b8204470f335a3870a48c131b83bc96390b7\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://48444c7f7ff0bb5719b0c17ed0393d7a40d3dca32da52bbdc31e8349150c470f\",\"dweb:/ipfs/QmRYzmRUM3W9bB2FG2J9yi12sbfJTt9fbwvyjJXrEtq4Vc\"]},\"src/structs/Checkpoint.sol\":{\"keccak256\":\"0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a\",\"dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww\"]},\"src/structs/FvmAddress.sol\":{\"keccak256\":\"0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac\",\"dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu\"]},\"src/structs/Subnet.sol\":{\"keccak256\":\"0x09540d46add1f9753f6231c9ae22f2474f88ff4ca2c242cbd6bfb4c8d5879faa\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://08217bca1ca49f9171b5e37a6f3c9ea1406ea9aaf7e72b581149201e07e4d850\",\"dweb:/ipfs/Qmb1qSnywSiPQptYFSSb8FJY9XdSNrnkv83tDLkdeC98ju\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"claim"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"claimRewardForRelayer"},{"inputs":[{"internalType":"uint64","name":"height","type":"uint64"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"distributeRewardToRelayers"},{"inputs":[{"internalType":"bytes","name":"metadata","type":"bytes"}],"stateMutability":"payable","type":"function","name":"join"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"kill"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"leave"},{"inputs":[],"stateMutability":"payable","type":"function","name":"preFund"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"preRelease"},{"inputs":[],"stateMutability":"payable","type":"function","name":"stake"},{"inputs":[{"internalType":"struct BottomUpCheckpoint","name":"checkpoint","type":"tuple","components":[{"internalType":"struct SubnetID","name":"subnetID","type":"tuple","components":[{"internalType":"uint64","name":"root","type":"uint64"},{"internalType":"address[]","name":"route","type":"address[]"}]},{"internalType":"uint64","name":"blockHeight","type":"uint64"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"nextConfigurationNumber","type":"uint64"},{"internalType":"bytes32","name":"crossMessagesHash","type":"bytes32"}]},{"internalType":"struct CrossMsg[]","name":"messages","type":"tuple[]","components":[{"internalType":"struct StorableMsg","name":"message","type":"tuple","components":[{"internalType":"struct IPCAddress","name":"from","type":"tuple","components":[{"internalType":"struct SubnetID","name":"subnetId","type":"tuple","components":[{"internalType":"uint64","name":"root","type":"uint64"},{"internalType":"address[]","name":"route","type":"address[]"}]},{"internalType":"struct FvmAddress","name":"rawAddress","type":"tuple","components":[{"internalType":"uint8","name":"addrType","type":"uint8"},{"internalType":"bytes","name":"payload","type":"bytes"}]}]},{"internalType":"struct IPCAddress","name":"to","type":"tuple","components":[{"internalType":"struct SubnetID","name":"subnetId","type":"tuple","components":[{"internalType":"uint64","name":"root","type":"uint64"},{"internalType":"address[]","name":"route","type":"address[]"}]},{"internalType":"struct FvmAddress","name":"rawAddress","type":"tuple","components":[{"internalType":"uint8","name":"addrType","type":"uint8"},{"internalType":"bytes","name":"payload","type":"bytes"}]}]},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"bytes4","name":"method","type":"bytes4"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint256","name":"fee","type":"uint256"}]},{"internalType":"bool","name":"wrapped","type":"bool"}]},{"internalType":"address[]","name":"signatories","type":"address[]"},{"internalType":"bytes[]","name":"signatures","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"submitCheckpoint"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"unstake"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"claim()":{"notice":"Validator claims released collateral"},"claimRewardForRelayer()":{"notice":"Relayer claims a reward"},"distributeRewardToRelayers(uint64,uint256)":{"notice":"reward the relayers for processing checkpoint at height `height`. The reword includes the fixed reward for a relayer defined in the contract and `amount` of fees from the cross-messages."},"join(bytes)":{"notice":"Called by peers looking to join a subnet. It implements the basic logic to onboard new peers to the subnet."},"kill()":{"notice":"Unregister the subnet from the hierarchy, making it no longer discoverable."},"leave()":{"notice":"Called by peers looking to leave a subnet."},"preFund()":{"notice":"Method that allows to pre-fund an address in the subnet before it bootstraps."},"preRelease(uint256)":{"notice":"Method that allows to recover initial balance for an address from a subnet that hasn't bootstrapped yet."},"stake()":{"notice":"Method that allows a validator to increase their stake"},"submitCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[],address[],bytes[])":{"notice":"Executes the checkpoint if it is valid. It triggers the commitment of the checkpoint, the execution of related cross-net messages, and any other side-effects that need to be triggered by the checkpoint such as relayer reward book keeping."},"unstake(uint256)":{"notice":"Method that allows a validator to unstake their collateral from a subnet"}},"version":1}},"settings":{"remappings":["\"ds-test/=lib/forge-std/lib/ds-test/src/,forge-std/=lib/forge-std/src/,openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/,fevmate=lib/fevmate/contracts,murky/=lib/murky/src,elliptic-curve-solidity/=lib/elliptic-curve-solidity\"/","@openzeppelin/=node_modules/@openzeppelin/","ds-test/=lib/forge-std/lib/ds-test/src/","elliptic-curve-solidity/=lib/elliptic-curve-solidity/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","fevmate/=lib/fevmate/contracts/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","murky/=lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ISubnetActor.sol":"ISubnetActor"},"libraries":{},"viaIR":true},"sources":{"lib/fevmate/contracts/utils/FilAddress.sol":{"keccak256":"0x8707b4f152e92b852090c313419c0dc772eebf4428472a0659dd6b13dd6bee31","urls":["bzz-raw://442fc3cb02e610424f0599f4cc519e4fbead47da09911697b62208a2ae51e4a7","dweb:/ipfs/QmRpKJ9tWWTHgMpRB18DHJLbCT4YT9yp2G89H9mHGu5ss2"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1","urls":["bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5","dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol":{"keccak256":"0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892","urls":["bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593","dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT"],"license":"MIT"},"src/constants/Constants.sol":{"keccak256":"0xe09e20d591a8c9cabf6f2e44a90029fb3b2a8cdd6c09dc4105b81781ffb44546","urls":["bzz-raw://b3c4df8d0fd2aa770abf8b43a134ce0fc0bc3091f97ec02415d09cca09f4f940","dweb:/ipfs/QmSUpMfWLN8WWhvLmbZymCdR48ZmpsuyvBnSPeAtdorxDx"],"license":"MIT OR Apache-2.0"},"src/enums/ConsensusType.sol":{"keccak256":"0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d","urls":["bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0","dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ"],"license":"MIT OR Apache-2.0"},"src/enums/Status.sol":{"keccak256":"0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c","urls":["bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33","dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R"],"license":"MIT OR Apache-2.0"},"src/errors/IPCErrors.sol":{"keccak256":"0x15eb85fbcb6c09c5d6aded54054d8f3bee6b2e449ee94fd8a2da546d4dd573e3","urls":["bzz-raw://377d571abbec85fb7a188a9555e91be7b42c291876d2d6c4717d419377c20472","dweb:/ipfs/QmZNW2TgixFAMhr1XiHVWBJTgsoksPn3WhuLjwoC4LbSpa"],"license":"MIT OR Apache-2.0"},"src/interfaces/IGateway.sol":{"keccak256":"0x295ad8441795f9030042bda033145ef9ab3ff52bde95229ebf03bbc2fdf10f62","urls":["bzz-raw://b283e644110d5ce45e9082c73031bd431bca2b15602298105f5a65aeca6a6d0b","dweb:/ipfs/QmSM9yFvASBM5hmce19wJxEikmM7H6Dnj6AGs1GUd4RCu1"],"license":"MIT OR Apache-2.0"},"src/interfaces/ISubnetActor.sol":{"keccak256":"0x38a9c1e7dc30db637b36e87eb8b21563a0acad65beb1583431ce5b165ae45905","urls":["bzz-raw://215522a9761c5534ea7c7cbb968fd9013f7d07cb79953a689534b7bc2517f846","dweb:/ipfs/QmVkgQMKh1Mw8URtGW1ytEj817B88HtWKyh78qMD9uGskE"],"license":"MIT OR Apache-2.0"},"src/lib/AccountHelper.sol":{"keccak256":"0xd5f3c0079e3002218c63b70b43f6e018eb5d39f064b7d4321b6409c84f6a22b5","urls":["bzz-raw://e5857fe645e020bc964cd53a33e1fbd4fd9d0de405170a8251cc0b040519cbdc","dweb:/ipfs/QmaFUeVbA1mqn7dTJMqgX4DbKx6yzBrSkmeNTcaVjBJd9z"],"license":"MIT OR Apache-2.0"},"src/lib/LibGatewayActorStorage.sol":{"keccak256":"0xd90194a07b676a412c9f753a5a9c4b4e09b233878824b0308ccde8d56e39d3c9","urls":["bzz-raw://218d691a4446efbc54c27e2c4a6c936d6ed62ff0f3aa30061f6752fe5e43f357","dweb:/ipfs/QmfNZJtXmQNNKYi4r3siJ6oXvpFakFhwVooEn79sTGFT4T"],"license":"MIT OR Apache-2.0"},"src/lib/LibStaking.sol":{"keccak256":"0x17e43d88485af4f26925d224128d4afb0cb15a79ef09427c61e5e6fe267db72e","urls":["bzz-raw://0a962d09e0564002514dd83fa3de6557e82a75bb91ef4db72363317f568e1c0a","dweb:/ipfs/QmWRUGwBPaWzZpu4zPTmRkpua4CC93kFvqbqXgKL2NjiZY"],"license":"MIT OR Apache-2.0"},"src/lib/LibStakingChangeLog.sol":{"keccak256":"0xa4273910f3ad3377843e6bf386b6a6752aa635e2962effdb50657bcbb1f53583","urls":["bzz-raw://bfc0de35c4dc0ce86b7dc360a48b4ec39d68dc1f384736df2eb5181fda7e7006","dweb:/ipfs/QmW7Gm2DnmpVZdJ7gMx4vcumkG6pP7UJgBskdLtuJrSrq9"],"license":"MIT OR Apache-2.0"},"src/lib/LibSubnetActorStorage.sol":{"keccak256":"0xe11ae56d18ef43fd9ebdf9350977f9a26da4ee9a3288b46b04c5b973aa231f28","urls":["bzz-raw://f616b61fde1528a8666d09c962d7f23a82b200229691794933f39c4d3781fc1c","dweb:/ipfs/QmXQsNGv6R34wAx1fRoyMiwdtGgQVn1qDXGCr7cED92vvJ"],"license":"MIT OR Apache-2.0"},"src/lib/priority/LibMaxPQ.sol":{"keccak256":"0x2e8e8e8bcab391fee253379921ad0a1c5e5e94ae72ff5dc2a1495530767801b7","urls":["bzz-raw://25743e55c8f9107c07569523835e5618ef66df7174adf5cd2ccff5c7490d168e","dweb:/ipfs/QmeqTaiAvzYA2KzCEaEdgbt7mbdkStAHeerb3EBMCW6vLS"],"license":"MIT OR Apache-2.0"},"src/lib/priority/LibMinPQ.sol":{"keccak256":"0x535dc505b2b46450762965cc555639d2b416e6b5ccab1a71db67877114d25067","urls":["bzz-raw://ba7cc9b635965d426109c8964d435aa01fce0f633c628e15da524da59806b38f","dweb:/ipfs/QmbeuRhBNccfgx2NMM94XVgZ9Gvb9xzqm6LsWQNnGhwgEW"],"license":"MIT OR Apache-2.0"},"src/lib/priority/LibPQ.sol":{"keccak256":"0x4a4a7d00e928fb9173681a7c1f36b8204470f335a3870a48c131b83bc96390b7","urls":["bzz-raw://48444c7f7ff0bb5719b0c17ed0393d7a40d3dca32da52bbdc31e8349150c470f","dweb:/ipfs/QmRYzmRUM3W9bB2FG2J9yi12sbfJTt9fbwvyjJXrEtq4Vc"],"license":"MIT OR Apache-2.0"},"src/structs/Checkpoint.sol":{"keccak256":"0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746","urls":["bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a","dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww"],"license":"MIT OR Apache-2.0"},"src/structs/FvmAddress.sol":{"keccak256":"0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069","urls":["bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac","dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu"],"license":"MIT OR Apache-2.0"},"src/structs/Subnet.sol":{"keccak256":"0x09540d46add1f9753f6231c9ae22f2474f88ff4ca2c242cbd6bfb4c8d5879faa","urls":["bzz-raw://08217bca1ca49f9171b5e37a6f3c9ea1406ea9aaf7e72b581149201e07e4d850","dweb:/ipfs/Qmb1qSnywSiPQptYFSSb8FJY9XdSNrnkv83tDLkdeC98ju"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"src/interfaces/ISubnetActor.sol","id":39750,"exportedSymbols":{"BottomUpCheckpoint":[47303],"CrossMsg":[47325],"FvmAddress":[47349],"ISubnetActor":[39749]},"nodeType":"SourceUnit","src":"46:2078:53","nodes":[{"id":39675,"nodeType":"PragmaDirective","src":"46:23:53","nodes":[],"literals":["solidity","0.8",".19"]},{"id":39678,"nodeType":"ImportDirective","src":"71:71:53","nodes":[],"absolutePath":"src/structs/Checkpoint.sol","file":"../structs/Checkpoint.sol","nameLocation":"-1:-1:-1","scope":39750,"sourceUnit":47343,"symbolAliases":[{"foreign":{"id":39676,"name":"BottomUpCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47303,"src":"79:18:53","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":39677,"name":"CrossMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47325,"src":"99:8:53","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":39680,"nodeType":"ImportDirective","src":"143:53:53","nodes":[],"absolutePath":"src/structs/FvmAddress.sol","file":"../structs/FvmAddress.sol","nameLocation":"-1:-1:-1","scope":39750,"sourceUnit":47357,"symbolAliases":[{"foreign":{"id":39679,"name":"FvmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47349,"src":"151:10:53","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":39749,"nodeType":"ContractDefinition","src":"259:1864:53","nodes":[{"id":39687,"nodeType":"FunctionDefinition","src":"420:56:53","nodes":[],"documentation":{"id":39682,"nodeType":"StructuredDocumentation","src":"288:127:53","text":"Called by peers looking to join a subnet.\n It implements the basic logic to onboard new peers to the subnet."},"functionSelector":"6170b162","implemented":false,"kind":"function","modifiers":[],"name":"join","nameLocation":"429:4:53","parameters":{"id":39685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39684,"mutability":"mutable","name":"metadata","nameLocation":"449:8:53","nodeType":"VariableDeclaration","scope":39687,"src":"434:23:53","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":39683,"name":"bytes","nodeType":"ElementaryTypeName","src":"434:5:53","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"433:25:53"},"returnParameters":{"id":39686,"nodeType":"ParameterList","parameters":[],"src":"475:0:53"},"scope":39749,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":39691,"nodeType":"FunctionDefinition","src":"533:26:53","nodes":[],"documentation":{"id":39688,"nodeType":"StructuredDocumentation","src":"482:46:53","text":"Called by peers looking to leave a subnet."},"functionSelector":"d66d9e19","implemented":false,"kind":"function","modifiers":[],"name":"leave","nameLocation":"542:5:53","parameters":{"id":39689,"nodeType":"ParameterList","parameters":[],"src":"547:2:53"},"returnParameters":{"id":39690,"nodeType":"ParameterList","parameters":[],"src":"558:0:53"},"scope":39749,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":39695,"nodeType":"FunctionDefinition","src":"628:34:53","nodes":[],"documentation":{"id":39692,"nodeType":"StructuredDocumentation","src":"565:58:53","text":"Method that allows a validator to increase their stake"},"functionSelector":"3a4b66f1","implemented":false,"kind":"function","modifiers":[],"name":"stake","nameLocation":"637:5:53","parameters":{"id":39693,"nodeType":"ParameterList","parameters":[],"src":"642:2:53"},"returnParameters":{"id":39694,"nodeType":"ParameterList","parameters":[],"src":"661:0:53"},"scope":39749,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":39699,"nodeType":"FunctionDefinition","src":"754:36:53","nodes":[],"documentation":{"id":39696,"nodeType":"StructuredDocumentation","src":"668:81:53","text":"Method that allows to pre-fund an address in the subnet before it bootstraps."},"functionSelector":"0b7fbe60","implemented":false,"kind":"function","modifiers":[],"name":"preFund","nameLocation":"763:7:53","parameters":{"id":39697,"nodeType":"ParameterList","parameters":[],"src":"770:2:53"},"returnParameters":{"id":39698,"nodeType":"ParameterList","parameters":[],"src":"789:0:53"},"scope":39749,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":39705,"nodeType":"FunctionDefinition","src":"909:45:53","nodes":[],"documentation":{"id":39700,"nodeType":"StructuredDocumentation","src":"796:108:53","text":"Method that allows to recover initial balance for an address from a subnet that hasn't bootstrapped yet."},"functionSelector":"66783c9b","implemented":false,"kind":"function","modifiers":[],"name":"preRelease","nameLocation":"918:10:53","parameters":{"id":39703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39702,"mutability":"mutable","name":"amount","nameLocation":"937:6:53","nodeType":"VariableDeclaration","scope":39705,"src":"929:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39701,"name":"uint256","nodeType":"ElementaryTypeName","src":"929:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"928:16:53"},"returnParameters":{"id":39704,"nodeType":"ParameterList","parameters":[],"src":"953:0:53"},"scope":39749,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":39711,"nodeType":"FunctionDefinition","src":"1041:42:53","nodes":[],"documentation":{"id":39706,"nodeType":"StructuredDocumentation","src":"960:76:53","text":"Method that allows a validator to unstake their collateral from a subnet"},"functionSelector":"2e17de78","implemented":false,"kind":"function","modifiers":[],"name":"unstake","nameLocation":"1050:7:53","parameters":{"id":39709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39708,"mutability":"mutable","name":"amount","nameLocation":"1066:6:53","nodeType":"VariableDeclaration","scope":39711,"src":"1058:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1058:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1057:16:53"},"returnParameters":{"id":39710,"nodeType":"ParameterList","parameters":[],"src":"1082:0:53"},"scope":39749,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":39715,"nodeType":"FunctionDefinition","src":"1173:25:53","nodes":[],"documentation":{"id":39712,"nodeType":"StructuredDocumentation","src":"1089:79:53","text":"Unregister the subnet from the hierarchy, making it no longer discoverable."},"functionSelector":"41c0e1b5","implemented":false,"kind":"function","modifiers":[],"name":"kill","nameLocation":"1182:4:53","parameters":{"id":39713,"nodeType":"ParameterList","parameters":[],"src":"1186:2:53"},"returnParameters":{"id":39714,"nodeType":"ParameterList","parameters":[],"src":"1197:0:53"},"scope":39749,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":39719,"nodeType":"FunctionDefinition","src":"1249:26:53","nodes":[],"documentation":{"id":39716,"nodeType":"StructuredDocumentation","src":"1204:40:53","text":"Validator claims released collateral"},"functionSelector":"4e71d92d","implemented":false,"kind":"function","modifiers":[],"name":"claim","nameLocation":"1258:5:53","parameters":{"id":39717,"nodeType":"ParameterList","parameters":[],"src":"1263:2:53"},"returnParameters":{"id":39718,"nodeType":"ParameterList","parameters":[],"src":"1274:0:53"},"scope":39749,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":39723,"nodeType":"FunctionDefinition","src":"1313:42:53","nodes":[],"documentation":{"id":39720,"nodeType":"StructuredDocumentation","src":"1281:27:53","text":"Relayer claims a reward"},"functionSelector":"ed7c4da1","implemented":false,"kind":"function","modifiers":[],"name":"claimRewardForRelayer","nameLocation":"1322:21:53","parameters":{"id":39721,"nodeType":"ParameterList","parameters":[],"src":"1343:2:53"},"returnParameters":{"id":39722,"nodeType":"ParameterList","parameters":[],"src":"1354:0:53"},"scope":39749,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":39740,"nodeType":"FunctionDefinition","src":"1624:204:53","nodes":[],"documentation":{"id":39724,"nodeType":"StructuredDocumentation","src":"1361:258:53","text":"Executes the checkpoint if it is valid.\n It triggers the commitment of the checkpoint, the execution of related cross-net messages,\n and any other side-effects that need to be triggered by the checkpoint such as relayer reward book keeping."},"functionSelector":"a8284de3","implemented":false,"kind":"function","modifiers":[],"name":"submitCheckpoint","nameLocation":"1633:16:53","parameters":{"id":39738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39727,"mutability":"mutable","name":"checkpoint","nameLocation":"1687:10:53","nodeType":"VariableDeclaration","scope":39740,"src":"1659:38:53","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_BottomUpCheckpoint_$47303_calldata_ptr","typeString":"struct BottomUpCheckpoint"},"typeName":{"id":39726,"nodeType":"UserDefinedTypeName","pathNode":{"id":39725,"name":"BottomUpCheckpoint","nameLocations":["1659:18:53"],"nodeType":"IdentifierPath","referencedDeclaration":47303,"src":"1659:18:53"},"referencedDeclaration":47303,"src":"1659:18:53","typeDescriptions":{"typeIdentifier":"t_struct$_BottomUpCheckpoint_$47303_storage_ptr","typeString":"struct BottomUpCheckpoint"}},"visibility":"internal"},{"constant":false,"id":39731,"mutability":"mutable","name":"messages","nameLocation":"1727:8:53","nodeType":"VariableDeclaration","scope":39740,"src":"1707:28:53","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CrossMsg_$47325_calldata_ptr_$dyn_calldata_ptr","typeString":"struct CrossMsg[]"},"typeName":{"baseType":{"id":39729,"nodeType":"UserDefinedTypeName","pathNode":{"id":39728,"name":"CrossMsg","nameLocations":["1707:8:53"],"nodeType":"IdentifierPath","referencedDeclaration":47325,"src":"1707:8:53"},"referencedDeclaration":47325,"src":"1707:8:53","typeDescriptions":{"typeIdentifier":"t_struct$_CrossMsg_$47325_storage_ptr","typeString":"struct CrossMsg"}},"id":39730,"nodeType":"ArrayTypeName","src":"1707:10:53","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_CrossMsg_$47325_storage_$dyn_storage_ptr","typeString":"struct CrossMsg[]"}},"visibility":"internal"},{"constant":false,"id":39734,"mutability":"mutable","name":"signatories","nameLocation":"1764:11:53","nodeType":"VariableDeclaration","scope":39740,"src":"1745:30:53","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":39732,"name":"address","nodeType":"ElementaryTypeName","src":"1745:7:53","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":39733,"nodeType":"ArrayTypeName","src":"1745:9:53","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":39737,"mutability":"mutable","name":"signatures","nameLocation":"1802:10:53","nodeType":"VariableDeclaration","scope":39740,"src":"1785:27:53","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":39735,"name":"bytes","nodeType":"ElementaryTypeName","src":"1785:5:53","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":39736,"nodeType":"ArrayTypeName","src":"1785:7:53","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1649:169:53"},"returnParameters":{"id":39739,"nodeType":"ParameterList","parameters":[],"src":"1827:0:53"},"scope":39749,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":39748,"nodeType":"FunctionDefinition","src":"2037:84:53","nodes":[],"documentation":{"id":39741,"nodeType":"StructuredDocumentation","src":"1834:198:53","text":"reward the relayers for processing checkpoint at height `height`.\n The reword includes the fixed reward for a relayer defined in the contract and `amount` of fees from the cross-messages."},"functionSelector":"f9002bb1","implemented":false,"kind":"function","modifiers":[],"name":"distributeRewardToRelayers","nameLocation":"2046:26:53","parameters":{"id":39746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39743,"mutability":"mutable","name":"height","nameLocation":"2080:6:53","nodeType":"VariableDeclaration","scope":39748,"src":"2073:13:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":39742,"name":"uint64","nodeType":"ElementaryTypeName","src":"2073:6:53","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":39745,"mutability":"mutable","name":"amount","nameLocation":"2096:6:53","nodeType":"VariableDeclaration","scope":39748,"src":"2088:14:53","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39744,"name":"uint256","nodeType":"ElementaryTypeName","src":"2088:7:53","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2072:31:53"},"returnParameters":{"id":39747,"nodeType":"ParameterList","parameters":[],"src":"2120:0:53"},"scope":39749,"stateMutability":"payable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"ISubnetActor","contractDependencies":[],"contractKind":"interface","documentation":{"id":39681,"nodeType":"StructuredDocumentation","src":"198:61:53","text":"@title Subnet Actor interface\n @author LimeChain team"},"fullyImplemented":false,"linearizedBaseContracts":[39749],"name":"ISubnetActor","nameLocation":"269:12:53","scope":39750,"usedErrors":[]}],"license":"MIT OR Apache-2.0"},"id":53}