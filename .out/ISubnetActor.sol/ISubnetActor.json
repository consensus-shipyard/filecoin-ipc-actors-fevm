{"abi":[{"type":"function","name":"claim","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimRewardForRelayer","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"distributeRewardToRelayers","inputs":[{"name":"height","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"kind","type":"uint8","internalType":"enum QuorumObjKind"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"join","inputs":[{"name":"metadata","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"kill","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"leave","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"preFund","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"preRelease","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stake","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"submitCheckpoint","inputs":[{"name":"checkpoint","type":"tuple","internalType":"struct BottomUpCheckpoint","components":[{"name":"subnetID","type":"tuple","internalType":"struct SubnetID","components":[{"name":"root","type":"uint64","internalType":"uint64"},{"name":"route","type":"address[]","internalType":"address[]"}]},{"name":"blockHeight","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"nextConfigurationNumber","type":"uint64","internalType":"uint64"}]},{"name":"signatories","type":"address[]","internalType":"address[]"},{"name":"signatures","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unstake","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claim()":"4e71d92d","claimRewardForRelayer()":"ed7c4da1","distributeRewardToRelayers(uint256,uint256,uint8)":"4c860af6","join(bytes)":"6170b162","kill()":"41c0e1b5","leave()":"d66d9e19","preFund()":"0b7fbe60","preRelease(uint256)":"66783c9b","stake()":"3a4b66f1","submitCheckpoint(((uint64,address[]),uint256,bytes32,uint64),address[],bytes[])":"b9ee2bb9","unstake(uint256)":"2e17de78"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewardForRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum QuorumObjKind\",\"name\":\"kind\",\"type\":\"uint8\"}],\"name\":\"distributeRewardToRelayers\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preFund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"preRelease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"signatories\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"submitCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LimeChain team\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Subnet Actor interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim()\":{\"notice\":\"Validator claims released collateral\"},\"claimRewardForRelayer()\":{\"notice\":\"Relayer claims a reward\"},\"distributeRewardToRelayers(uint256,uint256,uint8)\":{\"notice\":\"reward the relayers for processing checkpoint at height `height`. The reword includes the fixed reward for a relayer defined in the contract and `amount` of fees from the cross-messages.\"},\"join(bytes)\":{\"notice\":\"Called by peers looking to join a subnet. It implements the basic logic to onboard new peers to the subnet.\"},\"kill()\":{\"notice\":\"Unregister the subnet from the hierarchy, making it no longer discoverable.\"},\"leave()\":{\"notice\":\"Called by peers looking to leave a subnet.\"},\"preFund()\":{\"notice\":\"Method that allows to pre-fund an address in the subnet before it bootstraps.\"},\"preRelease(uint256)\":{\"notice\":\"Method that allows to recover initial balance for an address from a subnet that hasn't bootstrapped yet.\"},\"stake()\":{\"notice\":\"Method that allows a validator to increase their stake\"},\"submitCheckpoint(((uint64,address[]),uint256,bytes32,uint64),address[],bytes[])\":{\"notice\":\"Executes the checkpoint if it is valid. It triggers the commitment of the checkpoint, the execution of related cross-net messages, and any other side-effects that need to be triggered by the checkpoint such as relayer reward book keeping.\"},\"unstake(uint256)\":{\"notice\":\"Method that allows a validator to unstake their collateral from a subnet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISubnetActor.sol\":\"ISubnetActor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":\\\"ds-test/=lib/forge-std/lib/ds-test/src/,forge-std/=lib/forge-std/src/,openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/,fevmate=lib/fevmate/contracts,murky/=lib/murky/src,elliptic-curve-solidity/=lib/elliptic-curve-solidity\\\"/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5\",\"dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593\",\"dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT\"]},\"src/enums/ConsensusType.sol\":{\"keccak256\":\"0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0\",\"dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ\"]},\"src/enums/Status.sol\":{\"keccak256\":\"0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33\",\"dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R\"]},\"src/errors/IPCErrors.sol\":{\"keccak256\":\"0x42d57f2c4c9d2fc1ff572525ba9e0bea5e8ae2c54758acd103684b7885e95789\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://be7d7b627926d5be61cfdd6f8382a7022054f1c6224e472f3370e436f30ac46b\",\"dweb:/ipfs/QmYZyWXvYePY6bTXB1odbRH4jkWfRogNm7ALDJQgQ8uUME\"]},\"src/interfaces/IGateway.sol\":{\"keccak256\":\"0xc8fd2acf790a348d9b1a230c6fb4756286cb816d3fde668030a632ff9dc4fa74\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f42023a8d891b6cf51802ea25f79a90c246f3aa1f1937da063ecd65350365597\",\"dweb:/ipfs/QmacYPmXewCSZZMzuqhdxw22iCjizj6NC6Uz19yxC9ivZ9\"]},\"src/interfaces/ISubnetActor.sol\":{\"keccak256\":\"0x305b08abcf2049f1501773bc8c4002d71dc7cd94db897410be94a97dcea45693\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://ecff3142a53e538f5c8d1b85fc2d20b4878379aa6088e561c4b56eb1c962eb3e\",\"dweb:/ipfs/QmeQ6jicfWknod5N3Sh4BtUzW2qnGWhi7wELdghv8SHbS4\"]},\"src/lib/LibStaking.sol\":{\"keccak256\":\"0x2ca90d9213b49033ff11524ca8f69d5ea4b6adf455dfc061be61da34c71ff1f9\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d1c93278180ef7a8c64dfb41c8246a2861c1ee0e8b254484d1359ef53f4211ce\",\"dweb:/ipfs/QmTg21GffvzgY93kk6JFCDXQhQyCQcUo2BrL18AuNznqw9\"]},\"src/lib/LibStakingChangeLog.sol\":{\"keccak256\":\"0xa4273910f3ad3377843e6bf386b6a6752aa635e2962effdb50657bcbb1f53583\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://bfc0de35c4dc0ce86b7dc360a48b4ec39d68dc1f384736df2eb5181fda7e7006\",\"dweb:/ipfs/QmW7Gm2DnmpVZdJ7gMx4vcumkG6pP7UJgBskdLtuJrSrq9\"]},\"src/lib/LibSubnetActorStorage.sol\":{\"keccak256\":\"0x96c45f1d488da0ca7e9ef51aa717528516e1e6dac9294c1c14190ce345bee80f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://700ace2b8d7f7f9ad215f05518e279ca9197ddb0cbea64d7e0fb480909de8f24\",\"dweb:/ipfs/QmfNUdSJ24aypQ8vCgiCQfT3C6c3qGwVCXsw7pcU98UY1m\"]},\"src/lib/priority/LibMaxPQ.sol\":{\"keccak256\":\"0x4a975f61e5dc814ffceb6cedf56ee69a090d28a688f3c1ffcf25b394a6d40cdc\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://31f713c852ab92e6d1447fac4d70202f5b74049490be35d79ac7b081dd49e747\",\"dweb:/ipfs/QmaM99kHzHMuYoYtMdWmUbeqmpUNqmBZtRz72dpNyFhYyx\"]},\"src/lib/priority/LibMinPQ.sol\":{\"keccak256\":\"0x532b4dc7c4b3c9bfc37258dad0a36d141a9cd4621d0382f2f1a84e7f9fb6224d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://22f582177c7c48c3493d06be3d2122f87278b54d7d94817c37e6e2a39035d5be\",\"dweb:/ipfs/QmRbViZs6jLNDtKKGP3W79o7vncY58eiC7q2m7qiuruGkd\"]},\"src/lib/priority/LibPQ.sol\":{\"keccak256\":\"0xc580f2c0bcdb3e38d5a7cc6e44e14c970b98385306594b37aa7689af8c7b4d09\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e2d85012263be8c7fe1c692405772cd9082422deb95d558ce02d8153b73281f0\",\"dweb:/ipfs/QmdK8Ewm7SvBUhirDPuKx6xJjUmpAohazMMsjTgqWNLm8t\"]},\"src/structs/CrossNet.sol\":{\"keccak256\":\"0x2f31aed333d0054f71f334210564500ad01ce7657547e91d0be8729d283de8f0\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e3c44a855376c23a24d333e836f3e4706a2d7f71ed27879d7cddb73cd887c365\",\"dweb:/ipfs/QmNWikYwYVurXEkeVoTw4Jc6EeMRfpHtUcePDvsEMa7MLK\"]},\"src/structs/FvmAddress.sol\":{\"keccak256\":\"0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac\",\"dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu\"]},\"src/structs/Quorum.sol\":{\"keccak256\":\"0xb2d47c0e5d9628c4d6ebcb2b83b2997bb9d3aa458225d0fd7bb33c54b0c054ed\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://e1b4f5847bb88b17052846c3bb21eb4845ed539818e5fa82e941a65255f86ff9\",\"dweb:/ipfs/QmTmJKooGViXmSHxEoNkSxLjAEGDpvj3ESJfun7UvsvqW4\"]},\"src/structs/Subnet.sol\":{\"keccak256\":\"0xf65769ad58c87bade5267519e25ac75610e28f0d0b04a0fa21b0ee912ae3e8f1\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f5b144f445e486ca1e58b70f9b209735606d6a25ac40c9b46c77b2c318bcdecb\",\"dweb:/ipfs/QmPJdvGvNZ8zR4M9z9qysVttuUuC5GcfT7vpj5qHFyjGnm\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"claim"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"claimRewardForRelayer"},{"inputs":[{"internalType":"uint256","name":"height","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"enum QuorumObjKind","name":"kind","type":"uint8"}],"stateMutability":"payable","type":"function","name":"distributeRewardToRelayers"},{"inputs":[{"internalType":"bytes","name":"metadata","type":"bytes"}],"stateMutability":"payable","type":"function","name":"join"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"kill"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"leave"},{"inputs":[],"stateMutability":"payable","type":"function","name":"preFund"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"preRelease"},{"inputs":[],"stateMutability":"payable","type":"function","name":"stake"},{"inputs":[{"internalType":"struct BottomUpCheckpoint","name":"checkpoint","type":"tuple","components":[{"internalType":"struct SubnetID","name":"subnetID","type":"tuple","components":[{"internalType":"uint64","name":"root","type":"uint64"},{"internalType":"address[]","name":"route","type":"address[]"}]},{"internalType":"uint256","name":"blockHeight","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"nextConfigurationNumber","type":"uint64"}]},{"internalType":"address[]","name":"signatories","type":"address[]"},{"internalType":"bytes[]","name":"signatures","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"submitCheckpoint"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"unstake"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"claim()":{"notice":"Validator claims released collateral"},"claimRewardForRelayer()":{"notice":"Relayer claims a reward"},"distributeRewardToRelayers(uint256,uint256,uint8)":{"notice":"reward the relayers for processing checkpoint at height `height`. The reword includes the fixed reward for a relayer defined in the contract and `amount` of fees from the cross-messages."},"join(bytes)":{"notice":"Called by peers looking to join a subnet. It implements the basic logic to onboard new peers to the subnet."},"kill()":{"notice":"Unregister the subnet from the hierarchy, making it no longer discoverable."},"leave()":{"notice":"Called by peers looking to leave a subnet."},"preFund()":{"notice":"Method that allows to pre-fund an address in the subnet before it bootstraps."},"preRelease(uint256)":{"notice":"Method that allows to recover initial balance for an address from a subnet that hasn't bootstrapped yet."},"stake()":{"notice":"Method that allows a validator to increase their stake"},"submitCheckpoint(((uint64,address[]),uint256,bytes32,uint64),address[],bytes[])":{"notice":"Executes the checkpoint if it is valid. It triggers the commitment of the checkpoint, the execution of related cross-net messages, and any other side-effects that need to be triggered by the checkpoint such as relayer reward book keeping."},"unstake(uint256)":{"notice":"Method that allows a validator to unstake their collateral from a subnet"}},"version":1}},"settings":{"remappings":["\"ds-test/=lib/forge-std/lib/ds-test/src/,forge-std/=lib/forge-std/src/,openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/,fevmate=lib/fevmate/contracts,murky/=lib/murky/src,elliptic-curve-solidity/=lib/elliptic-curve-solidity\"/","ds-test/=lib/forge-std/lib/ds-test/src/","elliptic-curve-solidity/=lib/elliptic-curve-solidity/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","fevmate/=lib/fevmate/contracts/","forge-std/=lib/forge-std/src/","murky/=lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ISubnetActor.sol":"ISubnetActor"},"libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1","urls":["bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5","dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol":{"keccak256":"0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892","urls":["bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593","dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT"],"license":"MIT"},"src/enums/ConsensusType.sol":{"keccak256":"0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d","urls":["bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0","dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ"],"license":"MIT OR Apache-2.0"},"src/enums/Status.sol":{"keccak256":"0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c","urls":["bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33","dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R"],"license":"MIT OR Apache-2.0"},"src/errors/IPCErrors.sol":{"keccak256":"0x42d57f2c4c9d2fc1ff572525ba9e0bea5e8ae2c54758acd103684b7885e95789","urls":["bzz-raw://be7d7b627926d5be61cfdd6f8382a7022054f1c6224e472f3370e436f30ac46b","dweb:/ipfs/QmYZyWXvYePY6bTXB1odbRH4jkWfRogNm7ALDJQgQ8uUME"],"license":"MIT OR Apache-2.0"},"src/interfaces/IGateway.sol":{"keccak256":"0xc8fd2acf790a348d9b1a230c6fb4756286cb816d3fde668030a632ff9dc4fa74","urls":["bzz-raw://f42023a8d891b6cf51802ea25f79a90c246f3aa1f1937da063ecd65350365597","dweb:/ipfs/QmacYPmXewCSZZMzuqhdxw22iCjizj6NC6Uz19yxC9ivZ9"],"license":"MIT OR Apache-2.0"},"src/interfaces/ISubnetActor.sol":{"keccak256":"0x305b08abcf2049f1501773bc8c4002d71dc7cd94db897410be94a97dcea45693","urls":["bzz-raw://ecff3142a53e538f5c8d1b85fc2d20b4878379aa6088e561c4b56eb1c962eb3e","dweb:/ipfs/QmeQ6jicfWknod5N3Sh4BtUzW2qnGWhi7wELdghv8SHbS4"],"license":"MIT OR Apache-2.0"},"src/lib/LibStaking.sol":{"keccak256":"0x2ca90d9213b49033ff11524ca8f69d5ea4b6adf455dfc061be61da34c71ff1f9","urls":["bzz-raw://d1c93278180ef7a8c64dfb41c8246a2861c1ee0e8b254484d1359ef53f4211ce","dweb:/ipfs/QmTg21GffvzgY93kk6JFCDXQhQyCQcUo2BrL18AuNznqw9"],"license":"MIT OR Apache-2.0"},"src/lib/LibStakingChangeLog.sol":{"keccak256":"0xa4273910f3ad3377843e6bf386b6a6752aa635e2962effdb50657bcbb1f53583","urls":["bzz-raw://bfc0de35c4dc0ce86b7dc360a48b4ec39d68dc1f384736df2eb5181fda7e7006","dweb:/ipfs/QmW7Gm2DnmpVZdJ7gMx4vcumkG6pP7UJgBskdLtuJrSrq9"],"license":"MIT OR Apache-2.0"},"src/lib/LibSubnetActorStorage.sol":{"keccak256":"0x96c45f1d488da0ca7e9ef51aa717528516e1e6dac9294c1c14190ce345bee80f","urls":["bzz-raw://700ace2b8d7f7f9ad215f05518e279ca9197ddb0cbea64d7e0fb480909de8f24","dweb:/ipfs/QmfNUdSJ24aypQ8vCgiCQfT3C6c3qGwVCXsw7pcU98UY1m"],"license":"MIT OR Apache-2.0"},"src/lib/priority/LibMaxPQ.sol":{"keccak256":"0x4a975f61e5dc814ffceb6cedf56ee69a090d28a688f3c1ffcf25b394a6d40cdc","urls":["bzz-raw://31f713c852ab92e6d1447fac4d70202f5b74049490be35d79ac7b081dd49e747","dweb:/ipfs/QmaM99kHzHMuYoYtMdWmUbeqmpUNqmBZtRz72dpNyFhYyx"],"license":"MIT OR Apache-2.0"},"src/lib/priority/LibMinPQ.sol":{"keccak256":"0x532b4dc7c4b3c9bfc37258dad0a36d141a9cd4621d0382f2f1a84e7f9fb6224d","urls":["bzz-raw://22f582177c7c48c3493d06be3d2122f87278b54d7d94817c37e6e2a39035d5be","dweb:/ipfs/QmRbViZs6jLNDtKKGP3W79o7vncY58eiC7q2m7qiuruGkd"],"license":"MIT OR Apache-2.0"},"src/lib/priority/LibPQ.sol":{"keccak256":"0xc580f2c0bcdb3e38d5a7cc6e44e14c970b98385306594b37aa7689af8c7b4d09","urls":["bzz-raw://e2d85012263be8c7fe1c692405772cd9082422deb95d558ce02d8153b73281f0","dweb:/ipfs/QmdK8Ewm7SvBUhirDPuKx6xJjUmpAohazMMsjTgqWNLm8t"],"license":"MIT OR Apache-2.0"},"src/structs/CrossNet.sol":{"keccak256":"0x2f31aed333d0054f71f334210564500ad01ce7657547e91d0be8729d283de8f0","urls":["bzz-raw://e3c44a855376c23a24d333e836f3e4706a2d7f71ed27879d7cddb73cd887c365","dweb:/ipfs/QmNWikYwYVurXEkeVoTw4Jc6EeMRfpHtUcePDvsEMa7MLK"],"license":"MIT OR Apache-2.0"},"src/structs/FvmAddress.sol":{"keccak256":"0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069","urls":["bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac","dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu"],"license":"MIT OR Apache-2.0"},"src/structs/Quorum.sol":{"keccak256":"0xb2d47c0e5d9628c4d6ebcb2b83b2997bb9d3aa458225d0fd7bb33c54b0c054ed","urls":["bzz-raw://e1b4f5847bb88b17052846c3bb21eb4845ed539818e5fa82e941a65255f86ff9","dweb:/ipfs/QmTmJKooGViXmSHxEoNkSxLjAEGDpvj3ESJfun7UvsvqW4"],"license":"MIT OR Apache-2.0"},"src/structs/Subnet.sol":{"keccak256":"0xf65769ad58c87bade5267519e25ac75610e28f0d0b04a0fa21b0ee912ae3e8f1","urls":["bzz-raw://f5b144f445e486ca1e58b70f9b209735606d6a25ac40c9b46c77b2c318bcdecb","dweb:/ipfs/QmPJdvGvNZ8zR4M9z9qysVttuUuC5GcfT7vpj5qHFyjGnm"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"src/interfaces/ISubnetActor.sol","id":40620,"exportedSymbols":{"BottomUpCheckpoint":[49398],"ISubnetActor":[40619],"QuorumObjKind":[49478]},"nodeType":"SourceUnit","src":"46:2048:56","nodes":[{"id":40547,"nodeType":"PragmaDirective","src":"46:23:56","nodes":[],"literals":["solidity","0.8",".19"]},{"id":40549,"nodeType":"ImportDirective","src":"71:59:56","nodes":[],"absolutePath":"src/structs/CrossNet.sol","file":"../structs/CrossNet.sol","nameLocation":"-1:-1:-1","scope":40620,"sourceUnit":49458,"symbolAliases":[{"foreign":{"id":40548,"name":"BottomUpCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49398,"src":"79:18:56","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":40551,"nodeType":"ImportDirective","src":"131:52:56","nodes":[],"absolutePath":"src/structs/Quorum.sol","file":"../structs/Quorum.sol","nameLocation":"-1:-1:-1","scope":40620,"sourceUnit":49526,"symbolAliases":[{"foreign":{"id":40550,"name":"QuorumObjKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49478,"src":"139:13:56","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":40619,"nodeType":"ContractDefinition","src":"246:1847:56","nodes":[{"id":40558,"nodeType":"FunctionDefinition","src":"407:56:56","nodes":[],"documentation":{"id":40553,"nodeType":"StructuredDocumentation","src":"275:127:56","text":"Called by peers looking to join a subnet.\n It implements the basic logic to onboard new peers to the subnet."},"functionSelector":"6170b162","implemented":false,"kind":"function","modifiers":[],"name":"join","nameLocation":"416:4:56","parameters":{"id":40556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40555,"mutability":"mutable","name":"metadata","nameLocation":"436:8:56","nodeType":"VariableDeclaration","scope":40558,"src":"421:23:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40554,"name":"bytes","nodeType":"ElementaryTypeName","src":"421:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"420:25:56"},"returnParameters":{"id":40557,"nodeType":"ParameterList","parameters":[],"src":"462:0:56"},"scope":40619,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":40562,"nodeType":"FunctionDefinition","src":"520:26:56","nodes":[],"documentation":{"id":40559,"nodeType":"StructuredDocumentation","src":"469:46:56","text":"Called by peers looking to leave a subnet."},"functionSelector":"d66d9e19","implemented":false,"kind":"function","modifiers":[],"name":"leave","nameLocation":"529:5:56","parameters":{"id":40560,"nodeType":"ParameterList","parameters":[],"src":"534:2:56"},"returnParameters":{"id":40561,"nodeType":"ParameterList","parameters":[],"src":"545:0:56"},"scope":40619,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40566,"nodeType":"FunctionDefinition","src":"615:34:56","nodes":[],"documentation":{"id":40563,"nodeType":"StructuredDocumentation","src":"552:58:56","text":"Method that allows a validator to increase their stake"},"functionSelector":"3a4b66f1","implemented":false,"kind":"function","modifiers":[],"name":"stake","nameLocation":"624:5:56","parameters":{"id":40564,"nodeType":"ParameterList","parameters":[],"src":"629:2:56"},"returnParameters":{"id":40565,"nodeType":"ParameterList","parameters":[],"src":"648:0:56"},"scope":40619,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":40570,"nodeType":"FunctionDefinition","src":"741:36:56","nodes":[],"documentation":{"id":40567,"nodeType":"StructuredDocumentation","src":"655:81:56","text":"Method that allows to pre-fund an address in the subnet before it bootstraps."},"functionSelector":"0b7fbe60","implemented":false,"kind":"function","modifiers":[],"name":"preFund","nameLocation":"750:7:56","parameters":{"id":40568,"nodeType":"ParameterList","parameters":[],"src":"757:2:56"},"returnParameters":{"id":40569,"nodeType":"ParameterList","parameters":[],"src":"776:0:56"},"scope":40619,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":40576,"nodeType":"FunctionDefinition","src":"896:45:56","nodes":[],"documentation":{"id":40571,"nodeType":"StructuredDocumentation","src":"783:108:56","text":"Method that allows to recover initial balance for an address from a subnet that hasn't bootstrapped yet."},"functionSelector":"66783c9b","implemented":false,"kind":"function","modifiers":[],"name":"preRelease","nameLocation":"905:10:56","parameters":{"id":40574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40573,"mutability":"mutable","name":"amount","nameLocation":"924:6:56","nodeType":"VariableDeclaration","scope":40576,"src":"916:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40572,"name":"uint256","nodeType":"ElementaryTypeName","src":"916:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"915:16:56"},"returnParameters":{"id":40575,"nodeType":"ParameterList","parameters":[],"src":"940:0:56"},"scope":40619,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40582,"nodeType":"FunctionDefinition","src":"1028:42:56","nodes":[],"documentation":{"id":40577,"nodeType":"StructuredDocumentation","src":"947:76:56","text":"Method that allows a validator to unstake their collateral from a subnet"},"functionSelector":"2e17de78","implemented":false,"kind":"function","modifiers":[],"name":"unstake","nameLocation":"1037:7:56","parameters":{"id":40580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40579,"mutability":"mutable","name":"amount","nameLocation":"1053:6:56","nodeType":"VariableDeclaration","scope":40582,"src":"1045:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1045:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1044:16:56"},"returnParameters":{"id":40581,"nodeType":"ParameterList","parameters":[],"src":"1069:0:56"},"scope":40619,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40586,"nodeType":"FunctionDefinition","src":"1160:25:56","nodes":[],"documentation":{"id":40583,"nodeType":"StructuredDocumentation","src":"1076:79:56","text":"Unregister the subnet from the hierarchy, making it no longer discoverable."},"functionSelector":"41c0e1b5","implemented":false,"kind":"function","modifiers":[],"name":"kill","nameLocation":"1169:4:56","parameters":{"id":40584,"nodeType":"ParameterList","parameters":[],"src":"1173:2:56"},"returnParameters":{"id":40585,"nodeType":"ParameterList","parameters":[],"src":"1184:0:56"},"scope":40619,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40590,"nodeType":"FunctionDefinition","src":"1236:26:56","nodes":[],"documentation":{"id":40587,"nodeType":"StructuredDocumentation","src":"1191:40:56","text":"Validator claims released collateral"},"functionSelector":"4e71d92d","implemented":false,"kind":"function","modifiers":[],"name":"claim","nameLocation":"1245:5:56","parameters":{"id":40588,"nodeType":"ParameterList","parameters":[],"src":"1250:2:56"},"returnParameters":{"id":40589,"nodeType":"ParameterList","parameters":[],"src":"1261:0:56"},"scope":40619,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40594,"nodeType":"FunctionDefinition","src":"1300:42:56","nodes":[],"documentation":{"id":40591,"nodeType":"StructuredDocumentation","src":"1268:27:56","text":"Relayer claims a reward"},"functionSelector":"ed7c4da1","implemented":false,"kind":"function","modifiers":[],"name":"claimRewardForRelayer","nameLocation":"1309:21:56","parameters":{"id":40592,"nodeType":"ParameterList","parameters":[],"src":"1330:2:56"},"returnParameters":{"id":40593,"nodeType":"ParameterList","parameters":[],"src":"1341:0:56"},"scope":40619,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40607,"nodeType":"FunctionDefinition","src":"1611:166:56","nodes":[],"documentation":{"id":40595,"nodeType":"StructuredDocumentation","src":"1348:258:56","text":"Executes the checkpoint if it is valid.\n It triggers the commitment of the checkpoint, the execution of related cross-net messages,\n and any other side-effects that need to be triggered by the checkpoint such as relayer reward book keeping."},"functionSelector":"b9ee2bb9","implemented":false,"kind":"function","modifiers":[],"name":"submitCheckpoint","nameLocation":"1620:16:56","parameters":{"id":40605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40598,"mutability":"mutable","name":"checkpoint","nameLocation":"1674:10:56","nodeType":"VariableDeclaration","scope":40607,"src":"1646:38:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_BottomUpCheckpoint_$49398_calldata_ptr","typeString":"struct BottomUpCheckpoint"},"typeName":{"id":40597,"nodeType":"UserDefinedTypeName","pathNode":{"id":40596,"name":"BottomUpCheckpoint","nameLocations":["1646:18:56"],"nodeType":"IdentifierPath","referencedDeclaration":49398,"src":"1646:18:56"},"referencedDeclaration":49398,"src":"1646:18:56","typeDescriptions":{"typeIdentifier":"t_struct$_BottomUpCheckpoint_$49398_storage_ptr","typeString":"struct BottomUpCheckpoint"}},"visibility":"internal"},{"constant":false,"id":40601,"mutability":"mutable","name":"signatories","nameLocation":"1713:11:56","nodeType":"VariableDeclaration","scope":40607,"src":"1694:30:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":40599,"name":"address","nodeType":"ElementaryTypeName","src":"1694:7:56","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":40600,"nodeType":"ArrayTypeName","src":"1694:9:56","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":40604,"mutability":"mutable","name":"signatures","nameLocation":"1751:10:56","nodeType":"VariableDeclaration","scope":40607,"src":"1734:27:56","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":40602,"name":"bytes","nodeType":"ElementaryTypeName","src":"1734:5:56","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":40603,"nodeType":"ArrayTypeName","src":"1734:7:56","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1636:131:56"},"returnParameters":{"id":40606,"nodeType":"ParameterList","parameters":[],"src":"1776:0:56"},"scope":40619,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":40618,"nodeType":"FunctionDefinition","src":"1986:105:56","nodes":[],"documentation":{"id":40608,"nodeType":"StructuredDocumentation","src":"1783:198:56","text":"reward the relayers for processing checkpoint at height `height`.\n The reword includes the fixed reward for a relayer defined in the contract and `amount` of fees from the cross-messages."},"functionSelector":"4c860af6","implemented":false,"kind":"function","modifiers":[],"name":"distributeRewardToRelayers","nameLocation":"1995:26:56","parameters":{"id":40616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40610,"mutability":"mutable","name":"height","nameLocation":"2030:6:56","nodeType":"VariableDeclaration","scope":40618,"src":"2022:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2022:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40612,"mutability":"mutable","name":"amount","nameLocation":"2046:6:56","nodeType":"VariableDeclaration","scope":40618,"src":"2038:14:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40611,"name":"uint256","nodeType":"ElementaryTypeName","src":"2038:7:56","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40615,"mutability":"mutable","name":"kind","nameLocation":"2068:4:56","nodeType":"VariableDeclaration","scope":40618,"src":"2054:18:56","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_QuorumObjKind_$49478","typeString":"enum QuorumObjKind"},"typeName":{"id":40614,"nodeType":"UserDefinedTypeName","pathNode":{"id":40613,"name":"QuorumObjKind","nameLocations":["2054:13:56"],"nodeType":"IdentifierPath","referencedDeclaration":49478,"src":"2054:13:56"},"referencedDeclaration":49478,"src":"2054:13:56","typeDescriptions":{"typeIdentifier":"t_enum$_QuorumObjKind_$49478","typeString":"enum QuorumObjKind"}},"visibility":"internal"}],"src":"2021:52:56"},"returnParameters":{"id":40617,"nodeType":"ParameterList","parameters":[],"src":"2090:0:56"},"scope":40619,"stateMutability":"payable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"ISubnetActor","contractDependencies":[],"contractKind":"interface","documentation":{"id":40552,"nodeType":"StructuredDocumentation","src":"185:61:56","text":"@title Subnet Actor interface\n @author LimeChain team"},"fullyImplemented":false,"linearizedBaseContracts":[40619],"name":"ISubnetActor","nameLocation":"256:12:56","scope":40620,"usedErrors":[]}],"license":"MIT OR Apache-2.0"},"id":56}