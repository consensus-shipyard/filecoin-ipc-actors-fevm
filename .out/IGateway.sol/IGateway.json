{
    "abi": [
        {
            "type": "function",
            "name": "addStake",
            "inputs": [],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "commitBottomUpCheckpoint",
            "inputs": [
                {
                    "name": "bottomUpCheckpoint",
                    "type": "tuple",
                    "internalType": "struct BottomUpCheckpoint",
                    "components": [
                        {
                            "name": "subnetID",
                            "type": "tuple",
                            "internalType": "struct SubnetID",
                            "components": [
                                {
                                    "name": "root",
                                    "type": "uint64",
                                    "internalType": "uint64"
                                },
                                {
                                    "name": "route",
                                    "type": "address[]",
                                    "internalType": "address[]"
                                }
                            ]
                        },
                        {
                            "name": "blockHeight",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "blockHash",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "nextConfigurationNumber",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "crossMessagesHash",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "messages",
                    "type": "tuple[]",
                    "internalType": "struct CrossMsg[]",
                    "components": [
                        {
                            "name": "message",
                            "type": "tuple",
                            "internalType": "struct StorableMsg",
                            "components": [
                                {
                                    "name": "from",
                                    "type": "tuple",
                                    "internalType": "struct IPCAddress",
                                    "components": [
                                        {
                                            "name": "subnetId",
                                            "type": "tuple",
                                            "internalType": "struct SubnetID",
                                            "components": [
                                                {
                                                    "name": "root",
                                                    "type": "uint64",
                                                    "internalType": "uint64"
                                                },
                                                {
                                                    "name": "route",
                                                    "type": "address[]",
                                                    "internalType": "address[]"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "rawAddress",
                                            "type": "tuple",
                                            "internalType": "struct FvmAddress",
                                            "components": [
                                                {
                                                    "name": "addrType",
                                                    "type": "uint8",
                                                    "internalType": "uint8"
                                                },
                                                {
                                                    "name": "payload",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "to",
                                    "type": "tuple",
                                    "internalType": "struct IPCAddress",
                                    "components": [
                                        {
                                            "name": "subnetId",
                                            "type": "tuple",
                                            "internalType": "struct SubnetID",
                                            "components": [
                                                {
                                                    "name": "root",
                                                    "type": "uint64",
                                                    "internalType": "uint64"
                                                },
                                                {
                                                    "name": "route",
                                                    "type": "address[]",
                                                    "internalType": "address[]"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "rawAddress",
                                            "type": "tuple",
                                            "internalType": "struct FvmAddress",
                                            "components": [
                                                {
                                                    "name": "addrType",
                                                    "type": "uint8",
                                                    "internalType": "uint8"
                                                },
                                                {
                                                    "name": "payload",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "value",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                },
                                {
                                    "name": "nonce",
                                    "type": "uint64",
                                    "internalType": "uint64"
                                },
                                {
                                    "name": "method",
                                    "type": "bytes4",
                                    "internalType": "bytes4"
                                },
                                {
                                    "name": "params",
                                    "type": "bytes",
                                    "internalType": "bytes"
                                },
                                {
                                    "name": "fee",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                }
                            ]
                        },
                        {
                            "name": "wrapped",
                            "type": "bool",
                            "internalType": "bool"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "commitParentFinality",
            "inputs": [
                {
                    "name": "finality",
                    "type": "tuple",
                    "internalType": "struct ParentFinality",
                    "components": [
                        {
                            "name": "height",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "blockHash",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "createBottomUpCheckpoint",
            "inputs": [
                {
                    "name": "checkpoint",
                    "type": "tuple",
                    "internalType": "struct BottomUpCheckpoint",
                    "components": [
                        {
                            "name": "subnetID",
                            "type": "tuple",
                            "internalType": "struct SubnetID",
                            "components": [
                                {
                                    "name": "root",
                                    "type": "uint64",
                                    "internalType": "uint64"
                                },
                                {
                                    "name": "route",
                                    "type": "address[]",
                                    "internalType": "address[]"
                                }
                            ]
                        },
                        {
                            "name": "blockHeight",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "blockHash",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "nextConfigurationNumber",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "crossMessagesHash",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        }
                    ]
                },
                {
                    "name": "membershipRootHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "membershipWeight",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "fund",
            "inputs": [
                {
                    "name": "subnetId",
                    "type": "tuple",
                    "internalType": "struct SubnetID",
                    "components": [
                        {
                            "name": "root",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "route",
                            "type": "address[]",
                            "internalType": "address[]"
                        }
                    ]
                },
                {
                    "name": "to",
                    "type": "tuple",
                    "internalType": "struct FvmAddress",
                    "components": [
                        {
                            "name": "addrType",
                            "type": "uint8",
                            "internalType": "uint8"
                        },
                        {
                            "name": "payload",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "kill",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "propagate",
            "inputs": [
                {
                    "name": "msgCid",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "register",
            "inputs": [
                {
                    "name": "genesisCircSupply",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "release",
            "inputs": [
                {
                    "name": "to",
                    "type": "tuple",
                    "internalType": "struct FvmAddress",
                    "components": [
                        {
                            "name": "addrType",
                            "type": "uint8",
                            "internalType": "uint8"
                        },
                        {
                            "name": "payload",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "releaseRewardForRelayer",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "releaseStake",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "sendUserXnetMessage",
            "inputs": [
                {
                    "name": "crossMsg",
                    "type": "tuple",
                    "internalType": "struct CrossMsg",
                    "components": [
                        {
                            "name": "message",
                            "type": "tuple",
                            "internalType": "struct StorableMsg",
                            "components": [
                                {
                                    "name": "from",
                                    "type": "tuple",
                                    "internalType": "struct IPCAddress",
                                    "components": [
                                        {
                                            "name": "subnetId",
                                            "type": "tuple",
                                            "internalType": "struct SubnetID",
                                            "components": [
                                                {
                                                    "name": "root",
                                                    "type": "uint64",
                                                    "internalType": "uint64"
                                                },
                                                {
                                                    "name": "route",
                                                    "type": "address[]",
                                                    "internalType": "address[]"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "rawAddress",
                                            "type": "tuple",
                                            "internalType": "struct FvmAddress",
                                            "components": [
                                                {
                                                    "name": "addrType",
                                                    "type": "uint8",
                                                    "internalType": "uint8"
                                                },
                                                {
                                                    "name": "payload",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "to",
                                    "type": "tuple",
                                    "internalType": "struct IPCAddress",
                                    "components": [
                                        {
                                            "name": "subnetId",
                                            "type": "tuple",
                                            "internalType": "struct SubnetID",
                                            "components": [
                                                {
                                                    "name": "root",
                                                    "type": "uint64",
                                                    "internalType": "uint64"
                                                },
                                                {
                                                    "name": "route",
                                                    "type": "address[]",
                                                    "internalType": "address[]"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "rawAddress",
                                            "type": "tuple",
                                            "internalType": "struct FvmAddress",
                                            "components": [
                                                {
                                                    "name": "addrType",
                                                    "type": "uint8",
                                                    "internalType": "uint8"
                                                },
                                                {
                                                    "name": "payload",
                                                    "type": "bytes",
                                                    "internalType": "bytes"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "name": "value",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                },
                                {
                                    "name": "nonce",
                                    "type": "uint64",
                                    "internalType": "uint64"
                                },
                                {
                                    "name": "method",
                                    "type": "bytes4",
                                    "internalType": "bytes4"
                                },
                                {
                                    "name": "params",
                                    "type": "bytes",
                                    "internalType": "bytes"
                                },
                                {
                                    "name": "fee",
                                    "type": "uint256",
                                    "internalType": "uint256"
                                }
                            ]
                        },
                        {
                            "name": "wrapped",
                            "type": "bool",
                            "internalType": "bool"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        }
    ],
    "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
    "deployedBytecode": {
        "object": "0x",
        "sourceMap": "",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "addStake()": "5a627dbc",
        "commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])": "f456b39e",
        "commitParentFinality((uint256,bytes32))": "11196974",
        "createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)": "a656ca5b",
        "fund((uint64,address[]),(uint8,bytes))": "18f44b70",
        "kill()": "41c0e1b5",
        "propagate(bytes32)": "25bf0db6",
        "register(uint256)": "f207564e",
        "release((uint8,bytes))": "6b2c1eef",
        "releaseRewardForRelayer(uint256)": "d8e25572",
        "releaseStake(uint256)": "45f54485",
        "sendUserXnetMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))": "210b944e"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"crossMessagesHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"bottomUpCheckpoint\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes4\",\"name\":\"method\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct StorableMsg\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"}],\"internalType\":\"struct CrossMsg[]\",\"name\":\"messages\",\"type\":\"tuple[]\"}],\"name\":\"commitBottomUpCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ParentFinality\",\"name\":\"finality\",\"type\":\"tuple\"}],\"name\":\"commitParentFinality\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetID\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"blockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nextConfigurationNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"crossMessagesHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct BottomUpCheckpoint\",\"name\":\"checkpoint\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"membershipRootHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"membershipWeight\",\"type\":\"uint256\"}],\"name\":\"createBottomUpCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"to\",\"type\":\"tuple\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgCid\",\"type\":\"bytes32\"}],\"name\":\"propagate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"genesisCircSupply\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"to\",\"type\":\"tuple\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseRewardForRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"releaseStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"root\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"route\",\"type\":\"address[]\"}],\"internalType\":\"struct SubnetID\",\"name\":\"subnetId\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"addrType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct FvmAddress\",\"name\":\"rawAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct IPCAddress\",\"name\":\"to\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes4\",\"name\":\"method\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct StorableMsg\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"wrapped\",\"type\":\"bool\"}],\"internalType\":\"struct CrossMsg\",\"name\":\"crossMsg\",\"type\":\"tuple\"}],\"name\":\"sendUserXnetMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LimeChain team\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Gateway interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake()\":{\"notice\":\"AddStake adds stake to the collateral of a subnet.\"},\"commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])\":{\"notice\":\"commitBottomUpCheckpoint propagates the commitment of a checkpoint from a child subnet and processes the cross-messages directed to the subnets.\"},\"commitParentFinality((uint256,bytes32))\":{\"notice\":\"commit the ipc parent finality into storage\"},\"createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)\":{\"notice\":\"creates a new bottom-up checkpoint\"},\"fund((uint64,address[]),(uint8,bytes))\":{\"notice\":\"Fund injects new funds from an account of the parent chain to a subnet. This functions receives a transaction with the FILs that want to be injected in the subnet. - Funds injected are frozen. - A new fund cross-message is created and stored to propagate it to the subnet. It will be picked up by miners to include it in the next possible block. - The cross-message nonce is updated\"},\"kill()\":{\"notice\":\"Kill propagates the kill signal from a subnet actor to unregister it from th hierarchy.\"},\"propagate(bytes32)\":{\"notice\":\"Propagates the stored postbox item for the given cid\"},\"register(uint256)\":{\"notice\":\"Register is called by subnet actors to put the required collateral and register the subnet to the hierarchy.\"},\"release((uint8,bytes))\":{\"notice\":\"Release creates a new check message to release funds in parent chain This function burns the funds that will be released in the current subnet and propagates a new checkpoint message to the parent chain to signal the amount of funds that can be released for a specific address.\"},\"releaseRewardForRelayer(uint256)\":{\"notice\":\"Release reward for relayer\"},\"releaseStake(uint256)\":{\"notice\":\"Release stake recovers some collateral of the subnet\"},\"sendUserXnetMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))\":{\"notice\":\"SendUserXnetMessage sends an arbitrary cross-message to other subnet in the hierarchy. If the message includes any funds they need to be burnt (like in Release) before being propagated to the corresponding subnet. The circulating supply in each subnet needs to be updated as the message passes through them. Params expect a raw message without any subnet context (the IPC address is included in the message by the actor). Only actors are allowed to send arbitrary cross-messages as a side-effect of their execution. For plain token exchanges fund and release have to be used.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IGateway.sol\":\"IGateway\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":\\\"ds-test/=lib/forge-std/lib/ds-test/src/,forge-std/=lib/forge-std/src/,openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/,fevmate=lib/fevmate/contracts,murky/=lib/murky/src,elliptic-curve-solidity/=lib/elliptic-curve-solidity\\\"/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":elliptic-curve-solidity/=lib/elliptic-curve-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5\",\"dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593\",\"dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT\"]},\"src/enums/ConsensusType.sol\":{\"keccak256\":\"0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0\",\"dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ\"]},\"src/enums/Status.sol\":{\"keccak256\":\"0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33\",\"dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R\"]},\"src/errors/IPCErrors.sol\":{\"keccak256\":\"0x15eb85fbcb6c09c5d6aded54054d8f3bee6b2e449ee94fd8a2da546d4dd573e3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://377d571abbec85fb7a188a9555e91be7b42c291876d2d6c4717d419377c20472\",\"dweb:/ipfs/QmZNW2TgixFAMhr1XiHVWBJTgsoksPn3WhuLjwoC4LbSpa\"]},\"src/interfaces/IGateway.sol\":{\"keccak256\":\"0x295ad8441795f9030042bda033145ef9ab3ff52bde95229ebf03bbc2fdf10f62\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b283e644110d5ce45e9082c73031bd431bca2b15602298105f5a65aeca6a6d0b\",\"dweb:/ipfs/QmSM9yFvASBM5hmce19wJxEikmM7H6Dnj6AGs1GUd4RCu1\"]},\"src/lib/LibStaking.sol\":{\"keccak256\":\"0xf47162cb238c33bd87eac8d9a44bfcd360441561298df0eb71be5d0d904e1b4b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6ff82887925c6d37b4e01786038278acb935bd9b6e8f45bcf93221b1c712c31a\",\"dweb:/ipfs/QmaovtqA58YyCPZJGxsFZsUQWpfwHYR4o16XSNWh8gbK4P\"]},\"src/lib/LibStakingChangeLog.sol\":{\"keccak256\":\"0xa4273910f3ad3377843e6bf386b6a6752aa635e2962effdb50657bcbb1f53583\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://bfc0de35c4dc0ce86b7dc360a48b4ec39d68dc1f384736df2eb5181fda7e7006\",\"dweb:/ipfs/QmW7Gm2DnmpVZdJ7gMx4vcumkG6pP7UJgBskdLtuJrSrq9\"]},\"src/lib/LibSubnetActorStorage.sol\":{\"keccak256\":\"0x483439c364306ea7aa4262fc7604fdd3b0826392670df21cb70dbb5949664f7f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5a898e58b366646c36e8917059f0e3b9461a7bac7363c289bcc4975ed2a45aad\",\"dweb:/ipfs/QmXEfGaggX8wXug5NEpZozaQVyuxFSWqEZLmcabvUDK3JM\"]},\"src/lib/priority/LibMaxPQ.sol\":{\"keccak256\":\"0x2e8e8e8bcab391fee253379921ad0a1c5e5e94ae72ff5dc2a1495530767801b7\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://25743e55c8f9107c07569523835e5618ef66df7174adf5cd2ccff5c7490d168e\",\"dweb:/ipfs/QmeqTaiAvzYA2KzCEaEdgbt7mbdkStAHeerb3EBMCW6vLS\"]},\"src/lib/priority/LibMinPQ.sol\":{\"keccak256\":\"0x535dc505b2b46450762965cc555639d2b416e6b5ccab1a71db67877114d25067\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://ba7cc9b635965d426109c8964d435aa01fce0f633c628e15da524da59806b38f\",\"dweb:/ipfs/QmbeuRhBNccfgx2NMM94XVgZ9Gvb9xzqm6LsWQNnGhwgEW\"]},\"src/lib/priority/LibPQ.sol\":{\"keccak256\":\"0x4a4a7d00e928fb9173681a7c1f36b8204470f335a3870a48c131b83bc96390b7\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://48444c7f7ff0bb5719b0c17ed0393d7a40d3dca32da52bbdc31e8349150c470f\",\"dweb:/ipfs/QmRYzmRUM3W9bB2FG2J9yi12sbfJTt9fbwvyjJXrEtq4Vc\"]},\"src/structs/Checkpoint.sol\":{\"keccak256\":\"0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a\",\"dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww\"]},\"src/structs/FvmAddress.sol\":{\"keccak256\":\"0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac\",\"dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu\"]},\"src/structs/Subnet.sol\":{\"keccak256\":\"0x6b5bce150958c7cc19658df319d5488a358c90eaf74c5c9610ae13b520f64c82\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://968658955b19d84e352ddc423d176c6d22457993ae1e6ac863098d7e468b255a\",\"dweb:/ipfs/QmaAnuN5jyJQ7Yt36tFhejoWiTRSGqbZZnjSu6ARkgsFi3\"]}},\"version\":1}",
    "metadata": {
        "compiler": { "version": "0.8.19+commit.7dd6d404" },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "addStake"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct BottomUpCheckpoint",
                            "name": "bottomUpCheckpoint",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct SubnetID",
                                    "name": "subnetID",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "uint64",
                                            "name": "root",
                                            "type": "uint64"
                                        },
                                        {
                                            "internalType": "address[]",
                                            "name": "route",
                                            "type": "address[]"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "blockHeight",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "blockHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "nextConfigurationNumber",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "crossMessagesHash",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "struct CrossMsg[]",
                            "name": "messages",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "struct StorableMsg",
                                    "name": "message",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IPCAddress",
                                            "name": "from",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "struct SubnetID",
                                                    "name": "subnetId",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint64",
                                                            "name": "root",
                                                            "type": "uint64"
                                                        },
                                                        {
                                                            "internalType": "address[]",
                                                            "name": "route",
                                                            "type": "address[]"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct FvmAddress",
                                                    "name": "rawAddress",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint8",
                                                            "name": "addrType",
                                                            "type": "uint8"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "payload",
                                                            "type": "bytes"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IPCAddress",
                                            "name": "to",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "struct SubnetID",
                                                    "name": "subnetId",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint64",
                                                            "name": "root",
                                                            "type": "uint64"
                                                        },
                                                        {
                                                            "internalType": "address[]",
                                                            "name": "route",
                                                            "type": "address[]"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct FvmAddress",
                                                    "name": "rawAddress",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint8",
                                                            "name": "addrType",
                                                            "type": "uint8"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "payload",
                                                            "type": "bytes"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "value",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint64",
                                            "name": "nonce",
                                            "type": "uint64"
                                        },
                                        {
                                            "internalType": "bytes4",
                                            "name": "method",
                                            "type": "bytes4"
                                        },
                                        {
                                            "internalType": "bytes",
                                            "name": "params",
                                            "type": "bytes"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "fee",
                                            "type": "uint256"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "bool",
                                    "name": "wrapped",
                                    "type": "bool"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "commitBottomUpCheckpoint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ParentFinality",
                            "name": "finality",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "height",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "blockHash",
                                    "type": "bytes32"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "commitParentFinality"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct BottomUpCheckpoint",
                            "name": "checkpoint",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct SubnetID",
                                    "name": "subnetID",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "uint64",
                                            "name": "root",
                                            "type": "uint64"
                                        },
                                        {
                                            "internalType": "address[]",
                                            "name": "route",
                                            "type": "address[]"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "blockHeight",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "blockHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "nextConfigurationNumber",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "crossMessagesHash",
                                    "type": "bytes32"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes32",
                            "name": "membershipRootHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "membershipWeight",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "createBottomUpCheckpoint"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct SubnetID",
                            "name": "subnetId",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint64",
                                    "name": "root",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "route",
                                    "type": "address[]"
                                }
                            ]
                        },
                        {
                            "internalType": "struct FvmAddress",
                            "name": "to",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint8",
                                    "name": "addrType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "payload",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "fund"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "kill"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "msgCid",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "propagate"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "genesisCircSupply",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "register"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct FvmAddress",
                            "name": "to",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint8",
                                    "name": "addrType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "payload",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "release"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "releaseRewardForRelayer"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "releaseStake"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct CrossMsg",
                            "name": "crossMsg",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "struct StorableMsg",
                                    "name": "message",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "struct IPCAddress",
                                            "name": "from",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "struct SubnetID",
                                                    "name": "subnetId",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint64",
                                                            "name": "root",
                                                            "type": "uint64"
                                                        },
                                                        {
                                                            "internalType": "address[]",
                                                            "name": "route",
                                                            "type": "address[]"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct FvmAddress",
                                                    "name": "rawAddress",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint8",
                                                            "name": "addrType",
                                                            "type": "uint8"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "payload",
                                                            "type": "bytes"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "struct IPCAddress",
                                            "name": "to",
                                            "type": "tuple",
                                            "components": [
                                                {
                                                    "internalType": "struct SubnetID",
                                                    "name": "subnetId",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint64",
                                                            "name": "root",
                                                            "type": "uint64"
                                                        },
                                                        {
                                                            "internalType": "address[]",
                                                            "name": "route",
                                                            "type": "address[]"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "internalType": "struct FvmAddress",
                                                    "name": "rawAddress",
                                                    "type": "tuple",
                                                    "components": [
                                                        {
                                                            "internalType": "uint8",
                                                            "name": "addrType",
                                                            "type": "uint8"
                                                        },
                                                        {
                                                            "internalType": "bytes",
                                                            "name": "payload",
                                                            "type": "bytes"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "value",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint64",
                                            "name": "nonce",
                                            "type": "uint64"
                                        },
                                        {
                                            "internalType": "bytes4",
                                            "name": "method",
                                            "type": "bytes4"
                                        },
                                        {
                                            "internalType": "bytes",
                                            "name": "params",
                                            "type": "bytes"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "fee",
                                            "type": "uint256"
                                        }
                                    ]
                                },
                                {
                                    "internalType": "bool",
                                    "name": "wrapped",
                                    "type": "bool"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "sendUserXnetMessage"
                }
            ],
            "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "addStake()": {
                        "notice": "AddStake adds stake to the collateral of a subnet."
                    },
                    "commitBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool)[])": {
                        "notice": "commitBottomUpCheckpoint propagates the commitment of a checkpoint from a child subnet and processes the cross-messages directed to the subnets."
                    },
                    "commitParentFinality((uint256,bytes32))": {
                        "notice": "commit the ipc parent finality into storage"
                    },
                    "createBottomUpCheckpoint(((uint64,address[]),uint64,bytes32,uint64,bytes32),bytes32,uint256)": {
                        "notice": "creates a new bottom-up checkpoint"
                    },
                    "fund((uint64,address[]),(uint8,bytes))": {
                        "notice": "Fund injects new funds from an account of the parent chain to a subnet. This functions receives a transaction with the FILs that want to be injected in the subnet. - Funds injected are frozen. - A new fund cross-message is created and stored to propagate it to the subnet. It will be picked up by miners to include it in the next possible block. - The cross-message nonce is updated"
                    },
                    "kill()": {
                        "notice": "Kill propagates the kill signal from a subnet actor to unregister it from th hierarchy."
                    },
                    "propagate(bytes32)": {
                        "notice": "Propagates the stored postbox item for the given cid"
                    },
                    "register(uint256)": {
                        "notice": "Register is called by subnet actors to put the required collateral and register the subnet to the hierarchy."
                    },
                    "release((uint8,bytes))": {
                        "notice": "Release creates a new check message to release funds in parent chain This function burns the funds that will be released in the current subnet and propagates a new checkpoint message to the parent chain to signal the amount of funds that can be released for a specific address."
                    },
                    "releaseRewardForRelayer(uint256)": {
                        "notice": "Release reward for relayer"
                    },
                    "releaseStake(uint256)": {
                        "notice": "Release stake recovers some collateral of the subnet"
                    },
                    "sendUserXnetMessage(((((uint64,address[]),(uint8,bytes)),((uint64,address[]),(uint8,bytes)),uint256,uint64,bytes4,bytes,uint256),bool))": {
                        "notice": "SendUserXnetMessage sends an arbitrary cross-message to other subnet in the hierarchy. If the message includes any funds they need to be burnt (like in Release) before being propagated to the corresponding subnet. The circulating supply in each subnet needs to be updated as the message passes through them. Params expect a raw message without any subnet context (the IPC address is included in the message by the actor). Only actors are allowed to send arbitrary cross-messages as a side-effect of their execution. For plain token exchanges fund and release have to be used."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "\"ds-test/=lib/forge-std/lib/ds-test/src/,forge-std/=lib/forge-std/src/,openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/,fevmate=lib/fevmate/contracts,murky/=lib/murky/src,elliptic-curve-solidity/=lib/elliptic-curve-solidity\"/",
                "ds-test/=lib/forge-std/lib/ds-test/src/",
                "elliptic-curve-solidity/=lib/elliptic-curve-solidity/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "fevmate/=lib/fevmate/contracts/",
                "forge-std/=lib/forge-std/src/",
                "murky/=lib/murky/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
                "openzeppelin/=lib/openzeppelin-contracts/contracts/"
            ],
            "optimizer": { "enabled": true, "runs": 200 },
            "metadata": { "bytecodeHash": "ipfs" },
            "compilationTarget": { "src/interfaces/IGateway.sol": "IGateway" },
            "libraries": {},
            "viaIR": true
        },
        "sources": {
            "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                "keccak256": "0x67ca7745e6032aeda339ba3f5813abf9eeb4ec683520944fa878c2867aea58f1",
                "urls": [
                    "bzz-raw://c13ff04f87357176e2b267730f288013269eefce0862ea8f4bf3f420948eb7d5",
                    "dweb:/ipfs/QmQZRjF3CdCdoUvqhrT9KXYjrjmdmFQqENtuiHTMbyt6xo"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
                "keccak256": "0xeefcbb8cb69f04a18f6dc61d4811133ce9aeff96ce60820f758abc52ef55b892",
                "urls": [
                    "bzz-raw://81c61c0dd40890f6a4b1fb792bc5b5b61e821fcafa2aae6c7eda6d4f1ece2593",
                    "dweb:/ipfs/QmRLMrq6BiPS9wGu7ZC174SFYWCu6cxbU3agDw2XgJeDpT"
                ],
                "license": "MIT"
            },
            "src/enums/ConsensusType.sol": {
                "keccak256": "0xc5efd8c66b57dadaba4178c4b4d087b30cb84cbac38fb288a8c3b65075a9f59d",
                "urls": [
                    "bzz-raw://6fcffaa8e40322ae27958603884cc07d06e9efd59cf12764f28945b7a47e11d0",
                    "dweb:/ipfs/Qmc3PBovpcvj7jgVq5GwR5SkiUXBymT1tw74mvu5ccNqoZ"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/enums/Status.sol": {
                "keccak256": "0x8f5921e4df87420127988b54f67a3ccfb6fbfae767891e8ed4edbf371598e16c",
                "urls": [
                    "bzz-raw://7a81d9a00ea7a2a85cfe1b2662236412dddb55e09fa70c70a34dc4dfc5ffea33",
                    "dweb:/ipfs/QmRh4uA4491B2DVjrUtdfCTTtjpoXpKEp3Zz9CBYueNW1R"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/errors/IPCErrors.sol": {
                "keccak256": "0x15eb85fbcb6c09c5d6aded54054d8f3bee6b2e449ee94fd8a2da546d4dd573e3",
                "urls": [
                    "bzz-raw://377d571abbec85fb7a188a9555e91be7b42c291876d2d6c4717d419377c20472",
                    "dweb:/ipfs/QmZNW2TgixFAMhr1XiHVWBJTgsoksPn3WhuLjwoC4LbSpa"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/interfaces/IGateway.sol": {
                "keccak256": "0x295ad8441795f9030042bda033145ef9ab3ff52bde95229ebf03bbc2fdf10f62",
                "urls": [
                    "bzz-raw://b283e644110d5ce45e9082c73031bd431bca2b15602298105f5a65aeca6a6d0b",
                    "dweb:/ipfs/QmSM9yFvASBM5hmce19wJxEikmM7H6Dnj6AGs1GUd4RCu1"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/LibStaking.sol": {
                "keccak256": "0xf47162cb238c33bd87eac8d9a44bfcd360441561298df0eb71be5d0d904e1b4b",
                "urls": [
                    "bzz-raw://6ff82887925c6d37b4e01786038278acb935bd9b6e8f45bcf93221b1c712c31a",
                    "dweb:/ipfs/QmaovtqA58YyCPZJGxsFZsUQWpfwHYR4o16XSNWh8gbK4P"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/LibStakingChangeLog.sol": {
                "keccak256": "0xa4273910f3ad3377843e6bf386b6a6752aa635e2962effdb50657bcbb1f53583",
                "urls": [
                    "bzz-raw://bfc0de35c4dc0ce86b7dc360a48b4ec39d68dc1f384736df2eb5181fda7e7006",
                    "dweb:/ipfs/QmW7Gm2DnmpVZdJ7gMx4vcumkG6pP7UJgBskdLtuJrSrq9"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/LibSubnetActorStorage.sol": {
                "keccak256": "0x483439c364306ea7aa4262fc7604fdd3b0826392670df21cb70dbb5949664f7f",
                "urls": [
                    "bzz-raw://5a898e58b366646c36e8917059f0e3b9461a7bac7363c289bcc4975ed2a45aad",
                    "dweb:/ipfs/QmXEfGaggX8wXug5NEpZozaQVyuxFSWqEZLmcabvUDK3JM"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/priority/LibMaxPQ.sol": {
                "keccak256": "0x2e8e8e8bcab391fee253379921ad0a1c5e5e94ae72ff5dc2a1495530767801b7",
                "urls": [
                    "bzz-raw://25743e55c8f9107c07569523835e5618ef66df7174adf5cd2ccff5c7490d168e",
                    "dweb:/ipfs/QmeqTaiAvzYA2KzCEaEdgbt7mbdkStAHeerb3EBMCW6vLS"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/priority/LibMinPQ.sol": {
                "keccak256": "0x535dc505b2b46450762965cc555639d2b416e6b5ccab1a71db67877114d25067",
                "urls": [
                    "bzz-raw://ba7cc9b635965d426109c8964d435aa01fce0f633c628e15da524da59806b38f",
                    "dweb:/ipfs/QmbeuRhBNccfgx2NMM94XVgZ9Gvb9xzqm6LsWQNnGhwgEW"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/lib/priority/LibPQ.sol": {
                "keccak256": "0x4a4a7d00e928fb9173681a7c1f36b8204470f335a3870a48c131b83bc96390b7",
                "urls": [
                    "bzz-raw://48444c7f7ff0bb5719b0c17ed0393d7a40d3dca32da52bbdc31e8349150c470f",
                    "dweb:/ipfs/QmRYzmRUM3W9bB2FG2J9yi12sbfJTt9fbwvyjJXrEtq4Vc"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/structs/Checkpoint.sol": {
                "keccak256": "0x1982a747516dce183434bbf0e96b5b1fedbf3a90928beffcc046cadf47ee0746",
                "urls": [
                    "bzz-raw://253b9df56334aae80fe4a0da805e4fdc3d186fb2624edade864ae06bfd472f2a",
                    "dweb:/ipfs/QmVAaz1ViF96LjM9Aknn3vtwQ5a5oDiJRZP47ddJ1V9Fww"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/structs/FvmAddress.sol": {
                "keccak256": "0xfc8c16b96bd5b7d4a163f586bd36936f7170304de70aa487a0b11c60e5ac9069",
                "urls": [
                    "bzz-raw://6b6572d5f28a9fa12ff91d45601c063cdaf68a12b9f8e46131c6dc4cd28255ac",
                    "dweb:/ipfs/QmSC8gRWVuPKjobgDDyHbm2cmcPN8pWzbEmXKmdMZR8YKu"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "src/structs/Subnet.sol": {
                "keccak256": "0x6b5bce150958c7cc19658df319d5488a358c90eaf74c5c9610ae13b520f64c82",
                "urls": [
                    "bzz-raw://968658955b19d84e352ddc423d176c6d22457993ae1e6ac863098d7e468b255a",
                    "dweb:/ipfs/QmaAnuN5jyJQ7Yt36tFhejoWiTRSGqbZZnjSu6ARkgsFi3"
                ],
                "license": "MIT OR Apache-2.0"
            }
        },
        "version": 1
    },
    "ast": {
        "absolutePath": "src/interfaces/IGateway.sol",
        "id": 39659,
        "exportedSymbols": {
            "BottomUpCheckpoint": [47399],
            "CrossMsg": [47421],
            "FvmAddress": [47445],
            "IGateway": [39658],
            "ParentFinality": [47382],
            "SubnetID": [47472]
        },
        "nodeType": "SourceUnit",
        "src": "46:3445:52",
        "nodes": [
            {
                "id": 39563,
                "nodeType": "PragmaDirective",
                "src": "46:23:52",
                "nodes": [],
                "literals": ["solidity", "0.8", ".19"]
            },
            {
                "id": 39567,
                "nodeType": "ImportDirective",
                "src": "71:87:52",
                "nodes": [],
                "absolutePath": "src/structs/Checkpoint.sol",
                "file": "../structs/Checkpoint.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 39659,
                "sourceUnit": 47439,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 39564,
                            "name": "BottomUpCheckpoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47399,
                            "src": "79:18:52",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 39565,
                            "name": "CrossMsg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47421,
                            "src": "99:8:52",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 39566,
                            "name": "ParentFinality",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47382,
                            "src": "109:14:52",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 39569,
                "nodeType": "ImportDirective",
                "src": "159:47:52",
                "nodes": [],
                "absolutePath": "src/structs/Subnet.sol",
                "file": "../structs/Subnet.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 39659,
                "sourceUnit": 47616,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 39568,
                            "name": "SubnetID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47472,
                            "src": "167:8:52",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 39571,
                "nodeType": "ImportDirective",
                "src": "207:53:52",
                "nodes": [],
                "absolutePath": "src/structs/FvmAddress.sol",
                "file": "../structs/FvmAddress.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 39659,
                "sourceUnit": 47453,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 39570,
                            "name": "FvmAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47445,
                            "src": "215:10:52",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 39658,
                "nodeType": "ContractDefinition",
                "src": "318:3172:52",
                "nodes": [
                    {
                        "id": 39578,
                        "nodeType": "FunctionDefinition",
                        "src": "476:62:52",
                        "nodes": [],
                        "documentation": {
                            "id": 39573,
                            "nodeType": "StructuredDocumentation",
                            "src": "343:128:52",
                            "text": "@notice Register is called by subnet actors to put the required collateral\n and register the subnet to the hierarchy."
                        },
                        "functionSelector": "f207564e",
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "register",
                        "nameLocation": "485:8:52",
                        "parameters": {
                            "id": 39576,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 39575,
                                    "mutability": "mutable",
                                    "name": "genesisCircSupply",
                                    "nameLocation": "502:17:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39578,
                                    "src": "494:25:52",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 39574,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "494:7:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "493:27:52"
                        },
                        "returnParameters": {
                            "id": 39577,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "537:0:52"
                        },
                        "scope": 39658,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 39582,
                        "nodeType": "FunctionDefinition",
                        "src": "611:37:52",
                        "nodes": [],
                        "documentation": {
                            "id": 39579,
                            "nodeType": "StructuredDocumentation",
                            "src": "544:62:52",
                            "text": "@notice AddStake adds stake to the collateral of a subnet."
                        },
                        "functionSelector": "5a627dbc",
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "addStake",
                        "nameLocation": "620:8:52",
                        "parameters": {
                            "id": 39580,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "628:2:52"
                        },
                        "returnParameters": {
                            "id": 39581,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "647:0:52"
                        },
                        "scope": 39658,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 39588,
                        "nodeType": "FunctionDefinition",
                        "src": "723:47:52",
                        "nodes": [],
                        "documentation": {
                            "id": 39583,
                            "nodeType": "StructuredDocumentation",
                            "src": "654:64:52",
                            "text": "@notice Release stake recovers some collateral of the subnet"
                        },
                        "functionSelector": "45f54485",
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "releaseStake",
                        "nameLocation": "732:12:52",
                        "parameters": {
                            "id": 39586,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 39585,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "753:6:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39588,
                                    "src": "745:14:52",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 39584,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "745:7:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "744:16:52"
                        },
                        "returnParameters": {
                            "id": 39587,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "769:0:52"
                        },
                        "scope": 39658,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 39594,
                        "nodeType": "FunctionDefinition",
                        "src": "819:58:52",
                        "nodes": [],
                        "documentation": {
                            "id": 39589,
                            "nodeType": "StructuredDocumentation",
                            "src": "776:38:52",
                            "text": "@notice Release reward for relayer"
                        },
                        "functionSelector": "d8e25572",
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "releaseRewardForRelayer",
                        "nameLocation": "828:23:52",
                        "parameters": {
                            "id": 39592,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 39591,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "860:6:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39594,
                                    "src": "852:14:52",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 39590,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "852:7:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "851:16:52"
                        },
                        "returnParameters": {
                            "id": 39593,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "876:0:52"
                        },
                        "scope": 39658,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 39598,
                        "nodeType": "FunctionDefinition",
                        "src": "995:25:52",
                        "nodes": [],
                        "documentation": {
                            "id": 39595,
                            "nodeType": "StructuredDocumentation",
                            "src": "883:107:52",
                            "text": "@notice Kill propagates the kill signal from a subnet actor to unregister it from th\n hierarchy."
                        },
                        "functionSelector": "41c0e1b5",
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "kill",
                        "nameLocation": "1004:4:52",
                        "parameters": {
                            "id": 39596,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1008:2:52"
                        },
                        "returnParameters": {
                            "id": 39597,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1019:0:52"
                        },
                        "scope": 39658,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 39609,
                        "nodeType": "FunctionDefinition",
                        "src": "1195:143:52",
                        "nodes": [],
                        "documentation": {
                            "id": 39599,
                            "nodeType": "StructuredDocumentation",
                            "src": "1026:164:52",
                            "text": "@notice commitBottomUpCheckpoint propagates the commitment of a checkpoint from a child subnet and\n processes the cross-messages directed to the subnets."
                        },
                        "functionSelector": "f456b39e",
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "commitBottomUpCheckpoint",
                        "nameLocation": "1204:24:52",
                        "parameters": {
                            "id": 39607,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 39602,
                                    "mutability": "mutable",
                                    "name": "bottomUpCheckpoint",
                                    "nameLocation": "1266:18:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39609,
                                    "src": "1238:46:52",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47399_calldata_ptr",
                                        "typeString": "struct BottomUpCheckpoint"
                                    },
                                    "typeName": {
                                        "id": 39601,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 39600,
                                            "name": "BottomUpCheckpoint",
                                            "nameLocations": ["1238:18:52"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 47399,
                                            "src": "1238:18:52"
                                        },
                                        "referencedDeclaration": 47399,
                                        "src": "1238:18:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47399_storage_ptr",
                                            "typeString": "struct BottomUpCheckpoint"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 39606,
                                    "mutability": "mutable",
                                    "name": "messages",
                                    "nameLocation": "1314:8:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39609,
                                    "src": "1294:28:52",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_CrossMsg_$47421_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "struct CrossMsg[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 39604,
                                            "nodeType": "UserDefinedTypeName",
                                            "pathNode": {
                                                "id": 39603,
                                                "name": "CrossMsg",
                                                "nameLocations": ["1294:8:52"],
                                                "nodeType": "IdentifierPath",
                                                "referencedDeclaration": 47421,
                                                "src": "1294:8:52"
                                            },
                                            "referencedDeclaration": 47421,
                                            "src": "1294:8:52",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_CrossMsg_$47421_storage_ptr",
                                                "typeString": "struct CrossMsg"
                                            }
                                        },
                                        "id": 39605,
                                        "nodeType": "ArrayTypeName",
                                        "src": "1294:10:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_CrossMsg_$47421_storage_$dyn_storage_ptr",
                                            "typeString": "struct CrossMsg[]"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1228:100:52"
                        },
                        "returnParameters": {
                            "id": 39608,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1337:0:52"
                        },
                        "scope": 39658,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 39619,
                        "nodeType": "FunctionDefinition",
                        "src": "1783:83:52",
                        "nodes": [],
                        "documentation": {
                            "id": 39610,
                            "nodeType": "StructuredDocumentation",
                            "src": "1344:434:52",
                            "text": "Fund injects new funds from an account of the parent chain to a subnet.\n This functions receives a transaction with the FILs that want to be injected in the subnet.\n - Funds injected are frozen.\n - A new fund cross-message is created and stored to propagate it to the subnet. It will be\n picked up by miners to include it in the next possible block.\n - The cross-message nonce is updated"
                        },
                        "functionSelector": "18f44b70",
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "fund",
                        "nameLocation": "1792:4:52",
                        "parameters": {
                            "id": 39617,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 39613,
                                    "mutability": "mutable",
                                    "name": "subnetId",
                                    "nameLocation": "1815:8:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39619,
                                    "src": "1797:26:52",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SubnetID_$47472_calldata_ptr",
                                        "typeString": "struct SubnetID"
                                    },
                                    "typeName": {
                                        "id": 39612,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 39611,
                                            "name": "SubnetID",
                                            "nameLocations": ["1797:8:52"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 47472,
                                            "src": "1797:8:52"
                                        },
                                        "referencedDeclaration": 47472,
                                        "src": "1797:8:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_SubnetID_$47472_storage_ptr",
                                            "typeString": "struct SubnetID"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 39616,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1845:2:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39619,
                                    "src": "1825:22:52",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FvmAddress_$47445_calldata_ptr",
                                        "typeString": "struct FvmAddress"
                                    },
                                    "typeName": {
                                        "id": 39615,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 39614,
                                            "name": "FvmAddress",
                                            "nameLocations": ["1825:10:52"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 47445,
                                            "src": "1825:10:52"
                                        },
                                        "referencedDeclaration": 47445,
                                        "src": "1825:10:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FvmAddress_$47445_storage_ptr",
                                            "typeString": "struct FvmAddress"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1796:52:52"
                        },
                        "returnParameters": {
                            "id": 39618,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1865:0:52"
                        },
                        "scope": 39658,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 39626,
                        "nodeType": "FunctionDefinition",
                        "src": "2198:58:52",
                        "nodes": [],
                        "documentation": {
                            "id": 39620,
                            "nodeType": "StructuredDocumentation",
                            "src": "1872:321:52",
                            "text": "@notice Release creates a new check message to release funds in parent chain\n This function burns the funds that will be released in the current subnet\n and propagates a new checkpoint message to the parent chain to signal\n the amount of funds that can be released for a specific address."
                        },
                        "functionSelector": "6b2c1eef",
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "release",
                        "nameLocation": "2207:7:52",
                        "parameters": {
                            "id": 39624,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 39623,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "2235:2:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39626,
                                    "src": "2215:22:52",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FvmAddress_$47445_calldata_ptr",
                                        "typeString": "struct FvmAddress"
                                    },
                                    "typeName": {
                                        "id": 39622,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 39621,
                                            "name": "FvmAddress",
                                            "nameLocations": ["2215:10:52"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 47445,
                                            "src": "2215:10:52"
                                        },
                                        "referencedDeclaration": 47445,
                                        "src": "2215:10:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FvmAddress_$47445_storage_ptr",
                                            "typeString": "struct FvmAddress"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2214:24:52"
                        },
                        "returnParameters": {
                            "id": 39625,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2255:0:52"
                        },
                        "scope": 39658,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 39633,
                        "nodeType": "FunctionDefinition",
                        "src": "2926:72:52",
                        "nodes": [],
                        "documentation": {
                            "id": 39627,
                            "nodeType": "StructuredDocumentation",
                            "src": "2262:659:52",
                            "text": "@notice SendUserXnetMessage sends an arbitrary cross-message to other subnet in the hierarchy.\n If the message includes any funds they need to be burnt (like in Release)\n before being propagated to the corresponding subnet.\n The circulating supply in each subnet needs to be updated as the message passes through them.\n Params expect a raw message without any subnet context (the IPC address is\n included in the message by the actor). Only actors are allowed to send arbitrary\n cross-messages as a side-effect of their execution. For plain token exchanges\n fund and release have to be used."
                        },
                        "functionSelector": "210b944e",
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "sendUserXnetMessage",
                        "nameLocation": "2935:19:52",
                        "parameters": {
                            "id": 39631,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 39630,
                                    "mutability": "mutable",
                                    "name": "crossMsg",
                                    "nameLocation": "2971:8:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39633,
                                    "src": "2955:24:52",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CrossMsg_$47421_memory_ptr",
                                        "typeString": "struct CrossMsg"
                                    },
                                    "typeName": {
                                        "id": 39629,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 39628,
                                            "name": "CrossMsg",
                                            "nameLocations": ["2955:8:52"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 47421,
                                            "src": "2955:8:52"
                                        },
                                        "referencedDeclaration": 47421,
                                        "src": "2955:8:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CrossMsg_$47421_storage_ptr",
                                            "typeString": "struct CrossMsg"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2954:26:52"
                        },
                        "returnParameters": {
                            "id": 39632,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2997:0:52"
                        },
                        "scope": 39658,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 39639,
                        "nodeType": "FunctionDefinition",
                        "src": "3073:52:52",
                        "nodes": [],
                        "documentation": {
                            "id": 39634,
                            "nodeType": "StructuredDocumentation",
                            "src": "3004:64:52",
                            "text": "@notice Propagates the stored postbox item for the given cid"
                        },
                        "functionSelector": "25bf0db6",
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "propagate",
                        "nameLocation": "3082:9:52",
                        "parameters": {
                            "id": 39637,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 39636,
                                    "mutability": "mutable",
                                    "name": "msgCid",
                                    "nameLocation": "3100:6:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39639,
                                    "src": "3092:14:52",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 39635,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3092:7:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3091:16:52"
                        },
                        "returnParameters": {
                            "id": 39638,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3124:0:52"
                        },
                        "scope": 39658,
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 39646,
                        "nodeType": "FunctionDefinition",
                        "src": "3191:73:52",
                        "nodes": [],
                        "documentation": {
                            "id": 39640,
                            "nodeType": "StructuredDocumentation",
                            "src": "3131:55:52",
                            "text": "@notice commit the ipc parent finality into storage"
                        },
                        "functionSelector": "11196974",
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "commitParentFinality",
                        "nameLocation": "3200:20:52",
                        "parameters": {
                            "id": 39644,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 39643,
                                    "mutability": "mutable",
                                    "name": "finality",
                                    "nameLocation": "3245:8:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39646,
                                    "src": "3221:32:52",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ParentFinality_$47382_calldata_ptr",
                                        "typeString": "struct ParentFinality"
                                    },
                                    "typeName": {
                                        "id": 39642,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 39641,
                                            "name": "ParentFinality",
                                            "nameLocations": ["3221:14:52"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 47382,
                                            "src": "3221:14:52"
                                        },
                                        "referencedDeclaration": 47382,
                                        "src": "3221:14:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ParentFinality_$47382_storage_ptr",
                                            "typeString": "struct ParentFinality"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3220:34:52"
                        },
                        "returnParameters": {
                            "id": 39645,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3263:0:52"
                        },
                        "scope": 39658,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 39657,
                        "nodeType": "FunctionDefinition",
                        "src": "3321:167:52",
                        "nodes": [],
                        "documentation": {
                            "id": 39647,
                            "nodeType": "StructuredDocumentation",
                            "src": "3270:46:52",
                            "text": "@notice creates a new bottom-up checkpoint"
                        },
                        "functionSelector": "a656ca5b",
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "createBottomUpCheckpoint",
                        "nameLocation": "3330:24:52",
                        "parameters": {
                            "id": 39655,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 39650,
                                    "mutability": "mutable",
                                    "name": "checkpoint",
                                    "nameLocation": "3392:10:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39657,
                                    "src": "3364:38:52",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47399_calldata_ptr",
                                        "typeString": "struct BottomUpCheckpoint"
                                    },
                                    "typeName": {
                                        "id": 39649,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 39648,
                                            "name": "BottomUpCheckpoint",
                                            "nameLocations": ["3364:18:52"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 47399,
                                            "src": "3364:18:52"
                                        },
                                        "referencedDeclaration": 47399,
                                        "src": "3364:18:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_BottomUpCheckpoint_$47399_storage_ptr",
                                            "typeString": "struct BottomUpCheckpoint"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 39652,
                                    "mutability": "mutable",
                                    "name": "membershipRootHash",
                                    "nameLocation": "3420:18:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39657,
                                    "src": "3412:26:52",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 39651,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3412:7:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 39654,
                                    "mutability": "mutable",
                                    "name": "membershipWeight",
                                    "nameLocation": "3456:16:52",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 39657,
                                    "src": "3448:24:52",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 39653,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3448:7:52",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3354:124:52"
                        },
                        "returnParameters": {
                            "id": 39656,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3487:0:52"
                        },
                        "scope": 39658,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "IGateway",
                "contractDependencies": [],
                "contractKind": "interface",
                "documentation": {
                    "id": 39572,
                    "nodeType": "StructuredDocumentation",
                    "src": "262:56:52",
                    "text": "@title Gateway interface\n @author LimeChain team"
                },
                "fullyImplemented": false,
                "linearizedBaseContracts": [39658],
                "name": "IGateway",
                "nameLocation": "328:8:52",
                "scope": 39659,
                "usedErrors": []
            }
        ],
        "license": "MIT OR Apache-2.0"
    },
    "id": 52
}
